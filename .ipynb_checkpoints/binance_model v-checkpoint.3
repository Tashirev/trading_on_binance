{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2691e855",
   "metadata": {},
   "source": [
    "## Импорты"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 553,
   "id": "aee27c47",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import plotly.express as px\n",
    "import time\n",
    "from datetime import datetime\n",
    "\n",
    "from tqdm import tqdm\n",
    "\n",
    "from statsmodels.tsa.seasonal import seasonal_decompose\n",
    "\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "import phik\n",
    "from phik.report import plot_correlation_matrix\n",
    "from phik import report\n",
    "\n",
    "import seaborn as sns\n",
    "\n",
    "import torch\n",
    "import torchvision\n",
    "import torchvision.transforms as transforms\n",
    "import torch.nn as nn\n",
    "import torch.nn.functional as F\n",
    "import torch.utils.data as data_utils\n",
    "import torch.optim as optim\n",
    "\n",
    "pd.set_option(\"display.max_columns\", None)\n",
    "RANDOM = 1111\n",
    "PERIOD = 100\n",
    "FEATURES_LENGHT = 224\n",
    "BATCH_SIZE = 512\n",
    "EPOCH = 3000\n",
    "FEE = 0.001"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "819ba178",
   "metadata": {},
   "source": [
    "# Создание признаков"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "65a05235",
   "metadata": {},
   "source": [
    "## Считывание данных из файла"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 554,
   "id": "938b7685",
   "metadata": {},
   "outputs": [],
   "source": [
    "trend = pd.read_csv('binance_features/BTC_ETH_BNB_ok.csv', sep=';', names=['BTC/USTD','ETH/USTD','BNB/USTD', 'server_time'])\n",
    "trend['server_time'] = trend['server_time'].apply(lambda x: datetime.utcfromtimestamp(int(str(x)[:10])).strftime('%Y-%m-%d %H:%M:%S'))\n",
    "trend['server_time'] = pd.to_datetime(trend['server_time'])\n",
    "trend = trend.set_index('server_time')\n",
    "trend['numeric_index'] = range(trend.shape[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "76443d7c",
   "metadata": {},
   "source": [
    "## Получение среза по датам"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 555,
   "id": "a9b782e3",
   "metadata": {},
   "outputs": [],
   "source": [
    "#trend = trend[(trend.index >= datetime(2022, 7, 17)) & (trend.index < datetime(2022, 7, 18))]\n",
    "#trend = trend[47000:51000]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "92521973",
   "metadata": {},
   "source": [
    "## Создание признаков"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4247b32",
   "metadata": {},
   "source": [
    "### 'BTC/BNB', 'BTC/ETH', 'ETH/BNB'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 556,
   "id": "ffbe4b1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "trend['BTC/BNB'] = trend['BTC/USTD']/trend['BNB/USTD']\n",
    "trend['BTC/ETH'] = trend['BTC/USTD']/trend['ETH/USTD']\n",
    "trend['ETH/BNB'] = trend['ETH/USTD']/trend['BNB/USTD']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e229e3e",
   "metadata": {},
   "source": [
    "#### delta BASE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 557,
   "id": "002ba082",
   "metadata": {},
   "outputs": [],
   "source": [
    "trend['BTC/ETH_delta'] = trend['BTC/ETH'] - trend['BTC/ETH'].shift(1)\n",
    "trend['BTC/BNB_delta'] = trend['BTC/BNB'] - trend['BTC/BNB'].shift(1)\n",
    "trend['ETH/BNB_delta'] = trend['ETH/BNB'] - trend['ETH/BNB'].shift(1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d265fa4",
   "metadata": {},
   "source": [
    "### ratio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 558,
   "id": "9ada5f64",
   "metadata": {},
   "outputs": [],
   "source": [
    "trend['btc_bnb_ratio'] = trend['BTC/BNB']/trend['BTC/BNB'][0]\n",
    "trend['btc_eth_ratio'] = trend['BTC/ETH']/trend['BTC/ETH'][0]\n",
    "trend['eth_bnb_ratio'] = trend['ETH/BNB']/trend['ETH/BNB'][0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "58fdd633",
   "metadata": {},
   "source": [
    "### mean\n",
    " Среднее по количеству стобцов PERIOD * 2 + 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 559,
   "id": "a4b52355",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\2594479708.py:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  trend[column + '_' + str(period)] = trend[column].shift(period)\n"
     ]
    }
   ],
   "source": [
    "for column in ('btc_bnb_ratio', 'btc_eth_ratio', 'eth_bnb_ratio'):\n",
    "    # создание столбцов shift\n",
    "    for period in range(-PERIOD, (PERIOD+1)):\n",
    "        trend[column + '_' + str(period)] = trend[column].shift(period)\n",
    "    # получение среднего по столбцам  shift\n",
    "    trend[column + '_mean'] = trend[[column + '_' + str(x) for x in range(-PERIOD, (PERIOD+1))]].mean(axis=1)\n",
    "    # удаление столбцов shift\n",
    "    trend = trend.drop(columns = [column + '_' + str(x) for x in range(-PERIOD, (PERIOD+1))])"
   ]
  },
  {
   "cell_type": "raw",
   "id": "761e9875",
   "metadata": {},
   "source": [
    "fig, ax = plt.subplots()\n",
    "sns.lineplot(data=trend, x='server_time', y ='btc_eth_ratio_mean', ax=ax)\n",
    "sns.lineplot(data=trend, x='server_time', y ='btc_bnb_ratio_mean', ax=ax)\n",
    "sns.lineplot(data=trend, x='server_time', y ='eth_bnb_ratio_mean', ax=ax)\n",
    "plt.title('Trend')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "47224b9a",
   "metadata": {},
   "source": [
    "#### mean delta"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 560,
   "id": "e7ac5866",
   "metadata": {},
   "outputs": [],
   "source": [
    "trend['btc_eth_ratio_mean_delta'] = trend['btc_eth_ratio_mean'] - trend['btc_eth_ratio_mean'].shift(1)\n",
    "trend['btc_bnb_ratio_mean_delta'] = trend['btc_bnb_ratio_mean'] - trend['btc_bnb_ratio_mean'].shift(1)\n",
    "trend['eth_bnb_ratio_mean_delta'] = trend['eth_bnb_ratio_mean'] - trend['eth_bnb_ratio_mean'].shift(1)"
   ]
  },
  {
   "cell_type": "raw",
   "id": "b628907e",
   "metadata": {},
   "source": [
    "sns.histplot(data=trend, x=\"btc_eth_ratio_mean_delta\", kde=True, bins=100)\n",
    "plt.title('Delta trend hist')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "594bb5bd",
   "metadata": {},
   "source": [
    "### buy, sell"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "23e2a771",
   "metadata": {},
   "source": [
    "#### Минимумы и максимумы среднего"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 561,
   "id": "1d64ab25",
   "metadata": {},
   "outputs": [],
   "source": [
    "for column in ('btc_eth_ratio_mean_delta', 'btc_bnb_ratio_mean_delta', 'eth_bnb_ratio_mean_delta'):\n",
    "    sign = np.sign(trend[column])\n",
    "    column = '_'.join(column.split('_')[:-1])\n",
    "    trend[column + '_min'] = ((sign*2+np.roll(sign,1)) == 1).astype('int')\n",
    "    trend[column + '_max'] = ((sign*2+np.roll(sign,1)) == -1).astype('int')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29ccd421",
   "metadata": {},
   "source": [
    "#### Выбор локальных минимумов."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 562,
   "id": "b2111ba9",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: total: 24.6 s\n",
      "Wall time: 23.1 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "for column in ('btc_eth_ratio_mean_min', 'btc_bnb_ratio_mean_min', 'eth_bnb_ratio_mean_min'):\n",
    "\n",
    "    list_idx = trend[trend[column] == 1]['numeric_index'].values\n",
    "    for idx in list_idx:\n",
    "#         print(idx)\n",
    "        index_min = trend[trend['numeric_index'] == idx].index\n",
    "        idx_range = range(idx-PERIOD, idx+PERIOD)\n",
    "#         print(index_min)\n",
    "        range_table = trend.query('numeric_index in @idx_range')['_'.join(column.split('_')[:-2])]\n",
    "        range_table_min = range_table.min()\n",
    "        index_buy = range_table[range_table == range_table_min].index\n",
    "#         print(index_buy)\n",
    "        trend.loc[index_min, column] = 0\n",
    "        trend.loc[index_buy, column] = 1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "112f8c32",
   "metadata": {},
   "source": [
    "#### Выбор локальных максимумов."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 563,
   "id": "4c26338d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: total: 24.2 s\n",
      "Wall time: 23 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "for column in ('btc_eth_ratio_mean_max', 'btc_bnb_ratio_mean_max', 'eth_bnb_ratio_mean_max'):\n",
    "\n",
    "    list_idx = trend[trend[column] == 1]['numeric_index'].values\n",
    "    for idx in list_idx:\n",
    "#         print(idx)\n",
    "        index_max = trend[trend['numeric_index'] == idx].index\n",
    "        idx_range = range(idx-PERIOD, idx+PERIOD)\n",
    "#         print(index_max)\n",
    "        range_table = trend.query('numeric_index in @idx_range')['_'.join(column.split('_')[:-2])]\n",
    "        range_table_max = range_table.max()\n",
    "        index_sell = range_table[range_table == range_table_max].index\n",
    "#         print(index_sell)\n",
    "        trend.loc[index_max, column] = 0\n",
    "        trend.loc[index_sell, column] = 1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e834a93d",
   "metadata": {},
   "source": [
    "#### Профит каждой сделки"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 564,
   "id": "97ede69e",
   "metadata": {},
   "outputs": [],
   "source": [
    "for column in ('btc_bnb', 'btc_eth', 'eth_bnb'):\n",
    "    trend[column + '_deal'] = trend[column + '_ratio_mean_min'] + trend[column + '_ratio_mean_max']\n",
    "    trend[column + '_profit'] = abs(trend[trend[column + '_deal'] == 1][column + '_ratio'] - trend[trend[column + '_deal'] == 1][column + '_ratio'].shift(-1))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cfab9e03",
   "metadata": {},
   "source": [
    "#### Более одной продажи (двойные сделки)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 565,
   "id": "b1bf86c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "trend['duble_buy'] = (trend['btc_bnb_deal']+\n",
    "                      trend['btc_eth_deal']+\n",
    "                      trend['eth_bnb_deal'])>1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d09ffd08",
   "metadata": {},
   "source": [
    "#### Устранение двойных сделок"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 566,
   "id": "68689802",
   "metadata": {},
   "outputs": [],
   "source": [
    "trend['btc_bnb_profit'] = trend['btc_bnb_deal']*trend['btc_bnb_profit']\n",
    "trend['btc_eth_profit'] = trend['btc_eth_deal']*trend['btc_eth_profit']\n",
    "trend['eth_bnb_profit'] = trend['eth_bnb_deal']*trend['eth_bnb_profit']\n",
    "\n",
    "trend['profit_max'] = trend[trend['duble_buy']][['btc_bnb_profit','btc_eth_profit','eth_bnb_profit']].idxmax(axis=1)\n",
    "\n",
    "trend.loc[trend['profit_max'] == 'btc_bnb_profit',['btc_eth_ratio_mean_min', 'btc_eth_ratio_mean_max','eth_bnb_ratio_mean_min','eth_bnb_ratio_mean_max']] = 0\n",
    "trend.loc[trend['profit_max'] == 'btc_eth_profit',['btc_bnb_ratio_mean_min', 'btc_bnb_ratio_mean_max','eth_bnb_ratio_mean_min','eth_bnb_ratio_mean_max']] = 0\n",
    "trend.loc[trend['profit_max'] == 'eth_bnb_profit',['btc_eth_ratio_mean_min', 'btc_eth_ratio_mean_max','btc_bnb_ratio_mean_min','btc_bnb_ratio_mean_max']] = 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 567,
   "id": "38147f58",
   "metadata": {},
   "outputs": [],
   "source": [
    "columns = ['btc_bnb', 'btc_eth', 'eth_bnb']\n",
    "for column in columns:\n",
    "\n",
    "    # Подтягиваем покупку и продажу к цене, для удобства отображения на графике и оценки сделок\n",
    "    trend[column + '_min_price'] = trend[column + '_ratio_mean_min']*trend[column + '_ratio']\n",
    "    trend[column + '_max_price'] = trend[column + '_ratio_mean_max']*trend[column + '_ratio']    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 580,
   "id": "1939174d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "# sns.lineplot(data=trend[48000:50000], x='server_time', y ='btc_bnb_ratio', ax=ax)\n",
    "# sns.lineplot(data=trend[48000:50000], x='server_time', y ='btc_bnb_ratio_mean', ax=ax)\n",
    "# sns.scatterplot(data=trend[48000:50000], x='server_time', y ='btc_bnb_min_price', ax=ax, color='green')\n",
    "# sns.scatterplot(data=trend[48000:50000], x='server_time', y ='btc_bnb_max_price', ax=ax, color='red')\n",
    "sns.lineplot(data=trend[:3000], x='server_time', y ='btc_bnb_ratio', ax=ax)\n",
    "sns.lineplot(data=trend[:3000], x='server_time', y ='btc_bnb_ratio_mean', ax=ax)\n",
    "sns.scatterplot(data=trend[:3000], x='server_time', y ='btc_bnb_min_price', ax=ax, color='green')\n",
    "sns.scatterplot(data=trend[:3000], x='server_time', y ='btc_bnb_max_price', ax=ax, color='red')\n",
    "plt.title('Features')\n",
    "plt.ylim([0.98, 1.02])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de4e0c94",
   "metadata": {},
   "source": [
    "#### Устранение подряд идущих одинаковых сделок (продажа и покупка должны чередоваться)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 569,
   "id": "b1159230",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\571222238.py:16: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  min_price.loc[min_price == 0] =10\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\571222238.py:16: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  min_price.loc[min_price == 0] =10\n",
      "C:\\Users\\denis\\AppData\\Local\\Temp\\ipykernel_11280\\571222238.py:16: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  min_price.loc[min_price == 0] =10\n"
     ]
    }
   ],
   "source": [
    "columns = ['btc_bnb', 'btc_eth', 'eth_bnb']\n",
    "for column in columns:\n",
    "\n",
    "\n",
    "    # выделение локальных максимумов через разницу со сдвигами +- 1, обе разницы должны быть положительными\n",
    "    max_price = trend[(trend[column + '_max_price'] - trend[column + '_min_price']) !=0][column + '_max_price']\n",
    "    max_price_true = (max_price-max_price.shift(-1) > 0) & (max_price-max_price.shift(1) > 0)\n",
    "    trend[column + '_max_price'] = (trend[column + '_max_price']*max_price_true).fillna(0)\n",
    "    trend[column + '_ratio_mean_max'] = max_price_true\n",
    "    trend[column + '_ratio_mean_max'] = trend[column + '_ratio_mean_max'].fillna(0).astype('int')\n",
    "\n",
    "\n",
    "    # выделение локальных минимумов через разницу со сдвигами +- 1, обе разницы должны быть отрицательными.\n",
    "    # предварительно 0 заменяем на 10, заведомо больше максимумов.\n",
    "    min_price = trend[(trend[column + '_max_price'] - trend[column + '_min_price']) !=0][column + '_min_price']\n",
    "    min_price.loc[min_price == 0] =10\n",
    "    min_price_true = (min_price-min_price.shift(-1) < 0) & (min_price-min_price.shift(1) < 0)\n",
    "    trend[column + '_min_price'] = (trend[column + '_min_price']*min_price_true).fillna(0)\n",
    "    trend[column + '_ratio_mean_min'] = min_price_true\n",
    "    trend[column + '_ratio_mean_min'] = trend[column + '_ratio_mean_min'].fillna(0).astype('int')\n",
    "\n",
    "del max_price, max_price_true, min_price, min_price_true"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b071cadd",
   "metadata": {},
   "source": [
    "#### График"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 579,
   "id": "2e3c30c8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "# sns.lineplot(data=trend[48000:50000], x='server_time', y ='btc_bnb_ratio', ax=ax)\n",
    "# sns.lineplot(data=trend[48000:50000], x='server_time', y ='btc_bnb_ratio_mean', ax=ax)\n",
    "# sns.scatterplot(data=trend[48000:50000], x='server_time', y ='btc_bnb_min_price', ax=ax, color='green')\n",
    "# sns.scatterplot(data=trend[48000:50000], x='server_time', y ='btc_bnb_max_price', ax=ax, color='red')\n",
    "sns.lineplot(data=trend[:3000], x='server_time', y ='btc_bnb_ratio', ax=ax)\n",
    "sns.lineplot(data=trend[:3000], x='server_time', y ='btc_bnb_ratio_mean', ax=ax)\n",
    "sns.scatterplot(data=trend[:3000], x='server_time', y ='btc_bnb_min_price', ax=ax, color='green')\n",
    "sns.scatterplot(data=trend[:3000], x='server_time', y ='btc_bnb_max_price', ax=ax, color='red')\n",
    "plt.title('Features')\n",
    "plt.ylim([0.98, 1.02])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "932aa509",
   "metadata": {},
   "source": [
    "### not_buy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 571,
   "id": "05ac8d14",
   "metadata": {},
   "outputs": [],
   "source": [
    "trend['not_buy'] = ((trend['btc_bnb_ratio_mean_min']+\n",
    "                     trend['btc_bnb_ratio_mean_max']+\n",
    "                     trend['btc_eth_ratio_mean_min']+\n",
    "                     trend['btc_eth_ratio_mean_max']+\n",
    "                     trend['eth_bnb_ratio_mean_min']+\n",
    "                     trend['eth_bnb_ratio_mean_max']) == 0).astype('int')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "00ecbacf",
   "metadata": {},
   "source": [
    "### Обрезка датафрейма с верху и низу на PERIOD"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 572,
   "id": "e9d6ca70",
   "metadata": {},
   "outputs": [],
   "source": [
    "trend = trend.iloc[PERIOD+1:-PERIOD-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 573,
   "id": "7e8e5b00",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(76563, 40)"
      ]
     },
     "execution_count": 573,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trend.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f737b231",
   "metadata": {},
   "source": [
    "### Распределение классов"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 574,
   "id": "9c140a7c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "btc_bnb_ratio_mean_min     0.398365\n",
       "btc_bnb_ratio_mean_max     0.397059\n",
       "btc_eth_ratio_mean_min     0.300406\n",
       "btc_eth_ratio_mean_max     0.297794\n",
       "eth_bnb_ratio_mean_min     0.365712\n",
       "eth_bnb_ratio_mean_max     0.380079\n",
       "not_buy                   97.860585\n",
       "dtype: float64"
      ]
     },
     "execution_count": 574,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trend[['btc_bnb_ratio_mean_min',\n",
    "       'btc_bnb_ratio_mean_max',\n",
    "       'btc_eth_ratio_mean_min',\n",
    "       'btc_eth_ratio_mean_max',\n",
    "       'eth_bnb_ratio_mean_min',\n",
    "       'eth_bnb_ratio_mean_max',\n",
    "       'not_buy']].sum()*100/trend.shape[0]"
   ]
  },
  {
   "cell_type": "raw",
   "id": "e0805138",
   "metadata": {},
   "source": [
    "btc_bnb_ratio_mean_min     0.928314\n",
    "btc_bnb_ratio_mean_max     0.954100\n",
    "btc_eth_ratio_mean_min     0.593089\n",
    "btc_eth_ratio_mean_max     0.593089\n",
    "eth_bnb_ratio_mean_min     0.541516\n",
    "eth_bnb_ratio_mean_max     0.593089\n",
    "not_buy                   95.822589"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 575,
   "id": "8aa8aa55",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(76563, 40)"
      ]
     },
     "execution_count": 575,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trend.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "70346476",
   "metadata": {},
   "source": [
    "## Создание признаков методом отжига?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dfcc2b93",
   "metadata": {},
   "source": [
    "## PyTorch"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72840ae3",
   "metadata": {},
   "source": [
    "### Выделение признаков"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 583,
   "id": "665d26f5",
   "metadata": {},
   "outputs": [],
   "source": [
    "X2_temp = trend[['BTC/BNB','BTC/ETH','ETH/BNB']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 590,
   "id": "95adf03a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(76563, 3)"
      ]
     },
     "execution_count": 590,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X2_temp.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 598,
   "id": "fe54b197",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  0%|▎                                                                           | 327/76339 [00:00<00:23, 3266.45it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(3, 224) [86.70269873 17.20144986  5.04043483]\n",
      "(3, 224) [86.70310376 17.2012743   5.04050989]\n",
      "(3, 224) [86.70354319 17.20109428  5.04058825]\n",
      "(3, 224) [86.70375542 17.20092208  5.04065112]\n",
      "(3, 224) [86.70397863 17.20074706  5.04071548]\n",
      "(3, 224) [86.70440462 17.20057748  5.04079003]\n",
      "(3, 224) [86.70453224 17.20028871  5.04088232]\n",
      "(3, 224) [86.70488792 17.19998951  5.04099103]\n",
      "(3, 224) [86.70536594 17.19972518  5.04109657]\n",
      "(3, 224) [86.70561778 17.19940518  5.04120537]\n",
      "(3, 224) [86.70578817 17.19909865  5.04130545]\n",
      "(3, 224) [86.70625792 17.19877614  5.04142766]\n",
      "(3, 224) [86.7068097  17.19844929  5.04155591]\n",
      "(3, 224) [86.70744249 17.19814521  5.04168216]\n",
      "(3, 224) [86.7080352  17.1978501   5.04180345]\n",
      "(3, 224) [86.70881494 17.19756181  5.04193363]\n",
      "(3, 224) [86.70962614 17.19725154  5.04207208]\n",
      "(3, 224) [86.71004767 17.19695996  5.04218236]\n",
      "(3, 224) [86.7103277  17.19668284  5.04228013]\n",
      "(3, 224) [86.71070963 17.19642495  5.04237818]\n",
      "(3, 224) [86.71152229 17.19615507  5.04250479]\n",
      "(3, 224) [86.71194732 17.1958927   5.04260661]\n",
      "(3, 224) [86.71250448 17.19562625  5.04271739]\n",
      "(3, 224) [86.71299746 17.19539495  5.04281404]\n",
      "(3, 224) [86.71327642 17.19512943  5.04290832]\n",
      "(3, 224) [86.71401813 17.19489035  5.04302178]\n",
      "(3, 224) [86.71466135 17.19466516  5.04312543]\n",
      "(3, 224) [86.71557789 17.19444152  5.04324451]\n",
      "(3, 224) [86.71651691 17.19420016  5.04337015]\n",
      "(3, 224) [86.71760365 17.19395771  5.04350474]\n",
      "(3, 224) [86.7185969  17.19367974  5.04364438]\n",
      "(3, 224) [86.71962988 17.19339378  5.04378867]\n",
      "(3, 224) [86.72062646 17.19308921  5.04393632]\n",
      "(3, 224) [86.72157897 17.19281901  5.04407133]\n",
      "(3, 224) [86.72240799 17.19255345  5.04419781]\n",
      "(3, 224) [86.72331573 17.1922796   5.04433124]\n",
      "(3, 224) [86.72401748 17.19198439  5.04445898]\n",
      "(3, 224) [86.7248169  17.19169229  5.0445915 ]\n",
      "(3, 224) [86.72572019 17.19143087  5.04472102]\n",
      "(3, 224) [86.72660069 17.19117403  5.04484788]\n",
      "(3, 224) [86.72765793 17.19093372  5.04498021]\n",
      "(3, 224) [86.72872352 17.19068178  5.04511643]\n",
      "(3, 224) [86.72987517 17.19043355  5.0452566 ]\n",
      "(3, 224) [86.73118502 17.19018302  5.04540657]\n",
      "(3, 224) [86.73204351 17.1899349   5.04552953]\n",
      "(3, 224) [86.7332566  17.18964199  5.04568634]\n",
      "(3, 224) [86.7342869  17.18935118  5.04583187]\n",
      "(3, 224) [86.73584027 17.18906602  5.0460062 ]\n",
      "(3, 224) [86.7377414  17.18883881  5.0461837 ]\n",
      "(3, 224) [86.73986248 17.18865505  5.04636119]\n",
      "(3, 224) [86.74194041 17.18841467  5.04655301]\n",
      "(3, 224) [86.74401336 17.18819314  5.04673893]\n",
      "(3, 224) [86.74613563 17.1879973   5.04692017]\n",
      "(3, 224) [86.74834768 17.18776485  5.04711732]\n",
      "(3, 224) [86.75079611 17.18756269  5.04731932]\n",
      "(3, 224) [86.753083   17.18730832  5.04752731]\n",
      "(3, 224) [86.75544975 17.18709421  5.04772805]\n",
      "(3, 224) [86.75749921 17.18688367  5.04790926]\n",
      "(3, 224) [86.7593993  17.18666483  5.04808423]\n",
      "(3, 224) [86.76132582 17.18642389  5.04826723]\n",
      "(3, 224) [86.76297777 17.18619964  5.04842929]\n",
      "(3, 224) [86.76439958 17.18596033  5.0485824 ]\n",
      "(3, 224) [86.76600528 17.18571849  5.04874701]\n",
      "(3, 224) [86.76740777 17.18545976  5.04890472]\n",
      "(3, 224) [86.76854867 17.18518752  5.04905119]\n",
      "(3, 224) [86.76989843 17.18491352  5.04921029]\n",
      "(3, 224) [86.7712412  17.18467663  5.04935808]\n",
      "(3, 224) [86.77233988 17.18445971  5.04948576]\n",
      "(3, 224) [86.77366644 17.18423523  5.04962891]\n",
      "(3, 224) [86.77503306 17.18401562  5.04977297]\n",
      "(3, 224) [86.77638429 17.18379864  5.04991538]\n",
      "(3, 224) [86.77793851 17.18357314  5.0500721 ]\n",
      "(3, 224) [86.77929037 17.18333841  5.05021979]\n",
      "(3, 224) [86.7808048  17.18303656  5.05039687]\n",
      "(3, 224) [86.78221999 17.18270859  5.05057577]\n",
      "(3, 224) [86.78385138 17.18233583  5.05078056]\n",
      "(3, 224) [86.78557353 17.18200712  5.05097768]\n",
      "(3, 224) [86.78746844 17.18172386  5.05117141]\n",
      "(3, 224) [86.78921842 17.18143539  5.05135824]\n",
      "(3, 224) [86.79124673 17.18114323  5.05156235]\n",
      "(3, 224) [86.79325531 17.18091789  5.05174556]\n",
      "(3, 224) [86.7956738  17.18069124  5.05195305]\n",
      "(3, 224) [86.79802577 17.18043891  5.05216422]\n",
      "(3, 224) [86.80056389 17.18023625  5.05237162]\n",
      "(3, 224) [86.80325875 17.1800594   5.05258055]\n",
      "(3, 224) [86.80667682 17.17993673  5.05281553]\n",
      "(3, 224) [86.81019216 17.17979128  5.05306287]\n",
      "(3, 224) [86.81345169 17.17963916  5.05329727]\n",
      "(3, 224) [86.81640027 17.17949677  5.05351072]\n",
      "(3, 224) [86.81924766 17.17933387  5.05372435]\n",
      "(3, 224) [86.82173534 17.17913867  5.05392659]\n",
      "(3, 224) [86.82443646 17.1789357   5.05414349]\n",
      "(3, 224) [86.82726475 17.17872371  5.0543705 ]\n",
      "(3, 224) [86.83011772 17.17847655  5.05460929]\n",
      "(3, 224) [86.83282018 17.17823127  5.05483875]\n",
      "(3, 224) [86.83529927 17.17797545  5.05505828]\n",
      "(3, 224) [86.83765104 17.17771307  5.05527232]\n",
      "(3, 224) [86.83993871 17.17744443  5.05548449]\n",
      "(3, 224) [86.84212805 17.17715089  5.05569827]\n",
      "(3, 224) [86.84415396 17.17685527  5.05590308]\n",
      "(3, 224) [86.84648669 17.17655155  5.05612808]\n",
      "(3, 224) [86.84877728 17.17628524  5.05633965]\n",
      "(3, 224) [86.85100822 17.17599423  5.05655502]\n",
      "(3, 224) [86.85351175 17.17574204  5.05677469]\n",
      "(3, 224) [86.85622912 17.17548057  5.05700957]\n",
      "(3, 224) [86.85900919 17.17522307  5.05724689]\n",
      "(3, 224) [86.86189599 17.17493473  5.05749958]\n",
      "(3, 224) [86.86524313 17.17477985  5.05773955]\n",
      "(3, 224) [86.86847002 17.17458641  5.05798389]\n",
      "(3, 224) [86.87140738 17.17436887  5.05821849]\n",
      "(3, 224) [86.87429385 17.17414411  5.05845226]\n",
      "(3, 224) [86.8771783  17.1738519   5.05870594]\n",
      "(3, 224) [86.87997382 17.17356967  5.05895152]\n",
      "(3, 224) [86.88247922 17.17326408  5.05918706]\n",
      "(3, 224) [86.88485238 17.1729372   5.05942117]\n",
      "(3, 224) [86.88712162 17.17263627  5.05964153]\n",
      "(3, 224) [86.88922222 17.17235797  5.05984543]\n",
      "(3, 224) [86.89172216 17.17210359  5.06006554]\n",
      "(3, 224) [86.89372661 17.1718455   5.06025798]\n",
      "(3, 224) [86.89552104 17.17159764  5.06043518]\n",
      "(3, 224) [86.8973602  17.17131756  5.06062442]\n",
      "(3, 224) [86.89921191 17.17106281  5.06080697]\n",
      "(3, 224) [86.90136224 17.17078597  5.06101334]\n",
      "(3, 224) [86.90328219 17.1705263   5.06120126]\n",
      "(3, 224) [86.90515138 17.17023187  5.06139647]\n",
      "(3, 224) [86.90708522 17.16994407  5.06159349]\n",
      "(3, 224) [86.90866467 17.16965723  5.06176965]\n",
      "(3, 224) [86.91005373 17.16940536  5.06192457]\n",
      "(3, 224) [86.91152853 17.16921265  5.06206714]\n",
      "(3, 224) [86.91282602 17.16901217  5.06220167]\n",
      "(3, 224) [86.91426318 17.16884635  5.06233413]\n",
      "(3, 224) [86.9153639  17.16864901  5.06245629]\n",
      "(3, 224) [86.91606819 17.16845664  5.06255394]\n",
      "(3, 224) [86.91652554 17.16825085  5.06264116]\n",
      "(3, 224) [86.9173899  17.16804534  5.06275195]\n",
      "(3, 224) [86.91812246 17.16779635  5.06286788]\n",
      "(3, 224) [86.91891668 17.16757812  5.06297832]\n",
      "(3, 224) [86.9193959  17.16737658  5.06306555]\n",
      "(3, 224) [86.92003028 17.16717063  5.0631631 ]\n",
      "(3, 224) [86.92107274 17.16700479  5.06327259]\n",
      "(3, 224) [86.92155263 17.16682527  5.06335335]\n",
      "(3, 224) [86.9217701  17.16664753  5.06341833]\n",
      "(3, 224) [86.92245293 17.16648849  5.06350489]\n",
      "(3, 224) [86.92284425 17.16632522  5.06357575]\n",
      "(3, 224) [86.92319301 17.16615599  5.06364588]\n",
      "(3, 224) [86.9237282  17.16599072  5.06372571]\n",
      "(3, 224) [86.92454583 17.16587903  5.0638062 ]\n",
      "(3, 224) [86.92543481 17.16578574  5.06388544]\n",
      "(3, 224) [86.92614713 17.16570988  5.06394926]\n",
      "(3, 224) [86.92682844 17.16564319  5.06400858]\n",
      "(3, 224) [86.92759209 17.16558     5.06407168]\n",
      "(3, 224) [86.92854262 17.16551837  5.06414519]\n",
      "(3, 224) [86.92976506 17.16542986  5.06424242]\n",
      "(3, 224) [86.93066518 17.16533769  5.06432198]\n",
      "(3, 224) [86.93154353 17.16526725  5.06439387]\n",
      "(3, 224) [86.93255463 17.16518588  5.06447671]\n",
      "(3, 224) [86.93337971 17.16509066  5.06455279]\n",
      "(3, 224) [86.93460222 17.16501821  5.0646453 ]\n",
      "(3, 224) [86.93571895 17.16492346  5.06473819]\n",
      "(3, 224) [86.93703087 17.16484228  5.06483846]\n",
      "(3, 224) [86.93809151 17.16475019  5.06492732]\n",
      "(3, 224) [86.93934933 17.16469857  5.06501573]\n",
      "(3, 224) [86.94068237 17.1646179   5.06511706]\n",
      "(3, 224) [86.94218059 17.16454579  5.06522548]\n",
      "(3, 224) [86.94366958 17.16445155  5.0653399 ]\n",
      "(3, 224) [86.94529    17.16435122  5.06546375]\n",
      "(3, 224) [86.94678318 17.16424486  5.06558199]\n",
      "(3, 224) [86.94850828 17.16415288  5.0657095 ]\n",
      "(3, 224) [86.95011964 17.16406322  5.06582969]\n",
      "(3, 224) [86.95195617 17.16396058  5.06596681]\n",
      "(3, 224) [86.95354637 17.16386613  5.06608718]\n",
      "(3, 224) [86.95537749 17.16377142  5.06622163]\n",
      "(3, 224) [86.95722609 17.16368253  5.06635539]\n",
      "(3, 224) [86.95921154 17.16359369  5.06649711]\n",
      "(3, 224) [86.96098584 17.16349279  5.0666301 ]\n",
      "(3, 224) [86.96252587 17.16340313  5.06674615]\n",
      "(3, 224) [86.96425448 17.16334354  5.06686432]\n",
      "(3, 224) [86.96591392 17.16326297  5.06698465]\n",
      "(3, 224) [86.96732872 17.16320523  5.06708404]\n",
      "(3, 224) [86.96879137 17.16318449  5.06717533]\n",
      "(3, 224) [86.97010007 17.16312701  5.06726847]\n",
      "(3, 224) [86.97136016 17.16305945  5.06736179]\n",
      "(3, 224) [86.97289779 17.16298381  5.06747364]\n",
      "(3, 224) [86.97417968 17.16288215  5.0675782 ]\n",
      "(3, 224) [86.97558343 17.16277487  5.06769154]\n",
      "(3, 224) [86.97725137 17.16266669  5.06782052]\n",
      "(3, 224) [86.97853543 17.16257643  5.06792189]\n",
      "(3, 224) [86.97982073 17.16248024  5.06802504]\n",
      "(3, 224) [86.98108228 17.16239149  5.06812466]\n",
      "(3, 224) [86.98234508 17.16231342  5.06822121]\n",
      "(3, 224) [86.98358145 17.16222253  5.06832   ]\n",
      "(3, 224) [86.98514738 17.16210893  5.06844467]\n",
      "(3, 224) [86.98664859 17.16202597  5.06855655]\n",
      "(3, 224) [86.98815094 17.16192032  5.06867519]\n",
      "(3, 224) [86.98967751 17.1618257   5.06879197]\n",
      "(3, 224) [86.99116915 17.1617301   5.06890698]\n",
      "(3, 224) [86.99266597 17.16161963  5.06902669]\n",
      "(3, 224) [86.99395102 17.1614997   5.06913684]\n",
      "(3, 224) [86.99535603 17.1613793   5.06925409]\n",
      "(3, 224) [86.99673879 17.16124526  5.06937406]\n",
      "(3, 224) [86.99808394 17.1611263   5.06948743]\n",
      "(3, 224) [86.99929197 17.16100501  5.06959349]\n",
      "(3, 224) [87.0007415  17.16089751  5.06970956]\n",
      "(3, 224) [87.00225408 17.16077475  5.0698338 ]\n",
      "(3, 224) [87.00393948 17.16066003  5.06996574]\n",
      "(3, 224) [87.00534946 17.16057196  5.0700738 ]\n",
      "(3, 224) [87.00684754 17.16049265  5.07018442]\n",
      "(3, 224) [87.00835075 17.16043372  5.07028932]\n",
      "(3, 224) [87.0100778  17.16033592  5.0704187 ]\n",
      "(3, 224) [87.01186925 17.16025814  5.07054594]\n",
      "(3, 224) [87.01360828 17.16020206  5.07066373]\n",
      "(3, 224) [87.01534496 17.16014254  5.07078238]\n",
      "(3, 224) [87.01707553 17.16012777  5.07088749]\n",
      "(3, 224) [87.01864351 17.16009321  5.07098895]\n",
      "(3, 224) [87.01989834 17.16006917  5.07106908]\n",
      "(3, 224) [87.02086402 17.16006697  5.07112594]\n",
      "(3, 224) [87.02180402 17.16003055  5.07119139]\n",
      "(3, 224) [87.02283161 17.15999895  5.07126051]\n",
      "(3, 224) [87.02389232 17.15999242  5.07132418]\n",
      "(3, 224) [87.02458902 17.15995674  5.07137524]\n",
      "(3, 224) [87.02527505 17.15993106  5.07142275]\n",
      "(3, 224) [87.0257618  17.15992735  5.07145219]\n",
      "(3, 224) [87.0265579  17.15992887  5.0714981 ]\n",
      "(3, 224) [87.02741524 17.15992661  5.0715487 ]\n",
      "(3, 224) [87.02792433 17.1598888   5.07158948]\n",
      "(3, 224) [87.02847299 17.15986835  5.07162745]\n",
      "(3, 224) [87.0291209  17.15984118  5.07167318]\n",
      "(3, 224) [87.02977876 17.15980864  5.07172108]\n",
      "(3, 224) [87.030284   17.15978882  5.07175635]\n",
      "(3, 224) [87.03077384 17.15977422  5.07178918]\n",
      "(3, 224) [87.03163864 17.15986886  5.07181167]\n",
      "(3, 224) [87.03204367 17.159987    5.07180042]\n",
      "(3, 224) [87.03250722 17.1600534   5.07180784]\n",
      "(3, 224) [87.03303466 17.16017313  5.07180324]\n",
      "(3, 224) [87.03346391 17.1603038   5.07178971]\n",
      "(3, 224) [87.03408047 17.16044805  5.07178308]\n",
      "(3, 224) [87.03442996 17.16058763  5.07176225]\n",
      "(3, 224) [87.03458325 17.16070197  5.07173745]\n",
      "(3, 224) [87.0351445  17.16084066  5.07172923]\n",
      "(3, 224) [87.03563079 17.16096618  5.07172052]\n",
      "(3, 224) [87.03594143 17.1611116   5.07169571]\n",
      "(3, 224) [87.0363274  17.16122028  5.07168615]\n",
      "(3, 224) [87.03706909 17.16134949  5.07169126]\n",
      "(3, 224) [87.03781132 17.16145257  5.07170411]\n",
      "(3, 224) [87.03849255 17.16156006  5.07171209]\n",
      "(3, 224) [87.03929285 17.16165629  5.07173035]\n",
      "(3, 224) [87.03997879 17.16177547  5.07173515]\n",
      "(3, 224) [87.04076587 17.16182693  5.07176584]\n",
      "(3, 224) [87.04151976 17.16190539  5.07178663]\n",
      "(3, 224) [87.04214194 17.16200442  5.07179368]\n",
      "(3, 224) [87.04260812 17.16210743  5.07179046]\n",
      "(3, 224) [87.04324562 17.16219641  5.07180136]\n",
      "(3, 224) [87.04360086 17.16230637  5.07178962]\n",
      "(3, 224) [87.04396408 17.16242444  5.07177593]\n",
      "(3, 224) [87.04430528 17.16258536  5.07174831]\n",
      "(3, 224) [87.04488642 17.16275844  5.07173108]\n",
      "(3, 224) [87.04533194 17.16294331  5.07170247]\n",
      "(3, 224) [87.04593027 17.16313562  5.07168057]\n",
      "(3, 224) [87.04680723 17.1633376   5.07167204]\n",
      "(3, 224) [87.04743229 17.16350672  5.07165855]\n",
      "(3, 224) [87.04819808 17.16368275  5.07165122]\n",
      "(3, 224) [87.04898291 17.16386695  5.07164257]\n",
      "(3, 224) [87.0496707  17.16402128  5.0716371 ]\n",
      "(3, 224) [87.05019552 17.1641744   5.07162249]\n",
      "(3, 224) [87.05040237 17.16432859  5.07158902]\n",
      "(3, 224) [87.05078551 17.16447733  5.07156743]\n",
      "(3, 224) [87.05094489 17.1646297   5.07153171]\n",
      "(3, 224) [87.05118612 17.16474599  5.07151143]\n",
      "(3, 224) [87.05183225 17.16486787  5.07151311]\n",
      "(3, 224) [87.05198969 17.16502326  5.07147639]\n",
      "(3, 224) [87.05241909 17.1651767   5.07145611]\n",
      "(3, 224) [87.0524513  17.16532485  5.07141423]\n",
      "(3, 224) [87.05245655 17.16538665  5.07139626]\n",
      "(3, 224) [87.05230786 17.16542164  5.07137726]\n",
      "(3, 224) [87.05193461 17.16553148  5.07132301]\n",
      "(3, 224) [87.05208902 17.16563579  5.07130117]\n",
      "(3, 224) [87.05194985 17.16573263  5.07126442]\n",
      "(3, 224) [87.05189571 17.16582238  5.07123474]\n",
      "(3, 224) [87.05137916 17.16590422  5.07118046]\n",
      "(3, 224) [87.05112042 17.16601028  5.07113403]\n",
      "(3, 224) [87.05079978 17.16607589  5.07109596]\n",
      "(3, 224) [87.05057787 17.16614015  5.07106404]\n",
      "(3, 224) [87.05061579 17.16621221  5.07104495]\n",
      "(3, 224) [87.05040732 17.16630123  5.07100651]\n",
      "(3, 224) [87.05065186 17.16638187  5.07099693]\n",
      "(3, 224) [87.05132786 17.16648333  5.07100634]\n",
      "(3, 224) [87.05190277 17.16660063  5.07100517]\n",
      "(3, 224) [87.05281314 17.16674365  5.07101595]\n",
      "(3, 224) [87.05364178 17.16687711  5.07102479]\n",
      "(3, 224) [87.05450035 17.16701708  5.07103346]\n",
      "(3, 224) [87.05536651 17.16711487  5.07105501]\n",
      "(3, 224) [87.05629928 17.16719116  5.07108681]\n",
      "(3, 224) [87.05714329 17.16727073  5.07111247]\n",
      "(3, 224) [87.05777167 17.16734002  5.0711286 ]\n",
      "(3, 224) [87.05840951 17.16740796  5.07114568]\n",
      "(3, 224) [87.05881304 17.16748899  5.07114525]\n",
      "(3, 224) [87.05939543 17.16757527  5.07115369]\n",
      "(3, 224) [87.05979427 17.16776546  5.07112069]\n",
      "(3, 224) [87.06066325 17.16793634  5.07112079]\n",
      "(3, 224) [87.06133707 17.16813673  5.07110073]\n",
      "(3, 224) [87.06176905 17.16832169  5.07107114]\n",
      "(3, 224) [87.06210999 17.168461    5.07104977]\n",
      "(3, 224) [87.06233056 17.16860695  5.07101944]\n",
      "(3, 224) [87.06249265 17.16876164  5.07098311]\n",
      "(3, 224) [87.06244285 17.16884809  5.07095464]\n",
      "(3, 224) [87.06237624 17.16896025  5.07091758]\n",
      "(3, 224) [87.06253604 17.16908608  5.07088965]\n",
      "(3, 224) [87.06218707 17.16920391  5.07083448]\n",
      "(3, 224) [87.06159211 17.16930097  5.07077113]\n",
      "(3, 224) [87.06070048 17.16935789  5.07070241]\n",
      "(3, 224) [87.05986538 17.16943227  5.0706318 ]\n",
      "(3, 224) [87.0590024  17.16948722  5.07056532]\n",
      "(3, 224) [87.05858871 17.16953341  5.07052757]\n",
      "(3, 224) [87.05805596 17.1696047   5.07047548]\n",
      "(3, 224) [87.05798927 17.16970279  5.07044258]\n",
      "(3, 224) [87.05778202 17.16980287  5.07040092]\n",
      "(3, 224) [87.05747695 17.16992543  5.07034691]\n",
      "(3, 224) [87.05721364 17.17005927  5.07029197]\n",
      "(3, 224) [87.05691636 17.17018892  5.07023632]\n",
      "(3, 224) [87.05683255 17.17032095  5.07019239]\n",
      "(3, 224) [87.05674736 17.17044831  5.07014978]\n",
      "(3, 224) [87.05673464 17.17057174  5.07011253]\n",
      "(3, 224) [87.05659812 17.17071109  5.07006337]\n",
      "(3, 224) [87.05660923 17.17084122  5.07002556]\n",
      "(3, 224) [87.05627946 17.17096285  5.06997041]\n",
      "(3, 224) [87.05623043 17.17107308  5.06993497]\n",
      "(3, 224) [87.05600072 17.17121257  5.06988037]\n",
      "(3, 224) [87.05576328 17.17129417  5.06984245]\n",
      "(3, 224) [87.05531841 17.17139273  5.06978743]\n",
      "(3, 224) [87.05480717 17.17150567  5.06972432]\n",
      "(3, 224) [87.0541033  17.1716658   5.06963604]\n",
      "(3, 224) [87.0529311  17.17168358  5.06956263]\n",
      "(3, 224) [87.05187239 17.17174554  5.06948277]\n",
      "(3, 224) [87.05102732 17.17183386  5.06940757]\n",
      "(3, 224) [87.05032861 17.17191883  5.06934185]\n",
      "(3, 224) [87.04981348 17.17208606  5.06926246]\n",
      "(3, 224) [87.04912536 17.17225129  5.0691736 ]\n",
      "(3, 224) [87.04876882 17.17242754  5.0691008 ]\n",
      "(3, 224) [87.04840246 17.17261374  5.06902449]\n",
      "(3, 224) [87.04818659 17.17277356  5.06896475]\n",
      "(3, 224) [87.04840782 17.17291669  5.06893538]\n",
      "(3, 224) [87.04809295 17.17305114  5.06887737]\n",
      "(3, 224) [87.04785145 17.173216    5.06881467]\n",
      "(3, 224) [87.04814988 17.17338832  5.06878121]\n",
      "(3, 224) [87.04844491 17.17356801  5.06874536]\n",
      "(3, 224) [87.04871338 17.17373169  5.0687127 ]\n",
      "(3, 224) [87.04888081 17.17387604  5.06867983]\n",
      "(3, 224) [87.04916355 17.1740245   5.06865248]\n",
      "(3, 224) [87.04916246 17.17417916  5.06860677]\n",
      "(3, 224) [87.04954627 17.17434428  5.06858038]\n",
      "(3, 224) [87.05008388 17.17451763  5.06856051]\n",
      "(3, 224) [87.05063699 17.17470922  5.06853616]\n",
      "(3, 224) [87.05104467 17.17488713  5.06850738]\n",
      "(3, 224) [87.05151618 17.17507134  5.06848046]\n",
      "(3, 224) [87.051971   17.17523456  5.06845877]\n",
      "(3, 224) [87.05286658 17.17542302  5.06845527]\n",
      "(3, 224) [87.05369882 17.17561729  5.0684464 ]\n",
      "(3, 224) [87.05445366 17.17579167  5.06843889]\n",
      "(3, 224) [87.05535126 17.17594219  5.06844672]\n",
      "(3, 224) [87.05627208 17.17610921  5.06845102]\n",
      "(3, 224) [87.05720411 17.17626317  5.06845983]\n",
      "(3, 224) [87.05847292 17.17640023  5.06849325]\n",
      "(3, 224) [87.05983737 17.17651982  5.06853739]\n",
      "(3, 224) [87.06118988 17.17662266  5.06858578]\n",
      "(3, 224) [87.06279339 17.17672591  5.06864866]\n",
      "(3, 224) [87.06455907 17.17683654  5.06871881]\n",
      "(3, 224) [87.06613563 17.17695766  5.06877485]\n",
      "(3, 224) [87.06768891 17.17705962  5.06883519]\n",
      "(3, 224) [87.06946528 17.17715562  5.06891029]\n",
      "(3, 224) [87.07119178 17.17723479  5.06898746]\n",
      "(3, 224) [87.072964   17.17727768  5.06907802]\n",
      "(3, 224) [87.07422225 17.17731617  5.06913992]\n",
      "(3, 224) [87.07577518 17.1773631   5.06921649]\n",
      "(3, 224) [87.07740887 17.17744184  5.06928836]\n",
      "(3, 224) [87.07879084 17.17753281  5.06934194]\n",
      "(3, 224) [87.08017202 17.17764139  5.06939028]\n",
      "(3, 224) [87.08162468 17.17774333  5.06944473]\n",
      "(3, 224) [87.08312114 17.17784571  5.06950161]\n",
      "(3, 224) [87.08458435 17.17793333  5.06956091]\n",
      "(3, 224) [87.08597683 17.17803043  5.0696133 ]\n",
      "(3, 224) [87.08721325 17.17813455  5.06965451]\n",
      "(3, 224) [87.08821681 17.17823108  5.06968442]\n",
      "(3, 224) [87.08990575 17.17835813  5.0697452 ]\n",
      "(3, 224) [87.09134645 17.1784583   5.06979946]\n",
      "(3, 224) [87.09278677 17.17857423  5.06984906]\n",
      "(3, 224) [87.09414965 17.17864707  5.06990688]\n",
      "(3, 224) [87.0955271  17.17871179  5.06996793]\n",
      "(3, 224) [87.09690474 17.17877362  5.07002985]\n",
      "(3, 224) [87.09798    17.17886165  5.07006645]\n",
      "(3, 224) [87.09883911 17.17894318  5.07009238]\n",
      "(3, 224) [87.09990096 17.17903564  5.07012689]\n",
      "(3, 224) [87.10070393 17.17913316  5.07014482]\n",
      "(3, 224) [87.10158919 17.17922244  5.07016998]\n",
      "(3, 224) [87.10227806 17.17930516  5.07018565]\n",
      "(3, 224) [87.10296528 17.17937696  5.07020446]\n",
      "(3, 224) [87.10379376 17.17943789  5.07023469]\n",
      "(3, 224) [87.10442925 17.17949887  5.07025367]\n",
      "(3, 224) [87.10508419 17.17957858  5.07026825]\n",
      "(3, 224) [87.10595307 17.17965507  5.07029623]\n",
      "(3, 224) [87.10674688 17.17971873  5.07032363]\n",
      "(3, 224) [87.10762083 17.17978977  5.07035352]\n",
      "(3, 224) [87.10842733 17.17987699  5.0703747 ]\n",
      "(3, 224) [87.10970682 17.17995359  5.07042655]\n",
      "(3, 224) [87.11105973 17.18000653  5.07048966]\n",
      "(3, 224) [87.11238919 17.18007526  5.07054676]\n",
      "(3, 224) [87.11387383 17.18016194  5.07060759]\n",
      "(3, 224) [87.11508221 17.18023953  5.07065502]\n",
      "(3, 224) [87.11644    17.18030259  5.07071545]\n",
      "(3, 224) [87.11778598 17.18037338  5.07077291]\n",
      "(3, 224) [87.11877881 17.18044334  5.07081004]\n",
      "(3, 224) [87.11982384 17.18053545  5.07084368]\n",
      "(3, 224) [87.12078817 17.18063187  5.07087135]\n",
      "(3, 224) [87.12196061 17.18076671  5.07089977]\n",
      "(3, 224) [87.12298648 17.18089831  5.07092063]\n",
      "(3, 224) [87.12410735 17.18104795  5.07094168]\n",
      "(3, 224) [87.12529964 17.18119893  5.07096648]\n",
      "(3, 224) [87.12651877 17.18133504  5.07099724]\n",
      "(3, 224) [87.12760781 17.18148131  5.07101741]\n",
      "(3, 224) [87.12847683 17.18163509  5.07102258]\n",
      "(3, 224) [87.12981013 17.18179469  5.07105306]\n",
      "(3, 224) [87.1308688  17.18194786  5.07106945]\n",
      "(3, 224) [87.13215797 17.18209792  5.07110018]\n",
      "(3, 224) [87.1333508  17.18225367  5.07112361]\n",
      "(3, 224) [87.1346318  17.1824167   5.07115003]\n",
      "(3, 224) [87.13586052 17.18259083  5.07117014]\n",
      "(3, 224) [87.13732611 17.18278515  5.07119807]\n",
      "(3, 224) [87.13857341 17.18296806  5.07121667]\n",
      "(3, 224) [87.13970824 17.18315134  5.0712286 ]\n",
      "(3, 224) [87.14076282 17.1833383   5.07123477]\n",
      "(3, 224) [87.14211647 17.18350336  5.07126482]\n",
      "(3, 224) [87.14358943 17.18366002  5.07130427]\n",
      "(3, 224) [87.14508208 17.183793    5.07135188]\n",
      "(3, 224) [87.14639036 17.18394335  5.07138361]\n",
      "(3, 224) [87.14755158 17.18409697  5.07140582]\n",
      "(3, 224) [87.14895743 17.1842074   5.07145502]\n",
      "(3, 224) [87.15027136 17.1843099   5.07150121]\n",
      "(3, 224) [87.15166288 17.18438905  5.07155882]\n",
      "(3, 224) [87.15322979 17.18447628  5.07162425]\n",
      "(3, 224) [87.15488989 17.18456804  5.07169376]\n",
      "(3, 224) [87.15673223 17.18464216  5.07177909]\n",
      "(3, 224) [87.15863229 17.18473585  5.07186202]\n",
      "(3, 224) [87.16068454 17.18480703  5.07196044]\n",
      "(3, 224) [87.16254799 17.1848565   5.07205428]\n",
      "(3, 224) [87.16448031 17.18491096  5.07215069]\n",
      "(3, 224) [87.16628174 17.18496049  5.07224095]\n",
      "(3, 224) [87.1680364  17.18497917  5.07233761]\n",
      "(3, 224) [87.16959935 17.18500543  5.07242085]\n",
      "(3, 224) [87.17112609 17.18504287  5.0724987 ]\n",
      "(3, 224) [87.17297375 17.18509177  5.07259185]\n",
      "(3, 224) [87.17457042 17.18512718  5.07267437]\n",
      "(3, 224) [87.17617251 17.18517505  5.07275353]\n",
      "(3, 224) [87.17760073 17.18522369  5.07282233]\n",
      "(3, 224) [87.17940299 17.18525974  5.07291665]\n",
      "(3, 224) [87.18102485 17.18528163  5.07300463]\n",
      "(3, 224) [87.18263198 17.18531188  5.0730893 ]\n",
      "(3, 224) [87.18441541 17.18533855  5.07318529]\n",
      "(3, 224) [87.18590989 17.18537582  5.07326133]\n",
      "(3, 224) [87.18751371 17.18541284  5.07334381]\n",
      "(3, 224) [87.18924312 17.18545784  5.07343122]\n",
      "(3, 224) [87.19048145 17.18549802  5.07349147]\n",
      "(3, 224) [87.1920405  17.18554549  5.07356823]\n",
      "(3, 224) [87.1937975  17.18558072  5.07366013]\n",
      "(3, 224) [87.19522639 17.18557792  5.07374416]\n",
      "(3, 224) [87.19640417 17.1855736   5.07381403]\n",
      "(3, 224) [87.19788358 17.18555476  5.07390574]\n",
      "(3, 224) [87.19944009 17.18554459  5.07399942]\n",
      "(3, 224) [87.20092988 17.18548111  5.07410496]\n",
      "(3, 224) [87.20208719 17.18542528  5.07418888]\n",
      "(3, 224) [87.20317004 17.18534971  5.0742743 ]\n",
      "(3, 224) [87.20445042 17.18527219  5.07437182]\n",
      "(3, 224) [87.20539738 17.18516337  5.07445917]\n",
      "(3, 224) [87.20668855 17.18509182  5.07455559]\n",
      "(3, 224) [87.20787291 17.18503323  5.07464194]\n",
      "(3, 224) [87.2092286  17.18495634  5.07474367]\n",
      "(3, 224) [87.21074418 17.18490655  5.07484665]\n",
      "(3, 224) [87.21210391 17.18487317  5.07493571]\n",
      "(3, 224) [87.21355453 17.18482509  5.07503441]\n",
      "(3, 224) [87.21479044 17.18472118  5.07513715]\n",
      "(3, 224) [87.21624418 17.18459729  5.07525849]\n",
      "(3, 224) [87.21738314 17.18447758  5.07536025]\n",
      "(3, 224) [87.21883089 17.18434682  5.07548328]\n",
      "(3, 224) [87.21987991 17.1842192   5.07558211]\n",
      "(3, 224) [87.22087152 17.18409859  5.07567554]\n",
      "(3, 224) [87.22214755 17.18399513  5.07578047]\n",
      "(3, 224) [87.22350065 17.18393088  5.07587828]\n",
      "(3, 224) [87.22456963 17.18386082  5.07596125]\n",
      "(3, 224) [87.22584344 17.18380046  5.07605329]\n",
      "(3, 224) [87.22725454 17.18374438  5.07615205]\n",
      "(3, 224) [87.22883066 17.18369937  5.07625714]\n",
      "(3, 224) [87.2301389  17.18368714  5.07633692]\n",
      "(3, 224) [87.23175851 17.18367403  5.0764351 ]\n",
      "(3, 224) [87.2333698  17.18369185  5.07652365]\n",
      "(3, 224) [87.23505434 17.18371271  5.07661555]\n",
      "(3, 224) [87.23692849 17.18374496  5.07671511]\n",
      "(3, 224) [87.23861004 17.18375946  5.07680869]\n",
      "(3, 224) [87.2402148  17.18377874  5.07689639]\n",
      "(3, 224) [87.24136547 17.18385226  5.07694164]\n",
      "(3, 224) [87.24232715 17.18389559  5.07698482]\n",
      "(3, 224) [87.24328442 17.18396411  5.0770203 ]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  1%|▉                                                                           | 948/76339 [00:00<00:28, 2633.48it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(3, 224) [87.24413005 17.1840162   5.07705413]\n",
      "(3, 224) [87.24480795 17.18406299  5.07707977]\n",
      "(3, 224) [87.24551494 17.18410995  5.07710705]\n",
      "(3, 224) [87.24635556 17.18412657  5.07715107]\n",
      "(3, 224) [87.24709092 17.18417177  5.07718053]\n",
      "(3, 224) [87.24785081 17.18422954  5.0772077 ]\n",
      "(3, 224) [87.24870811 17.18429084  5.07723949]\n",
      "(3, 224) [87.24938382 17.18435218  5.0772607 ]\n",
      "(3, 224) [87.25042358 17.18442107  5.07730087]\n",
      "(3, 224) [87.25149917 17.18450457  5.0773388 ]\n",
      "(3, 224) [87.2521797  17.18456559  5.07736038]\n",
      "(3, 224) [87.25302554 17.184632    5.07738998]\n",
      "(3, 224) [87.253636   17.18465961  5.07741734]\n",
      "(3, 224) [87.25472241 17.1847094   5.07746585]\n",
      "(3, 224) [87.25568535 17.18473865  5.07751323]\n",
      "(3, 224) [87.25637724 17.18478522  5.07753973]\n",
      "(3, 224) [87.25736447 17.18486817  5.07757267]\n",
      "(3, 224) [87.25807418 17.18494242  5.07759203]\n",
      "(3, 224) [87.25896236 17.18499873  5.07762708]\n",
      "(3, 224) [87.25957976 17.18506859  5.07764237]\n",
      "(3, 224) [87.26046784 17.18513068  5.07767571]\n",
      "(3, 224) [87.26116157 17.18520433  5.07769432]\n",
      "(3, 224) [87.26185212 17.18526494  5.07771661]\n",
      "(3, 224) [87.26245271 17.18532756  5.07773305]\n",
      "(3, 224) [87.26273465 17.18541459  5.07772375]\n",
      "(3, 224) [87.26299358 17.18549062  5.07771636]\n",
      "(3, 224) [87.26328356 17.18559671  5.0777019 ]\n",
      "(3, 224) [87.26374684 17.18571816  5.07769301]\n",
      "(3, 224) [87.26413883 17.18583952  5.07767999]\n",
      "(3, 224) [87.26465842 17.18600931  5.07766012]\n",
      "(3, 224) [87.26487745 17.18617886  5.07762286]\n",
      "(3, 224) [87.2649484  17.18634163  5.07757899]\n",
      "(3, 224) [87.26542679 17.18652334  5.07755325]\n",
      "(3, 224) [87.26600808 17.18668938  5.07753808]\n",
      "(3, 224) [87.26662713 17.18685413  5.07752549]\n",
      "(3, 224) [87.26715989 17.18702204  5.07750695]\n",
      "(3, 224) [87.26793863 17.18718404  5.07750444]\n",
      "(3, 224) [87.26838754 17.1873709   5.07747543]\n",
      "(3, 224) [87.26903456 17.18757891  5.07745172]\n",
      "(3, 224) [87.269508   17.18779512  5.07741551]\n",
      "(3, 224) [87.27022679 17.187988    5.07740043]\n",
      "(3, 224) [87.2707308  17.18814982  5.07738202]\n",
      "(3, 224) [87.2710807  17.1883022   5.07735743]\n",
      "(3, 224) [87.27168543 17.18842914  5.07735515]\n",
      "(3, 224) [87.2725257  17.18854726  5.07736915]\n",
      "(3, 224) [87.27325836 17.18868797  5.07737025]\n",
      "(3, 224) [87.27389765 17.18884887  5.07735996]\n",
      "(3, 224) [87.27471774 17.18901025  5.07736005]\n",
      "(3, 224) [87.27548313 17.18920853  5.07734611]\n",
      "(3, 224) [87.27645141 17.18940252  5.07734523]\n",
      "(3, 224) [87.27721565 17.18964457  5.07731834]\n",
      "(3, 224) [87.27799377 17.18983153  5.0773085 ]\n",
      "(3, 224) [87.27876898 17.19002656  5.0772961 ]\n",
      "(3, 224) [87.27963068 17.19021444  5.07729083]\n",
      "(3, 224) [87.28052987 17.19036575  5.07729849]\n",
      "(3, 224) [87.28156624 17.19051326  5.07731527]\n",
      "(3, 224) [87.28220764 17.19066906  5.07730666]\n",
      "(3, 224) [87.28325583 17.19081662  5.07732411]\n",
      "(3, 224) [87.28437851 17.19095537  5.07734848]\n",
      "(3, 224) [87.28536867 17.19106819  5.07737277]\n",
      "(3, 224) [87.28638919 17.19116269  5.07740422]\n",
      "(3, 224) [87.28742429 17.19125455  5.0774373 ]\n",
      "(3, 224) [87.28862393 17.19134651  5.07747992]\n",
      "(3, 224) [87.28976155 17.19143197  5.07752084]\n",
      "(3, 224) [87.29073366 17.1915165   5.07755242]\n",
      "(3, 224) [87.2913834  17.19160587  5.07756385]\n",
      "(3, 224) [87.29229762 17.19169567  5.07759051]\n",
      "(3, 224) [87.2930798  17.19175876  5.07761738]\n",
      "(3, 224) [87.29366369 17.19181314  5.07763529]\n",
      "(3, 224) [87.29431177 17.19189961  5.07764748]\n",
      "(3, 224) [87.29500352 17.19197744  5.07766476]\n",
      "(3, 224) [87.295625   17.19207122  5.07767324]\n",
      "(3, 224) [87.29640195 17.19214794  5.07769579]\n",
      "(3, 224) [87.2974078  17.19223438  5.07772877]\n",
      "(3, 224) [87.29829013 17.19232542  5.07775321]\n",
      "(3, 224) [87.29922238 17.19240782  5.0777831 ]\n",
      "(3, 224) [87.30032799 17.19249208  5.07782251]\n",
      "(3, 224) [87.30126339 17.19257833  5.07785145]\n",
      "(3, 224) [87.30219545 17.19266522  5.07788001]\n",
      "(3, 224) [87.30321695 17.19280691  5.07789762]\n",
      "(3, 224) [87.30375853 17.19294592  5.07788815]\n",
      "(3, 224) [87.30438067 17.19305435  5.07789237]\n",
      "(3, 224) [87.30498042 17.19314793  5.07789966]\n",
      "(3, 224) [87.30543675 17.19329275  5.07788351]\n",
      "(3, 224) [87.30598672 17.19343762  5.07787278]\n",
      "(3, 224) [87.30648279 17.19356493  5.0778641 ]\n",
      "(3, 224) [87.30712682 17.19373446  5.07785155]\n",
      "(3, 224) [87.30758555 17.19392139  5.07782308]\n",
      "(3, 224) [87.30804647 17.1941029   5.07779632]\n",
      "(3, 224) [87.30815843 17.19428548  5.07774898]\n",
      "(3, 224) [87.30834233 17.19447267  5.07770446]\n",
      "(3, 224) [87.30853027 17.19464165  5.07766555]\n",
      "(3, 224) [87.30877442 17.19481262  5.0776293 ]\n",
      "(3, 224) [87.30912071 17.19501051  5.07759102]\n",
      "(3, 224) [87.30928678 17.19522598  5.07753705]\n",
      "(3, 224) [87.3093256  17.19545766  5.07747091]\n",
      "(3, 224) [87.30955513 17.19567233  5.07742088]\n",
      "(3, 224) [87.30956812 17.19586851  5.07736373]\n",
      "(3, 224) [87.30976216 17.19603621  5.07732551]\n",
      "(3, 224) [87.31002656 17.1961706   5.0773012 ]\n",
      "(3, 224) [87.31029599 17.19628134  5.07728418]\n",
      "(3, 224) [87.3103288  17.19639543  5.07725241]\n",
      "(3, 224) [87.31035731 17.19651694  5.07721821]\n",
      "(3, 224) [87.31052317 17.19661476  5.07719897]\n",
      "(3, 224) [87.31078529 17.19670985  5.07718613]\n",
      "(3, 224) [87.31081226 17.1967954   5.07716245]\n",
      "(3, 224) [87.310815   17.19690512  5.07713026]\n",
      "(3, 224) [87.31051947 17.19698821  5.07708857]\n",
      "(3, 224) [87.31015145 17.19708352  5.07703906]\n",
      "(3, 224) [87.31027128 17.19717992  5.07701757]\n",
      "(3, 224) [87.31034182 17.19729439  5.0769879 ]\n",
      "(3, 224) [87.31027328 17.19741233  5.07694909]\n",
      "(3, 224) [87.31033938 17.19751994  5.07692116]\n",
      "(3, 224) [87.31070189 17.19764622  5.07690497]\n",
      "(3, 224) [87.31105173 17.19779987  5.07687999]\n",
      "(3, 224) [87.31116783 17.19794153  5.07684496]\n",
      "(3, 224) [87.31140475 17.19806447  5.07682247]\n",
      "(3, 224) [87.31162727 17.19814829  5.07681067]\n",
      "(3, 224) [87.31223306 17.19827049  5.07680983]\n",
      "(3, 224) [87.31275111 17.19840941  5.07679896]\n",
      "(3, 224) [87.31292603 17.19853943  5.07677077]\n",
      "(3, 224) [87.3135363  17.1986641   5.07676946]\n",
      "(3, 224) [87.31389947 17.19879011  5.0767534 ]\n",
      "(3, 224) [87.31452305 17.1989217   5.0767508 ]\n",
      "(3, 224) [87.31498387 17.19906033  5.07673667]\n",
      "(3, 224) [87.31556901 17.19919951  5.07672961]\n",
      "(3, 224) [87.31606243 17.19936639  5.07670906]\n",
      "(3, 224) [87.31619634 17.19952131  5.0766711 ]\n",
      "(3, 224) [87.3160368  17.199683    5.07661407]\n",
      "(3, 224) [87.31600248 17.19983477  5.07656728]\n",
      "(3, 224) [87.3163013  17.20001999  5.07652994]\n",
      "(3, 224) [87.31678794 17.20018443  5.07650965]\n",
      "(3, 224) [87.31737456 17.2003648   5.07649047]\n",
      "(3, 224) [87.31790071 17.2005656   5.07646175]\n",
      "(3, 224) [87.31848869 17.2007487   5.07644186]\n",
      "(3, 224) [87.31945458 17.2008913   5.07645591]\n",
      "(3, 224) [87.32039498 17.20101564  5.07647388]\n",
      "(3, 224) [87.32116388 17.2011136   5.07648965]\n",
      "(3, 224) [87.32184119 17.20120373  5.07650242]\n",
      "(3, 224) [87.32259716 17.20126251  5.07652901]\n",
      "(3, 224) [87.32295572 17.2013265   5.07653096]\n",
      "(3, 224) [87.32351374 17.20140325  5.07654074]\n",
      "(3, 224) [87.32398708 17.20146194  5.07655093]\n",
      "(3, 224) [87.32479118 17.20149823  5.07658696]\n",
      "(3, 224) [87.32544228 17.20153733  5.07661327]\n",
      "(3, 224) [87.32636362 17.20158549  5.07665261]\n",
      "(3, 224) [87.32712952 17.20161503  5.07668842]\n",
      "(3, 224) [87.32774081 17.20163705  5.07671746]\n",
      "(3, 224) [87.32823163 17.2016752   5.07673473]\n",
      "(3, 224) [87.32889737 17.20170844  5.07676361]\n",
      "(3, 224) [87.3293764  17.20170911  5.07679126]\n",
      "(3, 224) [87.32997767 17.20173131  5.07681966]\n",
      "(3, 224) [87.33062071 17.2017535   5.07685049]\n",
      "(3, 224) [87.33129064 17.20176194  5.07688695]\n",
      "(3, 224) [87.33177947 17.20180057  5.07690396]\n",
      "(3, 224) [87.33224789 17.20184853  5.07691702]\n",
      "(3, 224) [87.33265443 17.20190827  5.07692301]\n",
      "(3, 224) [87.33309888 17.20199969  5.07692185]\n",
      "(3, 224) [87.33368767 17.20208095  5.07693209]\n",
      "(3, 224) [87.33401233 17.20217809  5.07692226]\n",
      "(3, 224) [87.33422268 17.20227353  5.0769063 ]\n",
      "(3, 224) [87.33454361 17.20234964  5.07690248]\n",
      "(3, 224) [87.33482292 17.20243012  5.07689494]\n",
      "(3, 224) [87.33525817 17.20249186  5.076902  ]\n",
      "(3, 224) [87.33581036 17.20255655  5.07691499]\n",
      "(3, 224) [87.3364076  17.20264352  5.07692402]\n",
      "(3, 224) [87.33683365 17.20277026  5.07691134]\n",
      "(3, 224) [87.33697801 17.20290928  5.07687867]\n",
      "(3, 224) [87.33729953 17.20304472  5.07685737]\n",
      "(3, 224) [87.33795448 17.2031933   5.07685156]\n",
      "(3, 224) [87.33875314 17.20337342  5.07684479]\n",
      "(3, 224) [87.33955708 17.20353292  5.07684442]\n",
      "(3, 224) [87.34051852 17.20372236  5.07684438]\n",
      "(3, 224) [87.34120417 17.20391565  5.07682716]\n",
      "(3, 224) [87.34213063 17.20410896  5.07682394]\n",
      "(3, 224) [87.34303313 17.20430201  5.0768194 ]\n",
      "(3, 224) [87.34396393 17.20448747  5.07681876]\n",
      "(3, 224) [87.34472999 17.20469934  5.07680072]\n",
      "(3, 224) [87.3453642  17.20489861  5.07677875]\n",
      "(3, 224) [87.34611183 17.20510368  5.07676164]\n",
      "(3, 224) [87.34668269 17.20530681  5.07673484]\n",
      "(3, 224) [87.34743128 17.20550844  5.07671882]\n",
      "(3, 224) [87.34819558 17.2057295   5.07669796]\n",
      "(3, 224) [87.34886766 17.2058764   5.07669366]\n",
      "(3, 224) [87.34983629 17.20603564  5.07670297]\n",
      "(3, 224) [87.35076929 17.20618588  5.07671285]\n",
      "(3, 224) [87.35138954 17.20637011  5.07669451]\n",
      "(3, 224) [87.35223608 17.20656855  5.07668512]\n",
      "(3, 224) [87.3530025  17.2067741   5.07666899]\n",
      "(3, 224) [87.35388306 17.20700148  5.07665304]\n",
      "(3, 224) [87.35463803 17.20722815  5.07662999]\n",
      "(3, 224) [87.35506574 17.20748712  5.07657835]\n",
      "(3, 224) [87.35579077 17.20774741  5.07654362]\n",
      "(3, 224) [87.35653773 17.20803033  5.07650347]\n",
      "(3, 224) [87.35750255 17.20832003  5.07647396]\n",
      "(3, 224) [87.35867877 17.20860962  5.07645678]\n",
      "(3, 224) [87.35939336 17.20889599  5.07641367]\n",
      "(3, 224) [87.36063901 17.2091745   5.07640378]\n",
      "(3, 224) [87.36163167 17.20943457  5.07638461]\n",
      "(3, 224) [87.36269954 17.2096645   5.07637874]\n",
      "(3, 224) [87.36361666 17.2098735   5.07637029]\n",
      "(3, 224) [87.36473379 17.21010473  5.0763669 ]\n",
      "(3, 224) [87.36582312 17.210412    5.07633938]\n",
      "(3, 224) [87.36686461 17.21073569  5.0763042 ]\n",
      "(3, 224) [87.36800086 17.21107277  5.07627063]\n",
      "(3, 224) [87.36898098 17.21144096  5.07621876]\n",
      "(3, 224) [87.37015856 17.21178625  5.07618519]\n",
      "(3, 224) [87.37127353 17.21212491  5.07614994]\n",
      "(3, 224) [87.37239043 17.21245958  5.07611596]\n",
      "(3, 224) [87.37325609 17.21274971  5.07608054]\n",
      "(3, 224) [87.37453008 17.21303494  5.07607031]\n",
      "(3, 224) [87.37584223 17.213334    5.07605822]\n",
      "(3, 224) [87.37702241 17.21361908  5.07604257]\n",
      "(3, 224) [87.3778098  17.21388991  5.07600832]\n",
      "(3, 224) [87.37893778 17.21414452  5.07599868]\n",
      "(3, 224) [87.37974504 17.21441108  5.07596686]\n",
      "(3, 224) [87.38071862 17.21464443  5.07595449]\n",
      "(3, 224) [87.38174945 17.21488788  5.07594246]\n",
      "(3, 224) [87.38233446 17.21509298  5.07591588]\n",
      "(3, 224) [87.38315336 17.21532021  5.07589633]\n",
      "(3, 224) [87.38379117 17.21553388  5.0758703 ]\n",
      "(3, 224) [87.38440463 17.21574301  5.07584421]\n",
      "(3, 224) [87.38536638 17.2159933   5.07582622]\n",
      "(3, 224) [87.38653325 17.21622529  5.07582557]\n",
      "(3, 224) [87.38779019 17.21646916  5.07582662]\n",
      "(3, 224) [87.38917733 17.21671357  5.0758351 ]\n",
      "(3, 224) [87.39028155 17.21694388  5.07583132]\n",
      "(3, 224) [87.39169343 17.21719999  5.07583779]\n",
      "(3, 224) [87.39294318 17.2174406   5.07583943]\n",
      "(3, 224) [87.39419546 17.21768094  5.0758413 ]\n",
      "(3, 224) [87.39545024 17.2178981   5.07585014]\n",
      "(3, 224) [87.39662793 17.21810516  5.07585748]\n",
      "(3, 224) [87.39776038 17.21832931  5.07585714]\n",
      "(3, 224) [87.39877336 17.21853883  5.07585419]\n",
      "(3, 224) [87.39980228 17.21875661  5.07584974]\n",
      "(3, 224) [87.40058612 17.21896021  5.07583523]\n",
      "(3, 224) [87.40142221 17.21916456  5.07582352]\n",
      "(3, 224) [87.40200174 17.21934751  5.07580319]\n",
      "(3, 224) [87.40248455 17.21954063  5.07577425]\n",
      "(3, 224) [87.40304642 17.21972522  5.07575243]\n",
      "(3, 224) [87.40345841 17.21988147  5.07573028]\n",
      "(3, 224) [87.40412468 17.22005082  5.07571905]\n",
      "(3, 224) [87.40461176 17.22025188  5.07568805]\n",
      "(3, 224) [87.4053917  17.22044683  5.07567587]\n",
      "(3, 224) [87.40605643 17.22063162  5.07566   ]\n",
      "(3, 224) [87.4067627  17.22080507  5.07564988]\n",
      "(3, 224) [87.40752405 17.2209907   5.07563939]\n",
      "(3, 224) [87.40801656 17.22117349  5.0756141 ]\n",
      "(3, 224) [87.40874453 17.22134188  5.07560675]\n",
      "(3, 224) [87.40953335 17.22149761  5.07560666]\n",
      "(3, 224) [87.41022068 17.22162635  5.07560863]\n",
      "(3, 224) [87.41089285 17.2217094   5.07562319]\n",
      "(3, 224) [87.41151136 17.22177583  5.07563953]\n",
      "(3, 224) [87.41209952 17.22182715  5.07565856]\n",
      "(3, 224) [87.41288545 17.22186017  5.07569446]\n",
      "(3, 224) [87.41373688 17.22190018  5.07573211]\n",
      "(3, 224) [87.41442188 17.22190883  5.07576932]\n",
      "(3, 224) [87.41482823 17.22193968  5.07578382]\n",
      "(3, 224) [87.41514837 17.2219629   5.07579557]\n",
      "(3, 224) [87.41573175 17.2219906   5.07582127]\n",
      "(3, 224) [87.41615523 17.22202408  5.07583599]\n",
      "(3, 224) [87.41645606 17.22203713  5.07584961]\n",
      "(3, 224) [87.41686107 17.22201705  5.07587903]\n",
      "(3, 224) [87.41751544 17.22198455  5.07592657]\n",
      "(3, 224) [87.41807382 17.22198075  5.0759601 ]\n",
      "(3, 224) [87.41859523 17.22199385  5.07598651]\n",
      "(3, 224) [87.41939918 17.22202463  5.07602411]\n",
      "(3, 224) [87.41997236 17.22206221  5.07604632]\n",
      "(3, 224) [87.42039088 17.22210677  5.07605749]\n",
      "(3, 224) [87.42089284 17.22214431  5.07607557]\n",
      "(3, 224) [87.42164469 17.2221835   5.07610767]\n",
      "(3, 224) [87.4222789  17.22222082  5.07613349]\n",
      "(3, 224) [87.42315944 17.22220312  5.07618982]\n",
      "(3, 224) [87.42399556 17.2221924   5.0762415 ]\n",
      "(3, 224) [87.42471973 17.22213194  5.07630132]\n",
      "(3, 224) [87.42564812 17.22210645  5.07636271]\n",
      "(3, 224) [87.42647021 17.2220834   5.07641721]\n",
      "(3, 224) [87.42719571 17.22206172  5.0764657 ]\n",
      "(3, 224) [87.4277496 17.2220398  5.0765043]\n",
      "(3, 224) [87.42848124 17.22201552  5.07655392]\n",
      "(3, 224) [87.42916475 17.22198863  5.0766015 ]\n",
      "(3, 224) [87.42968146 17.22193575  5.07664707]\n",
      "(3, 224) [87.43019912 17.22192164  5.07668126]\n",
      "(3, 224) [87.43061773 17.2219384   5.07670062]\n",
      "(3, 224) [87.43114445 17.22198943  5.07671616]\n",
      "(3, 224) [87.4316002  17.22205309  5.07672386]\n",
      "(3, 224) [87.43217326 17.22210068  5.0767431 ]\n",
      "(3, 224) [87.4327595  17.22218009  5.07675373]\n",
      "(3, 224) [87.43359311 17.2222492   5.07678176]\n",
      "(3, 224) [87.43441427 17.22233111  5.0768053 ]\n",
      "(3, 224) [87.43496766 17.22242227  5.07681057]\n",
      "(3, 224) [87.43575131 17.22251503  5.07682875]\n",
      "(3, 224) [87.43644419 17.22259737  5.07684472]\n",
      "(3, 224) [87.43754779 17.22266021  5.07689026]\n",
      "(3, 224) [87.43855464 17.22271349  5.07693301]\n",
      "(3, 224) [87.4393325  17.22276157  5.07696401]\n",
      "(3, 224) [87.44016638 17.22281137  5.07699774]\n",
      "(3, 224) [87.44107815 17.2228937   5.0770264 ]\n",
      "(3, 224) [87.44162192 17.22294839  5.07704186]\n",
      "(3, 224) [87.44226859 17.22301452  5.07705991]\n",
      "(3, 224) [87.44279609 17.22308173  5.07707072]\n",
      "(3, 224) [87.44349419 17.22316986  5.07708527]\n",
      "(3, 224) [87.44453868 17.22325966  5.07711943]\n",
      "(3, 224) [87.44527538 17.22330994  5.07714736]\n",
      "(3, 224) [87.44630343 17.22336361  5.07719121]\n",
      "(3, 224) [87.4474077  17.22346057  5.07722675]\n",
      "(3, 224) [87.44864779 17.22356437  5.07726815]\n",
      "(3, 224) [87.45015754 17.22366473  5.0773262 ]\n",
      "(3, 224) [87.45123881 17.22375545  5.07736223]\n",
      "(3, 224) [87.45257781 17.22386753  5.07740693]\n",
      "(3, 224) [87.45356797 17.22395916  5.0774374 ]\n",
      "(3, 224) [87.45458854 17.22407264  5.07746321]\n",
      "(3, 224) [87.45557025 17.22419266  5.07748483]\n",
      "(3, 224) [87.45662773 17.22429461  5.07751618]\n",
      "(3, 224) [87.45777462 17.22439828  5.0775522 ]\n",
      "(3, 224) [87.45881825 17.22452233  5.07757624]\n",
      "(3, 224) [87.4599631  17.2246702   5.07759913]\n",
      "(3, 224) [87.46094467 17.22481839  5.07761245]\n",
      "(3, 224) [87.46227129 17.22497884  5.07764217]\n",
      "(3, 224) [87.46366662 17.2251458   5.07767396]\n",
      "(3, 224) [87.46487048 17.22530628  5.07769656]\n",
      "(3, 224) [87.46635065 17.22549893  5.07772572]\n",
      "(3, 224) [87.4675588  17.22569115  5.07773921]\n",
      "(3, 224) [87.46885468 17.22590719  5.07775076]\n",
      "(3, 224) [87.47034517 17.22611843  5.077775  ]\n",
      "(3, 224) [87.47178229 17.22633066  5.07779588]\n",
      "(3, 224) [87.47328116 17.22653277  5.07782331]\n",
      "(3, 224) [87.47472574 17.2267584   5.07784065]\n",
      "(3, 224) [87.47620874 17.22698042  5.07786127]\n",
      "(3, 224) [87.47749767 17.22719527  5.07787279]\n",
      "(3, 224) [87.47891949 17.22738236  5.07790022]\n",
      "(3, 224) [87.48001213 17.22756568  5.07790966]\n",
      "(3, 224) [87.48124972 17.2277644   5.07792299]\n",
      "(3, 224) [87.48234865 17.22796629  5.07792731]\n",
      "(3, 224) [87.48344275 17.22817618  5.07792901]\n",
      "(3, 224) [87.48451342 17.22837443  5.07793276]\n",
      "(3, 224) [87.48571316 17.22859568  5.07793721]\n",
      "(3, 224) [87.48664846 17.22881439  5.0779271 ]\n",
      "(3, 224) [87.48764292 17.22901888  5.07792465]\n",
      "(3, 224) [87.48901868 17.22922779  5.07794298]\n",
      "(3, 224) [87.49019614 17.22941958  5.07795485]\n",
      "(3, 224) [87.49160896 17.22964946  5.07796912]\n",
      "(3, 224) [87.49269925 17.22984792  5.07797393]\n",
      "(3, 224) [87.49368816 17.23005773  5.07796955]\n",
      "(3, 224) [87.49492319 17.2302846   5.07797444]\n",
      "(3, 224) [87.49579942 17.23051756  5.07795671]\n",
      "(3, 224) [87.4968461  17.23074311  5.07795106]\n",
      "(3, 224) [87.49760803 17.23100083  5.0779194 ]\n",
      "(3, 224) [87.4986968  17.23124751  5.07790994]\n",
      "(3, 224) [87.49984057 17.23146489  5.07791228]\n",
      "(3, 224) [87.50083114 17.23166344  5.0779113 ]\n",
      "(3, 224) [87.50202677 17.23188201  5.07791631]\n",
      "(3, 224) [87.50340209 17.23211118  5.07792863]\n",
      "(3, 224) [87.50491107 17.23233488  5.07795031]\n",
      "(3, 224) [87.50613085 17.23255449  5.07795639]\n",
      "(3, 224) [87.50723432 17.23280329  5.07794711]\n",
      "(3, 224) [87.50818727 17.23303459  5.07793428]\n",
      "(3, 224) [87.50922634 17.23326124  5.07792781]\n",
      "(3, 224) [87.51052251 17.23347552  5.07793987]\n",
      "(3, 224) [87.51159809 17.23371494  5.07793171]\n",
      "(3, 224) [87.51267465 17.23395333  5.07792393]\n",
      "(3, 224) [87.51346166 17.23418984  5.07789991]\n",
      "(3, 224) [87.51460267 17.23443841  5.07789288]\n",
      "(3, 224) [87.51550816 17.23469694  5.07786923]\n",
      "(3, 224) [87.51656664 17.23495703  5.07785402]\n",
      "(3, 224) [87.51764989 17.23520354  5.07784421]\n",
      "(3, 224) [87.51864097 17.23546938  5.07782338]\n",
      "(3, 224) [87.51965101 17.23574589  5.07780048]\n",
      "(3, 224) [87.52064934 17.23600411  5.0777823 ]\n",
      "(3, 224) [87.52180295 17.23634855  5.07774771]\n",
      "(3, 224) [87.52306996 17.23668816  5.07772109]\n",
      "(3, 224) [87.52459305 17.23699807  5.07771807]\n",
      "(3, 224) [87.52625799 17.23728198  5.07773097]\n",
      "(3, 224) [87.52745943 17.23753421  5.07772632]\n",
      "(3, 224) [87.52904325 17.23779588  5.07774103]\n",
      "(3, 224) [87.53049712 17.23802255  5.07775854]\n",
      "(3, 224) [87.53213713 17.23825619  5.07778479]\n",
      "(3, 224) [87.53324939 17.23852153  5.07777109]\n",
      "(3, 224) [87.53464238 17.23879026  5.07777269]\n",
      "(3, 224) [87.53587521 17.23907299  5.07776085]\n",
      "(3, 224) [87.53725103 17.23933123  5.07776454]\n",
      "(3, 224) [87.53874251 17.23956462  5.07778226]\n",
      "(3, 224) [87.53992688 17.23978888  5.07778488]\n",
      "(3, 224) [87.54134279 17.2400054   5.07780318]\n",
      "(3, 224) [87.54289826 17.24021021  5.07783304]\n",
      "(3, 224) [87.54421406 17.24041394  5.0778493 ]\n",
      "(3, 224) [87.54569798 17.24057744  5.07788718]\n",
      "(3, 224) [87.54697643 17.24075184  5.07790991]\n",
      "(3, 224) [87.54816113 17.24088807  5.07793846]\n",
      "(3, 224) [87.54934915 17.24099511  5.07797582]\n",
      "(3, 224) [87.55064604 17.24101973  5.07804385]\n",
      "(3, 224) [87.5522091  17.24108149  5.07811636]\n",
      "(3, 224) [87.55408387 17.24120894  5.07818755]\n",
      "(3, 224) [87.55554742 17.24132966  5.07823687]\n",
      "(3, 224) [87.55717294 17.24147339  5.07828879]\n",
      "(3, 224) [87.55868929 17.24165641  5.07832277]\n",
      "(3, 224) [87.56014891 17.24180037  5.078365  ]\n",
      "(3, 224) [87.56169751 17.24191361  5.07842145]\n",
      "(3, 224) [87.56317264 17.2420194   5.07847584]\n",
      "(3, 224) [87.56475013 17.24214909  5.07852911]\n",
      "(3, 224) [87.56637234 17.24230783  5.0785764 ]\n",
      "(3, 224) [87.56803985 17.24243358  5.07863604]\n",
      "(3, 224) [87.56997971 17.24261563  5.0786949 ]\n",
      "(3, 224) [87.5717375  17.24280476  5.07874109]\n",
      "(3, 224) [87.57373967 17.24301165  5.07879623]\n",
      "(3, 224) [87.57605928 17.24324775  5.07886113]\n",
      "(3, 224) [87.5778201  17.24346669  5.07889871]\n",
      "(3, 224) [87.57983075 17.24373128  5.07893733]\n",
      "(3, 224) [87.58164747 17.24399092  5.07896617]\n",
      "(3, 224) [87.58291706 17.24424452  5.07896508]\n",
      "(3, 224) [87.58422191 17.24446769  5.07897504]\n",
      "(3, 224) [87.58522646 17.2447172   5.07895983]\n",
      "(3, 224) [87.58668741 17.2449453   5.07897738]\n",
      "(3, 224) [87.58826165 17.24518521  5.07899801]\n",
      "(3, 224) [87.59001928 17.24542827  5.07902833]\n",
      "(3, 224) [87.59183276 17.24565123  5.07906784]\n",
      "(3, 224) [87.59341084 17.24585256  5.07910007]\n",
      "(3, 224) [87.59477692 17.24609342  5.0791084 ]\n",
      "(3, 224) [87.59601006 17.24636463  5.07910006]\n",
      "(3, 224) [87.59696232 17.24664837  5.07907176]\n",
      "(3, 224) [87.59795262 17.246912    5.07905161]\n",
      "(3, 224) [87.59837128 17.24719893  5.07899145]\n",
      "(3, 224) [87.59884878 17.24752913  5.07892201]\n",
      "(3, 224) [87.59937572 17.24785291  5.07885731]\n",
      "(3, 224) [87.59969519 17.2481935   5.07877567]\n",
      "(3, 224) [87.60045346 17.24854802  5.07871531]\n",
      "(3, 224) [87.60125931 17.24887677  5.07866531]\n",
      "(3, 224) [87.60206723 17.24920208  5.07861645]\n",
      "(3, 224) [87.60281331 17.24951485  5.07856774]\n",
      "(3, 224) [87.60385948 17.24982006  5.07853863]\n",
      "(3, 224) [87.60480361 17.25014324  5.07849834]\n",
      "(3, 224) [87.605826   17.25047247  5.07846081]\n",
      "(3, 224) [87.6065444  17.25078413  5.07841083]\n",
      "(3, 224) [87.60741694 17.25111443  5.07836431]\n",
      "(3, 224) [87.60802224 17.25144594  5.07830192]\n",
      "(3, 224) [87.60850808 17.25176988  5.07823485]\n",
      "(3, 224) [87.60913581 17.2520843   5.07817876]\n",
      "(3, 224) [87.60975837 17.25239227  5.07812434]\n",
      "(3, 224) [87.61023557 17.25268236  5.07806671]\n",
      "(3, 224) [87.61066318 17.25295722  5.07801072]\n",
      "(3, 224) [87.61080708 17.25325052  5.07793285]\n",
      "(3, 224) [87.61085977 17.25354645  5.07784895]\n",
      "(3, 224) [87.61138097 17.25385821  5.07778754]\n",
      "(3, 224) [87.61182353 17.25413893  5.07773065]\n",
      "(3, 224) [87.61234561 17.25443291  5.07767451]\n",
      "(3, 224) [87.61310469 17.25474576  5.07762659]\n",
      "(3, 224) [87.61356222 17.25506323  5.07755989]\n",
      "(3, 224) [87.61405308 17.25537408  5.07749706]\n",
      "(3, 224) [87.61412683 17.25567054  5.0774143 ]\n",
      "(3, 224) [87.61433187 17.25596164  5.07734071]\n",
      "(3, 224) [87.61531394 17.25628518  5.07730256]\n",
      "(3, 224) [87.61560819 17.25659348  5.07722909]\n",
      "(3, 224) [87.61615757 17.25688969  5.07717394]\n",
      "(3, 224) [87.61684402 17.25716944  5.07713154]\n",
      "(3, 224) [87.61747554 17.25743963  5.07708872]\n",
      "(3, 224) [87.61820836 17.2577356   5.0770442 ]\n",
      "(3, 224) [87.61864339 17.25797962  5.07699772]\n",
      "(3, 224) [87.6190409  17.25820731  5.07695387]\n",
      "(3, 224) [87.61969068 17.25844792  5.07692082]\n",
      "(3, 224) [87.62011598 17.25868558  5.07687566]\n",
      "(3, 224) [87.62077763 17.25895636  5.07683444]\n",
      "(3, 224) [87.62129704 17.25920278  5.07679211]\n",
      "(3, 224) [87.62214232 17.25943903  5.07677164]\n",
      "(3, 224) [87.62284141 17.25969356  5.07673735]\n",
      "(3, 224) [87.6235756  17.2599442   5.07670624]\n",
      "(3, 224) [87.62428225 17.26019103  5.07667466]\n",
      "(3, 224) [87.62499173 17.26043615  5.07664377]\n",
      "(3, 224) [87.62568681 17.26067842  5.07661288]\n",
      "(3, 224) [87.62648265 17.26094266  5.07658136]\n",
      "(3, 224) [87.62720368 17.26120028  5.07654745]\n",
      "(3, 224) [87.62765594 17.26142458  5.07650779]\n",
      "(3, 224) [87.62817828 17.26167549  5.07646438]\n",
      "(3, 224) [87.62898493 17.26191294  5.07644135]\n",
      "(3, 224) [87.62931749 17.26215296  5.07639012]\n",
      "(3, 224) [87.62968287 17.26239114  5.07634132]\n",
      "(3, 224) [87.63031193 17.26262003  5.07631049]\n",
      "(3, 224) [87.63110793 17.26287366  5.07628204]\n",
      "(3, 224) [87.63166668 17.26309515  5.07624932]\n",
      "(3, 224) [87.63199778 17.26330598  5.07620655]\n",
      "(3, 224) [87.63228971 17.26352248  5.07615984]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  2%|█▏                                                                         | 1215/76339 [00:00<00:30, 2495.64it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.63266953 17.26373335  5.07611987]\n",
      "(3, 224) [87.63317203 17.26397103  5.07607917]\n",
      "(3, 224) [87.6338821  17.26419665  5.07605402]\n",
      "(3, 224) [87.63419618 17.26440179  5.07601193]\n",
      "(3, 224) [87.63456508 17.26462361  5.07596811]\n",
      "(3, 224) [87.63535027 17.26485017  5.07594703]\n",
      "(3, 224) [87.63598536 17.26508211  5.07591565]\n",
      "(3, 224) [87.63627018 17.26528785  5.07587165]\n",
      "(3, 224) [87.63652598 17.26548153  5.07582951]\n",
      "(3, 224) [87.63695303 17.26567541  5.07579726]\n",
      "(3, 224) [87.63711014 17.2658694   5.07574932]\n",
      "(3, 224) [87.63758058 17.26609364  5.07571065]\n",
      "(3, 224) [87.63796081 17.26629299  5.07567404]\n",
      "(3, 224) [87.63833124 17.26647902  5.07564079]\n",
      "(3, 224) [87.63867444 17.26665328  5.07560941]\n",
      "(3, 224) [87.63886214 17.26683517  5.0755668 ]\n",
      "(3, 224) [87.63888491 17.26702135  5.07551334]\n",
      "(3, 224) [87.63888171 17.26720753  5.07545838]\n",
      "(3, 224) [87.63919831 17.26740866  5.07541756]\n",
      "(3, 224) [87.63928683 17.26760973  5.07536353]\n",
      "(3, 224) [87.63958739 17.26780068  5.07532477]\n",
      "(3, 224) [87.63971447 17.26800126  5.07527314]\n",
      "(3, 224) [87.64001908 17.26820066  5.07523213]\n",
      "(3, 224) [87.64010945 17.26841823  5.07517337]\n",
      "(3, 224) [87.64040635 17.26863224  5.07512766]\n",
      "(3, 224) [87.64072244 17.26886758  5.07507675]\n",
      "(3, 224) [87.64079074 17.26903248  5.07503223]\n",
      "(3, 224) [87.64102429 17.26920084  5.07499625]\n",
      "(3, 224) [87.64110892 17.26935109  5.07495696]\n",
      "(3, 224) [87.64128802 17.26949333  5.07492553]\n",
      "(3, 224) [87.64137058 17.26965576  5.07488254]\n",
      "(3, 224) [87.64137553 17.2697909   5.07484309]\n",
      "(3, 224) [87.64129417 17.26993127  5.0747971 ]\n",
      "(3, 224) [87.64146917 17.27004806  5.07477289]\n",
      "(3, 224) [87.6417695  17.27010679  5.07477303]\n",
      "(3, 224) [87.64199325 17.2701848   5.07476305]\n",
      "(3, 224) [87.6421765  17.27028586  5.07474396]\n",
      "(3, 224) [87.64193998 17.27036318  5.0747075 ]\n",
      "(3, 224) [87.64197873 17.27048147  5.07467493]\n",
      "(3, 224) [87.64211082 17.27063409  5.0746377 ]\n",
      "(3, 224) [87.64209543 17.27079374  5.07458984]\n",
      "(3, 224) [87.64189249 17.27093813  5.07453561]\n",
      "(3, 224) [87.64197783 17.2711106   5.07448986]\n",
      "(3, 224) [87.64206628 17.27128656  5.07444324]\n",
      "(3, 224) [87.64211152 17.27142287  5.07440576]\n",
      "(3, 224) [87.64187034 17.27153959  5.07435746]\n",
      "(3, 224) [87.64120841 17.27163042  5.07429238]\n",
      "(3, 224) [87.6408279  17.27171264  5.07424615]\n",
      "(3, 224) [87.64062452 17.27178283  5.07421371]\n",
      "(3, 224) [87.64034533 17.27183072  5.07418345]\n",
      "(3, 224) [87.639928   17.27189065  5.07414162]\n",
      "(3, 224) [87.63919521 17.27193473  5.07408618]\n",
      "(3, 224) [87.63869614 17.27198219  5.07404329]\n",
      "(3, 224) [87.63832627 17.27203849  5.07400529]\n",
      "(3, 224) [87.63793934 17.27209073  5.0739675 ]\n",
      "(3, 224) [87.63773412 17.27214019  5.07394106]\n",
      "(3, 224) [87.63734572 17.27216102  5.07391242]\n",
      "(3, 224) [87.6372315  17.27220707  5.07389226]\n",
      "(3, 224) [87.63700477 17.27223921  5.07386967]\n",
      "(3, 224) [87.63685686 17.27225699  5.07385587]\n",
      "(3, 224) [87.63650194 17.27226897  5.07383177]\n",
      "(3, 224) [87.63621793 17.27223385  5.07382564]\n",
      "(3, 224) [87.63583646 17.27216862  5.07382273]\n",
      "(3, 224) [87.6354563  17.27208583  5.07382506]\n",
      "(3, 224) [87.63510689 17.27199638  5.07383113]\n",
      "(3, 224) [87.63476461 17.27190275  5.07383885]\n",
      "(3, 224) [87.63439901 17.27181485  5.07384353]\n",
      "(3, 224) [87.63395165 17.27173437  5.07384128]\n",
      "(3, 224) [87.6333647  17.27164158  5.07383458]\n",
      "(3, 224) [87.6328714  17.27155128  5.07383257]\n",
      "(3, 224) [87.63246408 17.2714514   5.07383837]\n",
      "(3, 224) [87.63186862 17.27136009  5.07383074]\n",
      "(3, 224) [87.63123911 17.27127277  5.07381996]\n",
      "(3, 224) [87.63108069 17.27117283  5.0738402 ]\n",
      "(3, 224) [87.63115079 17.27107064  5.07387436]\n",
      "(3, 224) [87.63147722 17.27101359  5.07391008]\n",
      "(3, 224) [87.6317778  17.27094315  5.07394823]\n",
      "(3, 224) [87.6320218  17.27087293  5.07398305]\n",
      "(3, 224) [87.63230025 17.27077139  5.07402908]\n",
      "(3, 224) [87.63252261 17.27068543  5.07406728]\n",
      "(3, 224) [87.6326672  17.27062171  5.07409442]\n",
      "(3, 224) [87.63292468 17.27052623  5.07413744]\n",
      "(3, 224) [87.63316107 17.27041315  5.0741844 ]\n",
      "(3, 224) [87.63290772 17.27028624  5.07420707]\n",
      "(3, 224) [87.63274376 17.27019185  5.07422534]\n",
      "(3, 224) [87.63249278 17.27008554  5.0742421 ]\n",
      "(3, 224) [87.63238833 17.26996181  5.07427249]\n",
      "(3, 224) [87.63252284 17.26982029  5.07432196]\n",
      "(3, 224) [87.63268025 17.26968185  5.07437184]\n",
      "(3, 224) [87.63307921 17.26953194  5.07443912]\n",
      "(3, 224) [87.63311326 17.26937973  5.07448589]\n",
      "(3, 224) [87.63325504 17.26919488  5.07454852]\n",
      "(3, 224) [87.63296779 17.26898183  5.07459461]\n",
      "(3, 224) [87.6325943  17.26879202  5.07462886]\n",
      "(3, 224) [87.63263487 17.26859566  5.07468905]\n",
      "(3, 224) [87.63230024 17.26839649  5.07472831]\n",
      "(3, 224) [87.63179631 17.26819186  5.07475936]\n",
      "(3, 224) [87.63138387 17.26801113  5.07478868]\n",
      "(3, 224) [87.63064274 17.26782327  5.07480103]\n",
      "(3, 224) [87.62983685 17.26764418  5.07480704]\n",
      "(3, 224) [87.6291416  17.26744999  5.07482389]\n",
      "(3, 224) [87.62834179 17.26723968  5.07483943]\n",
      "(3, 224) [87.62756155 17.26702551  5.0748573 ]\n",
      "(3, 224) [87.6266305  17.26680306  5.07486885]\n",
      "(3, 224) [87.62586103 17.26657698  5.07489083]\n",
      "(3, 224) [87.62532827 17.26638409  5.07491674]\n",
      "(3, 224) [87.62474276 17.2661658   5.0749471 ]\n",
      "(3, 224) [87.62397177 17.26596534  5.07496142]\n",
      "(3, 224) [87.62322479 17.26576035  5.07497847]\n",
      "(3, 224) [87.62231165 17.26555748  5.07498528]\n",
      "(3, 224) [87.62149514 17.26533503  5.07500345]\n",
      "(3, 224) [87.62058946 17.26510708  5.07501807]\n",
      "(3, 224) [87.61965517 17.26488685  5.07502876]\n",
      "(3, 224) [87.61856347 17.26461615  5.07504517]\n",
      "(3, 224) [87.61727212 17.26437001  5.07504278]\n",
      "(3, 224) [87.61618446 17.26413952  5.07504764]\n",
      "(3, 224) [87.61509876 17.26393796  5.07504409]\n",
      "(3, 224) [87.61454021 17.26376795  5.0750618 ]\n",
      "(3, 224) [87.61351169 17.26358406  5.07505638]\n",
      "(3, 224) [87.61267132 17.26341245  5.07505825]\n",
      "(3, 224) [87.61168213 17.26325071  5.07504859]\n",
      "(3, 224) [87.61134872 17.26306717  5.07508337]\n",
      "(3, 224) [87.61086674 17.26282035  5.07512823]\n",
      "(3, 224) [87.61034033 17.262561    5.0751742 ]\n",
      "(3, 224) [87.60974636 17.26234041  5.07520482]\n",
      "(3, 224) [87.60900356 17.26210442  5.07523135]\n",
      "(3, 224) [87.60854874 17.26186435  5.07527579]\n",
      "(3, 224) [87.60801453 17.26165443  5.07530677]\n",
      "(3, 224) [87.60764073 17.2614482   5.07534598]\n",
      "(3, 224) [87.60751923 17.26121091  5.07540906]\n",
      "(3, 224) [87.60724691 17.26100714  5.07545351]\n",
      "(3, 224) [87.60683317 17.26075983  5.07550264]\n",
      "(3, 224) [87.60642383 17.26055065  5.07554075]\n",
      "(3, 224) [87.60573438 17.2603484   5.07556055]\n",
      "(3, 224) [87.60511177 17.26020104  5.07556801]\n",
      "(3, 224) [87.60421536 17.25999104  5.07557809]\n",
      "(3, 224) [87.60328101 17.25974894  5.07559547]\n",
      "(3, 224) [87.60291718 17.25950906  5.07564534]\n",
      "(3, 224) [87.60229651 17.259205    5.07569933]\n",
      "(3, 224) [87.60156919 17.25884145  5.07576469]\n",
      "(3, 224) [87.60112074 17.25849861  5.07584015]\n",
      "(3, 224) [87.60036414 17.25817487  5.07589205]\n",
      "(3, 224) [87.59946586 17.25784413  5.07593779]\n",
      "(3, 224) [87.59843279 17.25750573  5.07597793]\n",
      "(3, 224) [87.59746955 17.25712559  5.07603451]\n",
      "(3, 224) [87.59639029 17.25676687  5.07607802]\n",
      "(3, 224) [87.59555257 17.25637975  5.07614397]\n",
      "(3, 224) [87.5945573  17.25598688  5.07620243]\n",
      "(3, 224) [87.59350788 17.25552366  5.07627863]\n",
      "(3, 224) [87.59212871 17.25504706  5.07633966]\n",
      "(3, 224) [87.59116914 17.25454772  5.07643174]\n",
      "(3, 224) [87.59021566 17.25404026  5.07652662]\n",
      "(3, 224) [87.58928278 17.25353328  5.0766225 ]\n",
      "(3, 224) [87.5887934  17.2530666   5.07673209]\n",
      "(3, 224) [87.58833368 17.25260889  5.07684072]\n",
      "(3, 224) [87.58809113 17.25210612  5.07697529]\n",
      "(3, 224) [87.58777447 17.25161802  5.07710134]\n",
      "(3, 224) [87.58742606 17.25109058  5.07723725]\n",
      "(3, 224) [87.58679268 17.25048858  5.07737888]\n",
      "(3, 224) [87.58625283 17.24992612  5.07751414]\n",
      "(3, 224) [87.5857232  17.24936629  5.07764926]\n",
      "(3, 224) [87.58547044 17.24874086  5.07781982]\n",
      "(3, 224) [87.58511691 17.24798396  5.07802369]\n",
      "(3, 224) [87.58502905 17.24732965  5.07821233]\n",
      "(3, 224) [87.58471752 17.2466622   5.07839185]\n",
      "(3, 224) [87.58483096 17.24599009  5.07859734]\n",
      "(3, 224) [87.58483093 17.24522367  5.07882421]\n",
      "(3, 224) [87.58504866 17.24441066  5.07907779]\n",
      "(3, 224) [87.58538157 17.24363763  5.07932596]\n",
      "(3, 224) [87.58497184 17.24286677  5.07953028]\n",
      "(3, 224) [87.5847591  17.24214515  5.07973141]\n",
      "(3, 224) [87.58445334 17.24143045  5.07992507]\n",
      "(3, 224) [87.58424587 17.24063565  5.08014826]\n",
      "(3, 224) [87.58361949 17.23980626  5.08035744]\n",
      "(3, 224) [87.58335704 17.23893415  5.08060052]\n",
      "(3, 224) [87.58309642 17.2380958   5.08083363]\n",
      "(3, 224) [87.58271576 17.23727762  5.08105366]\n",
      "(3, 224) [87.58242745 17.23646466  5.0812775 ]\n",
      "(3, 224) [87.58213178 17.23566843  5.08149591]\n",
      "(3, 224) [87.58187866 17.23485408  5.08172217]\n",
      "(3, 224) [87.58145224 17.2340756   5.08192774]\n",
      "(3, 224) [87.58122556 17.23329452  5.08214562]\n",
      "(3, 224) [87.58083764 17.23253448  5.08234787]\n",
      "(3, 224) [87.58073392 17.23179158  5.08256155]\n",
      "(3, 224) [87.58063953 17.23104842  5.0827758 ]\n",
      "(3, 224) [87.58087646 17.23032304  5.08300397]\n",
      "(3, 224) [87.58104367 17.22961022  5.0832244 ]\n",
      "(3, 224) [87.58108942 17.22892175  5.08343065]\n",
      "(3, 224) [87.58148758 17.22823788  5.08365595]\n",
      "(3, 224) [87.58151376 17.22751529  5.08387102]\n",
      "(3, 224) [87.58192597 17.22676783  5.08411583]\n",
      "(3, 224) [87.58212356 17.2260141   5.08435003]\n",
      "(3, 224) [87.58269745 17.22528812  5.08459784]\n",
      "(3, 224) [87.58320934 17.22458149  5.08483632]\n",
      "(3, 224) [87.58325886 17.22389078  5.08504326]\n",
      "(3, 224) [87.58369044 17.22320746  5.08527007]\n",
      "(3, 224) [87.58373273 17.22250925  5.08547872]\n",
      "(3, 224) [87.58390441 17.22184004  5.08568643]\n",
      "(3, 224) [87.583895   17.22115286  5.08588906]\n",
      "(3, 224) [87.58389867 17.22046163  5.08609357]\n",
      "(3, 224) [87.58400756 17.2198025   5.08629467]\n",
      "(3, 224) [87.5843055  17.21916664  5.08649989]\n",
      "(3, 224) [87.58450498 17.21852926  5.08669984]\n",
      "(3, 224) [87.58474775 17.21787943  5.08690597]\n",
      "(3, 224) [87.58473895 17.21720176  5.08710574]\n",
      "(3, 224) [87.58498831 17.21656261  5.08730922]\n",
      "(3, 224) [87.58486352 17.21595025  5.08748302]\n",
      "(3, 224) [87.58499221 17.21528747  5.08768649]\n",
      "(3, 224) [87.58511624 17.21462135  5.0878907 ]\n",
      "(3, 224) [87.58534367 17.21393021  5.08810838]\n",
      "(3, 224) [87.58569768 17.2132159   5.08834028]\n",
      "(3, 224) [87.58589847 17.21250043  5.08856361]\n",
      "(3, 224) [87.58595186 17.21176551  5.08878412]\n",
      "(3, 224) [87.58620065 17.21104745  5.08901103]\n",
      "(3, 224) [87.58656012 17.21032786  5.0892448 ]\n",
      "(3, 224) [87.58711175 17.20953821  5.08951066]\n",
      "(3, 224) [87.58736894 17.20877072  5.08975297]\n",
      "(3, 224) [87.5876244  17.20800728  5.08999377]\n",
      "(3, 224) [87.58800417 17.2072588   5.09023738]\n",
      "(3, 224) [87.58829085 17.20654407  5.09046578]\n",
      "(3, 224) [87.58786423 17.20580696  5.09065919]\n",
      "(3, 224) [87.58740609 17.20507069  5.09085043]\n",
      "(3, 224) [87.58680339 17.20431194  5.09103991]\n",
      "(3, 224) [87.5867755  17.20355433  5.0912626 ]\n",
      "(3, 224) [87.58647166 17.20276886  5.09147756]\n",
      "(3, 224) [87.58662891 17.20196307  5.09172536]\n",
      "(3, 224) [87.58650794 17.20119224  5.09194663]\n",
      "(3, 224) [87.58679241 17.20041522  5.09219343]\n",
      "(3, 224) [87.58700734 17.19962145  5.09244115]\n",
      "(3, 224) [87.58671714 17.19881405  5.09266353]\n",
      "(3, 224) [87.58623683 17.19801237  5.09287306]\n",
      "(3, 224) [87.58597464 17.19726996  5.09307772]\n",
      "(3, 224) [87.58576597 17.1965187   5.09328816]\n",
      "(3, 224) [87.58566868 17.19575377  5.09350921]\n",
      "(3, 224) [87.58601066 17.19500104  5.09375222]\n",
      "(3, 224) [87.58637794 17.19426757  5.09399096]\n",
      "(3, 224) [87.58658101 17.19356078  5.09421228]\n",
      "(3, 224) [87.5866693  17.19288734  5.09441689]\n",
      "(3, 224) [87.58666533 17.19220294  5.09461947]\n",
      "(3, 224) [87.58697718 17.19150231  5.09484517]\n",
      "(3, 224) [87.58729829 17.19079522  5.09507342]\n",
      "(3, 224) [87.58764094 17.19010343  5.09529832]\n",
      "(3, 224) [87.58791482 17.18943478  5.09551233]\n",
      "(3, 224) [87.5881332  17.18874699  5.09572875]\n",
      "(3, 224) [87.58814507 17.18804975  5.09593604]\n",
      "(3, 224) [87.58815365 17.18733521  5.09614816]\n",
      "(3, 224) [87.5879475  17.18661633  5.09634915]\n",
      "(3, 224) [87.5879362  17.18582051  5.09658439]\n",
      "(3, 224) [87.58775588 17.18499896  5.09681741]\n",
      "(3, 224) [87.5875862  17.1841643   5.09705504]\n",
      "(3, 224) [87.5877918 17.1833886  5.097297 ]\n",
      "(3, 224) [87.58777194 17.18262382  5.09752256]\n",
      "(3, 224) [87.58763286 17.18190009  5.09772894]\n",
      "(3, 224) [87.58769759 17.18115414  5.09795377]\n",
      "(3, 224) [87.58746493 17.1804127   5.09815995]\n",
      "(3, 224) [87.58742902 17.17970549  5.09836733]\n",
      "(3, 224) [87.58748021 17.17898171  5.09858478]\n",
      "(3, 224) [87.58735563 17.17828191  5.09878496]\n",
      "(3, 224) [87.58729976 17.17762153  5.09897755]\n",
      "(3, 224) [87.58789844 17.17695872  5.09920903]\n",
      "(3, 224) [87.58856819 17.17629573  5.0994446 ]\n",
      "(3, 224) [87.58909147 17.17565502  5.09966502]\n",
      "(3, 224) [87.58935228 17.17497522  5.09988183]\n",
      "(3, 224) [87.59020278 17.17433007  5.10012253]\n",
      "(3, 224) [87.59075632 17.17368856  5.10034476]\n",
      "(3, 224) [87.5913784  17.17303766  5.10057372]\n",
      "(3, 224) [87.59202868 17.17239802  5.1008009 ]\n",
      "(3, 224) [87.59238644 17.17172479  5.10102109]\n",
      "(3, 224) [87.59293875 17.1710672   5.10124814]\n",
      "(3, 224) [87.59383784 17.17043806  5.10148679]\n",
      "(3, 224) [87.59461209 17.16978239  5.10172614]\n",
      "(3, 224) [87.59518006 17.16912281  5.10195464]\n",
      "(3, 224) [87.59557844 17.16848852  5.10216581]\n",
      "(3, 224) [87.59595285 17.16789411  5.10236366]\n",
      "(3, 224) [87.59651894 17.16731081  5.10256938]\n",
      "(3, 224) [87.59693224 17.1667192   5.10276861]\n",
      "(3, 224) [87.59738439 17.16614851  5.10296387]\n",
      "(3, 224) [87.59754504 17.16555333  5.10314947]\n",
      "(3, 224) [87.59787102 17.16496245  5.10334343]\n",
      "(3, 224) [87.5979929  17.16436583  5.10352719]\n",
      "(3, 224) [87.59836474 17.16379326  5.10371842]\n",
      "(3, 224) [87.59864833 17.16323233  5.10390102]\n",
      "(3, 224) [87.59887525 17.16266432  5.10408247]\n",
      "(3, 224) [87.5992919  17.16209834  5.10427438]\n",
      "(3, 224) [87.59949944 17.16150394  5.10446254]\n",
      "(3, 224) [87.59957151 17.16095817  5.10462847]\n",
      "(3, 224) [87.59960767 17.16044344  5.10478318]\n",
      "(3, 224) [87.59962593 17.15993212  5.10493584]\n",
      "(3, 224) [87.59969906 17.159428    5.10508958]\n",
      "(3, 224) [87.59943653 17.15891556  5.10522618]\n",
      "(3, 224) [87.59930913 17.15836318  5.10538258]\n",
      "(3, 224) [87.59892136 17.15781543  5.10552237]\n",
      "(3, 224) [87.59844824 17.1572881   5.10565114]\n",
      "(3, 224) [87.59816481 17.15674482  5.10579572]\n",
      "(3, 224) [87.59799042 17.15620891  5.10594459]\n",
      "(3, 224) [87.59790797 17.15566396  5.10610146]\n",
      "(3, 224) [87.59787396 17.15512282  5.10626002]\n",
      "(3, 224) [87.59781912 17.15460976  5.10640908]\n",
      "(3, 224) [87.59752842 17.15409349  5.1065454 ]\n",
      "(3, 224) [87.59714685 17.15354648  5.10668546]\n",
      "(3, 224) [87.59674902 17.15303252  5.10681471]\n",
      "(3, 224) [87.59642059 17.15251412  5.10694938]\n",
      "(3, 224) [87.59592865 17.15202224  5.10706664]\n",
      "(3, 224) [87.59557927 17.15152637  5.10719341]\n",
      "(3, 224) [87.5950192  17.15099942  5.10731707]\n",
      "(3, 224) [87.5946563  17.15048728  5.10744783]\n",
      "(3, 224) [87.59436013 17.14998868  5.10757841]\n",
      "(3, 224) [87.59433787 17.1494938   5.10772389]\n",
      "(3, 224) [87.59430388 17.14896899  5.10787757]\n",
      "(3, 224) [87.59423713 17.14847199  5.10802114]\n",
      "(3, 224) [87.59389468 17.14800218  5.1081406 ]\n",
      "(3, 224) [87.59360849 17.14752336  5.10826603]\n",
      "(3, 224) [87.5930907  17.14706049  5.10837319]\n",
      "(3, 224) [87.59254363 17.1466028   5.10847716]\n",
      "(3, 224) [87.59233106 17.14614002  5.10860206]\n",
      "(3, 224) [87.59190859 17.14567642  5.10871504]\n",
      "(3, 224) [87.59145524 17.14524147  5.10881769]\n",
      "(3, 224) [87.59114029 17.14479968  5.10893046]\n",
      "(3, 224) [87.59043306 17.14432883  5.10902905]\n",
      "(3, 224) [87.59015654 17.14388397  5.10914498]\n",
      "(3, 224) [87.59002141 17.14343536  5.10927026]\n",
      "(3, 224) [87.58964542 17.14300894  5.10937485]\n",
      "(3, 224) [87.58959436 17.14255948  5.1095052 ]\n",
      "(3, 224) [87.58974782 17.14209217  5.10965274]\n",
      "(3, 224) [87.5898637  17.14164272  5.10979279]\n",
      "(3, 224) [87.59009317 17.14119861  5.10993791]\n",
      "(3, 224) [87.59009322 17.14077263  5.11006437]\n",
      "(3, 224) [87.59030196 17.14034991  5.11020201]\n",
      "(3, 224) [87.59044373 17.13989346  5.11034584]\n",
      "(3, 224) [87.59042262 17.1394143   5.11048687]\n",
      "(3, 224) [87.59022851 17.13896599  5.11060866]\n",
      "(3, 224) [87.59046262 17.13853161  5.11075121]\n",
      "(3, 224) [87.59074946 17.13811686  5.11089098]\n",
      "(3, 224) [87.59111143 17.13770683  5.11103375]\n",
      "(3, 224) [87.59168418 17.13732437  5.11118063]\n",
      "(3, 224) [87.59215758 17.13694132  5.11132188]\n",
      "(3, 224) [87.5925783  17.13653484  5.11146705]\n",
      "(3, 224) [87.59271824 17.13610563  5.11160255]\n",
      "(3, 224) [87.59316082 17.13569619  5.11174978]\n",
      "(3, 224) [87.59330645 17.13530269  5.11187503]\n",
      "(3, 224) [87.59349421 17.13488103  5.1120111 ]\n",
      "(3, 224) [87.59345871 17.13444035  5.11213985]\n",
      "(3, 224) [87.59360669 17.13404373  5.1122662 ]\n",
      "(3, 224) [87.59362884 17.13365345  5.11238334]\n",
      "(3, 224) [87.59380444 17.13325984  5.1125104 ]\n",
      "(3, 224) [87.59375049 17.13284596  5.11263019]\n",
      "(3, 224) [87.59343435 17.13248714  5.11271838]\n",
      "(3, 224) [87.59317554 17.13212253  5.11281162]\n",
      "(3, 224) [87.5931821  17.13174563  5.11292396]\n",
      "(3, 224) [87.59306662 17.13136882  5.11302916]\n",
      "(3, 224) [87.59305709 17.13100285  5.11313736]\n",
      "(3, 224) [87.59275669 17.13062887  5.113231  ]\n",
      "(3, 224) [87.59235436 17.13025395  5.11331901]\n",
      "(3, 224) [87.59183016 17.12993321  5.11338388]\n",
      "(3, 224) [87.59126806 17.12961769  5.11344498]\n",
      "(3, 224) [87.59097012 17.12934393  5.11350908]\n",
      "(3, 224) [87.59067242 17.12908018  5.11357017]\n",
      "(3, 224) [87.59043026 17.12882473  5.11363202]\n",
      "(3, 224) [87.59006033 17.12857879  5.11368359]\n",
      "(3, 224) [87.59000454 17.12836868  5.11374281]\n",
      "(3, 224) [87.58989283 17.1281187   5.11381066]\n",
      "(3, 224) [87.58942611 17.12787649  5.11385553]\n",
      "(3, 224) [87.58909041 17.12769377  5.11389035]\n",
      "(3, 224) [87.58873905 17.12753632  5.11391673]\n",
      "(3, 224) [87.58821737 17.12737691  5.11393378]\n",
      "(3, 224) [87.58824218 17.12721577  5.11398319]\n",
      "(3, 224) [87.58824507 17.12706678  5.11402771]\n",
      "(3, 224) [87.58831539 17.12690333  5.11408045]\n",
      "(3, 224) [87.58844255 17.12675473  5.11413211]\n",
      "(3, 224) [87.58859499 17.12660292  5.1141862 ]\n",
      "(3, 224) [87.58837392 17.12647904  5.11421019]\n",
      "(3, 224) [87.58839744 17.12634024  5.11425286]\n",
      "(3, 224) [87.58835195 17.12626958  5.11427125]\n",
      "(3, 224) [87.58824572 17.12618633  5.11428985]\n",
      "(3, 224) [87.58813958 17.12612003  5.1143034 ]\n",
      "(3, 224) [87.58771566 17.1260644   5.11429525]\n",
      "(3, 224) [87.58745887 17.12598939  5.11430262]\n",
      "(3, 224) [87.58719748 17.12588842  5.11431743]\n",
      "(3, 224) [87.58721657 17.1257877   5.11434853]\n",
      "(3, 224) [87.58725678 17.12571937  5.11437122]\n",
      "(3, 224) [87.58705942 17.12564903  5.11438067]\n",
      "(3, 224) [87.58643964 17.1255764   5.11436617]\n",
      "(3, 224) [87.58605711 17.12559872  5.11433719]\n",
      "(3, 224) [87.58573591 17.12559624  5.11431919]\n",
      "(3, 224) [87.58575661 17.12562422  5.11431206]\n",
      "(3, 224) [87.5856505  17.12566858  5.11429263]\n",
      "(3, 224) [87.58546502 17.12582714  5.11423445]\n",
      "(3, 224) [87.58527824 17.12589777  5.11420249]\n",
      "(3, 224) [87.58548148 17.1260033   5.11418288]\n",
      "(3, 224) [87.58541503 17.12606981  5.11415916]\n",
      "(3, 224) [87.58539654 17.12620745  5.114117  ]\n",
      "(3, 224) [87.58504522 17.12640087  5.11403872]\n",
      "(3, 224) [87.58482323 17.1265481   5.11398182]\n",
      "(3, 224) [87.5846456  17.12666107  5.11393776]\n",
      "(3, 224) [87.58423148 17.12669549  5.11390333]\n",
      "(3, 224) [87.58380581 17.12673272  5.11386739]\n",
      "(3, 224) [87.58353525 17.12681057  5.11382834]\n",
      "(3, 224) [87.5833632  17.12688504  5.11379605]\n",
      "(3, 224) [87.58277205 17.12698613  5.1137313 ]\n",
      "(3, 224) [87.58219789 17.12703191  5.11368408]\n",
      "(3, 224) [87.58191851 17.12707545  5.11365475]\n",
      "(3, 224) [87.5816007  17.12712528  5.11362131]\n",
      "(3, 224) [87.58119483 17.12716288  5.11358639]\n",
      "(3, 224) [87.58071021 17.12721955  5.11354117]\n",
      "(3, 224) [87.58044278 17.12725423  5.1135152 ]\n",
      "(3, 224) [87.58019917 17.12730299  5.11348642]\n",
      "(3, 224) [87.57999331 17.12733737  5.11346415]\n",
      "(3, 224) [87.57971448 17.127355    5.11344261]\n",
      "(3, 224) [87.57965428 17.12736458  5.11343624]\n",
      "(3, 224) [87.57925408 17.12734781  5.11341789]\n",
      "(3, 224) [87.57867695 17.12733413  5.11338829]\n",
      "(3, 224) [87.57817412 17.12732372  5.11336206]\n",
      "(3, 224) [87.57761031 17.12729448  5.1133379 ]\n",
      "(3, 224) [87.57709746 17.1273141   5.11330214]\n",
      "(3, 224) [87.57621537 17.12732786  5.11324658]\n",
      "(3, 224) [87.57546331 17.12734631  5.11319721]\n",
      "(3, 224) [87.57448658 17.12734033  5.11314202]\n",
      "(3, 224) [87.57354092 17.12732226  5.11309225]\n",
      "(3, 224) [87.57251684 17.12726569  5.11304939]\n",
      "(3, 224) [87.57150443 17.12724675  5.11299601]\n",
      "(3, 224) [87.57079993 17.12726932  5.11294821]\n",
      "(3, 224) [87.56972363 17.12726497  5.11288676]\n",
      "(3, 224) [87.56892791 17.12730336  5.11282892]\n",
      "(3, 224) [87.56802471 17.12733145  5.1127679 ]\n",
      "(3, 224) [87.56738046 17.12734298  5.1127269 ]\n",
      "(3, 224) [87.5664398  17.12735877  5.11266737]\n",
      "(3, 224) [87.56582305 17.12738009  5.11262507]\n",
      "(3, 224) [87.56539084 17.12742066  5.11258779]\n",
      "(3, 224) [87.56500474 17.12748605  5.11254581]\n",
      "(3, 224) [87.56426181 17.12755318  5.11248251]\n",
      "(3, 224) [87.56371688 17.12760141  5.1124364 ]\n",
      "(3, 224) [87.56291118 17.12768255  5.11236526]\n",
      "(3, 224) [87.5624513  17.12778108  5.11230911]\n",
      "(3, 224) [87.56157361 17.12791851  5.11221702]\n",
      "(3, 224) [87.56069074 17.12805791  5.11212401]\n",
      "(3, 224) [87.55983498 17.1281963   5.11203289]\n",
      "(3, 224) [87.5590867  17.12831208  5.11195475]\n",
      "(3, 224) [87.55834275 17.12843883  5.11187359]\n",
      "(3, 224) [87.55801468 17.12857649  5.11181342]\n",
      "(3, 224) [87.55742273 17.12878379  5.11171704]\n",
      "(3, 224) [87.55675143 17.12898819  5.11161691]\n",
      "(3, 224) [87.55642331 17.12918581  5.11153885]\n",
      "(3, 224) [87.5559362  17.12936804  5.1114561 ]\n",
      "(3, 224) [87.55540324 17.12955186  5.11137019]\n",
      "(3, 224) [87.5552337  17.12974615  5.11130241]\n",
      "(3, 224) [87.55540858 17.12994213  5.11125424]\n",
      "(3, 224) [87.55592155 17.13017726  5.11121413]\n",
      "(3, 224) [87.55598235 17.13039109  5.11115391]\n",
      "(3, 224) [87.55617263 17.13064832  5.11108832]\n",
      "(3, 224) [87.55591597 17.13088808  5.11100181]\n",
      "(3, 224) [87.55585074 17.13110847  5.11093228]\n",
      "(3, 224) [87.55545798 17.13133721  5.11084109]\n",
      "(3, 224) [87.55531913 17.13160683  5.11075253]\n",
      "(3, 224) [87.55552851 17.1318808   5.11068302]\n",
      "(3, 224) [87.55570219 17.13212806  5.11061941]\n",
      "(3, 224) [87.55605039 17.13236196  5.11056998]\n",
      "(3, 224) [87.55611739 17.13259472  5.11050448]\n",
      "(3, 224) [87.55610987 17.13280878  5.11044015]\n",
      "(3, 224) [87.555846   17.13302239  5.11036097]\n",
      "(3, 224) [87.55529551 17.13318873  5.11027919]\n",
      "(3, 224) [87.55495243 17.13336238  5.11020734]\n",
      "(3, 224) [87.55480241 17.13350599  5.11015575]\n",
      "(3, 224) [87.55456582 17.13367086  5.11009277]\n",
      "(3, 224) [87.55438735 17.13382867  5.11003526]\n",
      "(3, 224) [87.55404541 17.13400505  5.10996266]\n",
      "(3, 224) [87.55375928 17.13415609  5.10990089]\n",
      "(3, 224) [87.55358698 17.13427262  5.10985606]\n",
      "(3, 224) [87.5533132  17.13434437  5.10981865]\n",
      "(3, 224) [87.55307362 17.13442654  5.10978013]\n",
      "(3, 224) [87.55305625 17.13454032  5.10974515]\n",
      "(3, 224) [87.55317893 17.13464151  5.1097221 ]\n",
      "(3, 224) [87.55336753 17.13479425  5.10968745]\n",
      "(3, 224) [87.55348657 17.13497545  5.10964025]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  2%|█▋                                                                         | 1708/76339 [00:00<00:32, 2319.90it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.55361057 17.13518555  5.10958469]\n",
      "(3, 224) [87.55352691 17.13537538  5.10952308]\n",
      "(3, 224) [87.55365272 17.1355837   5.10946822]\n",
      "(3, 224) [87.55374194 17.13576717  5.10941867]\n",
      "(3, 224) [87.55388149 17.13593333  5.1093772 ]\n",
      "(3, 224) [87.55425097 17.13609818  5.10934955]\n",
      "(3, 224) [87.55446894 17.13623869  5.10932034]\n",
      "(3, 224) [87.55473152 17.136382    5.10929287]\n",
      "(3, 224) [87.55486271 17.1365324   5.10925563]\n",
      "(3, 224) [87.55510156 17.13667917  5.10922575]\n",
      "(3, 224) [87.55456656 17.1368092   5.10915566]\n",
      "(3, 224) [87.55416196 17.13690722  5.10910274]\n",
      "(3, 224) [87.55393379 17.13701727  5.10905655]\n",
      "(3, 224) [87.55373034 17.13714753  5.10900575]\n",
      "(3, 224) [87.55299678 17.13722494  5.10893981]\n",
      "(3, 224) [87.55237568 17.13728765  5.10888483]\n",
      "(3, 224) [87.55168754 17.13733533  5.10883043]\n",
      "(3, 224) [87.55120405 17.13733965  5.10880091]\n",
      "(3, 224) [87.550684   17.13740958  5.10874968]\n",
      "(3, 224) [87.55018386 17.13749577  5.10869474]\n",
      "(3, 224) [87.54987519 17.13754989  5.10866056]\n",
      "(3, 224) [87.54970602 17.13761493  5.10863124]\n",
      "(3, 224) [87.5495479  17.13768474  5.10860115]\n",
      "(3, 224) [87.54952939 17.13771932  5.10858973]\n",
      "(3, 224) [87.54957273 17.13771378  5.10859392]\n",
      "(3, 224) [87.5494551  17.13770743  5.10858894]\n",
      "(3, 224) [87.54980854 17.13772255  5.10860507]\n",
      "(3, 224) [87.5499195  17.1377173   5.10861311]\n",
      "(3, 224) [87.55003552 17.13772686  5.10861703]\n",
      "(3, 224) [87.55019617 17.13775707  5.10861739]\n",
      "(3, 224) [87.55045482 17.13777263  5.10862785]\n",
      "(3, 224) [87.55056573 17.13780116  5.10862581]\n",
      "(3, 224) [87.55072457 17.13781102  5.10863214]\n",
      "(3, 224) [87.55105474 17.13783232  5.10864505]\n",
      "(3, 224) [87.55118137 17.13786636  5.10864228]\n",
      "(3, 224) [87.5516931  17.1379287   5.10865354]\n",
      "(3, 224) [87.55197948 17.1379766   5.10865596]\n",
      "(3, 224) [87.55213043 17.13802313  5.10865089]\n",
      "(3, 224) [87.55241706 17.13806676  5.1086546 ]\n",
      "(3, 224) [87.55283356 17.13813696  5.10865796]\n",
      "(3, 224) [87.55339242 17.1382082   5.10866933]\n",
      "(3, 224) [87.55389234 17.13830089  5.10867085]\n",
      "(3, 224) [87.55455814 17.13839926  5.10868037]\n",
      "(3, 224) [87.55526359 17.13848546  5.10869584]\n",
      "(3, 224) [87.55605105 17.13858629  5.10871172]\n",
      "(3, 224) [87.55653707 17.13869058  5.10870896]\n",
      "(3, 224) [87.55719384 17.13879432  5.10871633]\n",
      "(3, 224) [87.55780554 17.13889931  5.10872069]\n",
      "(3, 224) [87.55813867 17.1389914   5.10871265]\n",
      "(3, 224) [87.55845802 17.13908521  5.10870329]\n",
      "(3, 224) [87.55877042 17.13917522  5.10869467]\n",
      "(3, 224) [87.55905682 17.13922327  5.10869705]\n",
      "(3, 224) [87.55910388 17.13928089  5.10868261]\n",
      "(3, 224) [87.55964282 17.13931872  5.10870278]\n",
      "(3, 224) [87.55992146 17.13937907  5.10870103]\n",
      "(3, 224) [87.56025816 17.13945021  5.10869947]\n",
      "(3, 224) [87.56080433 17.13952457  5.10870916]\n",
      "(3, 224) [87.56128059 17.1395804   5.1087203 ]\n",
      "(3, 224) [87.56164215 17.13965631  5.10871875]\n",
      "(3, 224) [87.56194898 17.13976532  5.10870414]\n",
      "(3, 224) [87.56220254 17.13984559  5.10869499]\n",
      "(3, 224) [87.56259239 17.1399308   5.10869233]\n",
      "(3, 224) [87.56287873 17.14002206  5.10868182]\n",
      "(3, 224) [87.5634887  17.14008015  5.10870009]\n",
      "(3, 224) [87.56384918 17.14013836  5.10870377]\n",
      "(3, 224) [87.56410503 17.14020435  5.10869903]\n",
      "(3, 224) [87.56425786 17.14028093  5.10868511]\n",
      "(3, 224) [87.56460907 17.14036884  5.10867941]\n",
      "(3, 224) [87.56511505 17.1404618   5.10868122]\n",
      "(3, 224) [87.56573976 17.14056918  5.10868566]\n",
      "(3, 224) [87.56597013 17.14066595  5.10867025]\n",
      "(3, 224) [87.5661359  17.1407664   5.10864998]\n",
      "(3, 224) [87.56672944 17.14085411  5.10865847]\n",
      "(3, 224) [87.56699185 17.14093157  5.10865069]\n",
      "(3, 224) [87.56701825 17.14101489  5.10862739]\n",
      "(3, 224) [87.56704466 17.14109442  5.10860522]\n",
      "(3, 224) [87.56697614 17.14118865  5.10857313]\n",
      "(3, 224) [87.56698365 17.14128332  5.10854534]\n",
      "(3, 224) [87.56707847 17.14138434  5.10852075]\n",
      "(3, 224) [87.56703824 17.14151918  5.10847818]\n",
      "(3, 224) [87.56698315 17.14164614  5.1084371 ]\n",
      "(3, 224) [87.56723293 17.14175684  5.10841867]\n",
      "(3, 224) [87.56728373 17.14184314  5.1083959 ]\n",
      "(3, 224) [87.56725038 17.14191362  5.10837294]\n",
      "(3, 224) [87.56727763 17.14197894  5.10835504]\n",
      "(3, 224) [87.5669039  17.14204928  5.10831227]\n",
      "(3, 224) [87.56673826 17.14212766  5.10827924]\n",
      "(3, 224) [87.56651825 17.1422324   5.10823517]\n",
      "(3, 224) [87.56640336 17.14232392  5.1082012 ]\n",
      "(3, 224) [87.56624046 17.14239782  5.10816966]\n",
      "(3, 224) [87.56610898 17.14244727  5.10814725]\n",
      "(3, 224) [87.5658391  17.14250285  5.10811493]\n",
      "(3, 224) [87.56541219 17.14257783  5.10806766]\n",
      "(3, 224) [87.56502523 17.14263312  5.10802861]\n",
      "(3, 224) [87.56462633 17.14269106  5.10798806]\n",
      "(3, 224) [87.56414306 17.14274507  5.10794377]\n",
      "(3, 224) [87.56349616 17.14278833  5.10789311]\n",
      "(3, 224) [87.56341986 17.14284541  5.10787165]\n",
      "(3, 224) [87.56325685 17.14289051  5.10784869]\n",
      "(3, 224) [87.56275994 17.14293433  5.10780662]\n",
      "(3, 224) [87.56246808 17.14295925  5.10778216]\n",
      "(3, 224) [87.56218496 17.14299144  5.10775603]\n",
      "(3, 224) [87.56183048 17.14301977  5.10772689]\n",
      "(3, 224) [87.56150162 17.14306502  5.1076942 ]\n",
      "(3, 224) [87.56122905 17.1431057   5.10766616]\n",
      "(3, 224) [87.56080186 17.14313235  5.10763328]\n",
      "(3, 224) [87.56051494 17.14315379  5.10761014]\n",
      "(3, 224) [87.56013465 17.14316581  5.10758436]\n",
      "(3, 224) [87.55977039 17.1431747   5.10756045]\n",
      "(3, 224) [87.55936445 17.1431811   5.10753485]\n",
      "(3, 224) [87.55908695 17.14317058  5.1075218 ]\n",
      "(3, 224) [87.55856962 17.14317086  5.10749152]\n",
      "(3, 224) [87.55803626 17.1431398   5.10746965]\n",
      "(3, 224) [87.55759131 17.14310169  5.10745505]\n",
      "(3, 224) [87.55732061 17.14305873  5.10745205]\n",
      "(3, 224) [87.55686566 17.14301171  5.10743952]\n",
      "(3, 224) [87.55626824 17.14296894  5.10741741]\n",
      "(3, 224) [87.55567666 17.14293287  5.10739363]\n",
      "(3, 224) [87.55514369 17.14289946  5.10737249]\n",
      "(3, 224) [87.55447435 17.14285827  5.10734571]\n",
      "(3, 224) [87.55354881 17.14280582  5.10730732]\n",
      "(3, 224) [87.55290066 17.14271543  5.10729644]\n",
      "(3, 224) [87.55212683 17.14262554  5.10727808]\n",
      "(3, 224) [87.55118983 17.14251309  5.10725691]\n",
      "(3, 224) [87.55016705 17.14239576  5.10723219]\n",
      "(3, 224) [87.54933084 17.14229047  5.10721477]\n",
      "(3, 224) [87.54850973 17.14218176  5.10719923]\n",
      "(3, 224) [87.54787755 17.14210129  5.10718632]\n",
      "(3, 224) [87.54736837 17.14199601  5.10718799]\n",
      "(3, 224) [87.54643176 17.14188243  5.10716718]\n",
      "(3, 224) [87.54547106 17.14171917  5.1071598 ]\n",
      "(3, 224) [87.54454862 17.14155462  5.10715503]\n",
      "(3, 224) [87.54392206 17.14138039  5.10717044]\n",
      "(3, 224) [87.54322361 17.14118273  5.10718865]\n",
      "(3, 224) [87.54246298 17.1409761   5.1072059 ]\n",
      "(3, 224) [87.54175436 17.14075857  5.10722949]\n",
      "(3, 224) [87.54107443 17.14057898  5.10724339]\n",
      "(3, 224) [87.54048575 17.14038715  5.10726627]\n",
      "(3, 224) [87.53994622 17.1402092   5.10728787]\n",
      "(3, 224) [87.5394479  17.1400687   5.10730069]\n",
      "(3, 224) [87.53882627 17.13998598  5.10728906]\n",
      "(3, 224) [87.53835838 17.13992582  5.10727969]\n",
      "(3, 224) [87.53798456 17.13985713  5.10727834]\n",
      "(3, 224) [87.53764437 17.13981691  5.10727048]\n",
      "(3, 224) [87.5373726  17.13982147  5.10725327]\n",
      "(3, 224) [87.53712102 17.13985068  5.1072299 ]\n",
      "(3, 224) [87.53690527 17.13988506  5.10720708]\n",
      "(3, 224) [87.53679373 17.13994665  5.10718223]\n",
      "(3, 224) [87.53652536 17.14003085  5.10714148]\n",
      "(3, 224) [87.53647656 17.14011411  5.10711383]\n",
      "(3, 224) [87.53611794 17.14016938  5.10707642]\n",
      "(3, 224) [87.53604069 17.14027662  5.10703996]\n",
      "(3, 224) [87.53580753 17.14036786  5.10699917]\n",
      "(3, 224) [87.5356741  17.14045982  5.106964  ]\n",
      "(3, 224) [87.5357746  17.14054664  5.106944  ]\n",
      "(3, 224) [87.53567038 17.14062543  5.10691445]\n",
      "(3, 224) [87.53561971 17.14070152  5.10688883]\n",
      "(3, 224) [87.53551326 17.1407629   5.10686433]\n",
      "(3, 224) [87.5356647  17.14084454  5.10684884]\n",
      "(3, 224) [87.53529066 17.14091697  5.10680544]\n",
      "(3, 224) [87.53503816 17.14097422  5.10677365]\n",
      "(3, 224) [87.53490775 17.14101956  5.10675254]\n",
      "(3, 224) [87.53460968 17.14106539  5.1067215 ]\n",
      "(3, 224) [87.53421946 17.14112841  5.10667997]\n",
      "(3, 224) [87.5341244  17.14112355  5.10667588]\n",
      "(3, 224) [87.53433812 17.14113008  5.1066864 ]\n",
      "(3, 224) [87.53471839 17.1411698   5.10669675]\n",
      "(3, 224) [87.53531079 17.14124032  5.10671029]\n",
      "(3, 224) [87.53602465 17.1412968   5.1067351 ]\n",
      "(3, 224) [87.53666628 17.14136748  5.10675146]\n",
      "(3, 224) [87.53735763 17.1413976   5.1067828 ]\n",
      "(3, 224) [87.53787453 17.14141252  5.10680849]\n",
      "(3, 224) [87.53870632 17.1414286   5.10685219]\n",
      "(3, 224) [87.53924411 17.1414394   5.10688033]\n",
      "(3, 224) [87.53983672 17.14144458  5.10691333]\n",
      "(3, 224) [87.54041513 17.1414519   5.10694488]\n",
      "(3, 224) [87.54104079 17.14145662  5.10697994]\n",
      "(3, 224) [87.54157334 17.14146185  5.10700942]\n",
      "(3, 224) [87.5419725  17.14143859  5.10703961]\n",
      "(3, 224) [87.54244438 17.14142256  5.10707188]\n",
      "(3, 224) [87.54298412 17.14140603  5.10710826]\n",
      "(3, 224) [87.54345154 17.14139548  5.10713863]\n",
      "(3, 224) [87.54422424 17.14138116  5.10718792]\n",
      "(3, 224) [87.54475344 17.14136127  5.10722468]\n",
      "(3, 224) [87.54532424 17.1413238   5.10726908]\n",
      "(3, 224) [87.54606723 17.14129732  5.10732025]\n",
      "(3, 224) [87.54668129 17.14126771  5.10736483]\n",
      "(3, 224) [87.5472966  17.14128491  5.10739558]\n",
      "(3, 224) [87.54784308 17.14128481  5.10742745]\n",
      "(3, 224) [87.54813005 17.14129115  5.10744229]\n",
      "(3, 224) [87.54850093 17.14127175  5.10746968]\n",
      "(3, 224) [87.5486846  17.14124345  5.1074888 ]\n",
      "(3, 224) [87.54895283 17.14121912  5.10751167]\n",
      "(3, 224) [87.54932811 17.14118926  5.10754242]\n",
      "(3, 224) [87.54969232 17.14117298  5.10756849]\n",
      "(3, 224) [87.5502343  17.14117583  5.10759923]\n",
      "(3, 224) [87.55065406 17.14115407  5.10763016]\n",
      "(3, 224) [87.55090384 17.14113999  5.10764891]\n",
      "(3, 224) [87.55153584 17.14112072  5.10769149]\n",
      "(3, 224) [87.55207923 17.14106021  5.10774118]\n",
      "(3, 224) [87.55274687 17.14102582  5.10779033]\n",
      "(3, 224) [87.5534901  17.14098858  5.10784475]\n",
      "(3, 224) [87.5542339  17.14095094  5.10789933]\n",
      "(3, 224) [87.55492104 17.14087009  5.10796347]\n",
      "(3, 224) [87.55550207 17.14079311  5.10802027]\n",
      "(3, 224) [87.5563149  17.14072068  5.10808925]\n",
      "(3, 224) [87.55709074 17.14069238  5.1081429 ]\n",
      "(3, 224) [87.55766236 17.14064188  5.10819127]\n",
      "(3, 224) [87.5584561 17.1406404  5.108238 ]\n",
      "(3, 224) [87.55895667 17.14059925  5.10827945]\n",
      "(3, 224) [87.55958474 17.14056169  5.10832728]\n",
      "(3, 224) [87.56024905 17.14054996  5.10836951]\n",
      "(3, 224) [87.56076554 17.14053518  5.10840404]\n",
      "(3, 224) [87.56144369 17.14050667  5.10845207]\n",
      "(3, 224) [87.56209213 17.14049118  5.1084945 ]\n",
      "(3, 224) [87.56285163 17.14045167  5.10855057]\n",
      "(3, 224) [87.56350289 17.1404142   5.10859973]\n",
      "(3, 224) [87.56401098 17.14039646  5.10863465]\n",
      "(3, 224) [87.56463383 17.14045082  5.10865478]\n",
      "(3, 224) [87.56521095 17.14051446  5.10866948]\n",
      "(3, 224) [87.56588869 17.14055553  5.10869677]\n",
      "(3, 224) [87.56646186 17.14061188  5.1087134 ]\n",
      "(3, 224) [87.56672049 17.14068341  5.10870715]\n",
      "(3, 224) [87.56744822 17.14076125  5.1087264 ]\n",
      "(3, 224) [87.56791015 17.14081798  5.10873643]\n",
      "(3, 224) [87.56858583 17.14086186  5.10876277]\n",
      "(3, 224) [87.56899528 17.14088149  5.1087808 ]\n",
      "(3, 224) [87.56952361 17.14087975  5.10881213]\n",
      "(3, 224) [87.57008285 17.14090966  5.10883584]\n",
      "(3, 224) [87.57051591 17.14093497  5.10885355]\n",
      "(3, 224) [87.57093572 17.14088883  5.10889182]\n",
      "(3, 224) [87.57137275 17.14085039  5.1089288 ]\n",
      "(3, 224) [87.57171552 17.1408168   5.10895882]\n",
      "(3, 224) [87.57190413 17.14079893  5.10897516]\n",
      "(3, 224) [87.57216966 17.14078602  5.1089945 ]\n",
      "(3, 224) [87.57227493 17.14081012  5.10899346]\n",
      "(3, 224) [87.5725046  17.14080824  5.10900742]\n",
      "(3, 224) [87.57252798 17.1408095   5.10900841]\n",
      "(3, 224) [87.57265133 17.14082091  5.1090122 ]\n",
      "(3, 224) [87.57286832 17.14082301  5.10902424]\n",
      "(3, 224) [87.57307107 17.14083488  5.10903253]\n",
      "(3, 224) [87.57297591 17.14086259  5.10901871]\n",
      "(3, 224) [87.57300686 17.14084972  5.10902436]\n",
      "(3, 224) [87.57301278 17.14083739  5.10902838]\n",
      "(3, 224) [87.57278764 17.14080372  5.10902528]\n",
      "(3, 224) [87.57246068 17.14076264  5.10901845]\n",
      "(3, 224) [87.57245289 17.14074937  5.10902196]\n",
      "(3, 224) [87.57208707 17.1407502   5.10900035]\n",
      "(3, 224) [87.57182509 17.14074176  5.10898757]\n",
      "(3, 224) [87.57141517 17.14071695  5.10897104]\n",
      "(3, 224) [87.57082323 17.14068286  5.10894665]\n",
      "(3, 224) [87.57033328 17.14063858  5.10893125]\n",
      "(3, 224) [87.56974196 17.14057962  5.10891431]\n",
      "(3, 224) [87.56905316 17.14050849  5.10889532]\n",
      "(3, 224) [87.56833623 17.14050591  5.10885424]\n",
      "(3, 224) [87.56752468 17.14049498  5.10881012]\n",
      "(3, 224) [87.5668438  17.14046364  5.10877973]\n",
      "(3, 224) [87.56591144 17.14042899  5.10873564]\n",
      "(3, 224) [87.56471508 17.14037035  5.10868328]\n",
      "(3, 224) [87.56359177 17.14031656  5.10863376]\n",
      "(3, 224) [87.56286314 17.14025774  5.10860877]\n",
      "(3, 224) [87.56192663 17.14015135  5.10858582]\n",
      "(3, 224) [87.56078215 17.14000931  5.10856137]\n",
      "(3, 224) [87.5595106  17.13991652  5.10851481]\n",
      "(3, 224) [87.55827867 17.13980826  5.10847517]\n",
      "(3, 224) [87.55714737 17.13972605  5.10843365]\n",
      "(3, 224) [87.55602283 17.1396207   5.10839942]\n",
      "(3, 224) [87.55474009 17.13951694  5.10835547]\n",
      "(3, 224) [87.55327088 17.13941432  5.1083003 ]\n",
      "(3, 224) [87.55188061 17.13932026  5.10824719]\n",
      "(3, 224) [87.55048494 17.13923339  5.10819162]\n",
      "(3, 224) [87.54927684 17.13915629  5.10814411]\n",
      "(3, 224) [87.54803967 17.13905834  5.10810109]\n",
      "(3, 224) [87.54697285 17.13895232  5.10807043]\n",
      "(3, 224) [87.54588279 17.1388411   5.10803995]\n",
      "(3, 224) [87.54464319 17.1387238   5.10800254]\n",
      "(3, 224) [87.54335796 17.13858062  5.10797019]\n",
      "(3, 224) [87.5417934  17.13844119  5.10792041]\n",
      "(3, 224) [87.54055217 17.13831542  5.10788545]\n",
      "(3, 224) [87.53927091 17.13816613  5.10785515]\n",
      "(3, 224) [87.5376188  17.1380171   5.10780314]\n",
      "(3, 224) [87.53609062 17.13786525  5.10775919]\n",
      "(3, 224) [87.53478376 17.13772603  5.10772441]\n",
      "(3, 224) [87.53372533 17.1375376   5.10771881]\n",
      "(3, 224) [87.53245558 17.13736937  5.10769485]\n",
      "(3, 224) [87.53146467 17.13719165  5.10769   ]\n",
      "(3, 224) [87.53030455 17.13701092  5.10767616]\n",
      "(3, 224) [87.52904591 17.13682355  5.10765858]\n",
      "(3, 224) [87.52800749 17.13662905  5.10765598]\n",
      "(3, 224) [87.52695641 17.13641645  5.10765803]\n",
      "(3, 224) [87.52591202 17.13618635  5.10766568]\n",
      "(3, 224) [87.52509566 17.13595196  5.10768794]\n",
      "(3, 224) [87.52399162 17.13572032  5.1076926 ]\n",
      "(3, 224) [87.52274052 17.13549187  5.1076877 ]\n",
      "(3, 224) [87.52182129 17.13527994  5.10769724]\n",
      "(3, 224) [87.52095239 17.13505708  5.10771298]\n",
      "(3, 224) [87.51998976 17.13479474  5.10773507]\n",
      "(3, 224) [87.51889805 17.13452779  5.10775099]\n",
      "(3, 224) [87.51781527 17.13426815  5.10776521]\n",
      "(3, 224) [87.51695398 17.13401922  5.10778918]\n",
      "(3, 224) [87.51597871 17.13374926  5.10781276]\n",
      "(3, 224) [87.51502052 17.13347888  5.10783747]\n",
      "(3, 224) [87.5138926  17.13321667  5.10784984]\n",
      "(3, 224) [87.51279352 17.13295064  5.107865  ]\n",
      "(3, 224) [87.51192404 17.13268699  5.10789287]\n",
      "(3, 224) [87.51083145 17.13243424  5.10790447]\n",
      "(3, 224) [87.51006609 17.13219042  5.10793254]\n",
      "(3, 224) [87.50948256 17.13196338  5.10796623]\n",
      "(3, 224) [87.50875192 17.13172584  5.10799449]\n",
      "(3, 224) [87.50829109 17.13147078  5.1080437 ]\n",
      "(3, 224) [87.50760316 17.13118397  5.10808914]\n",
      "(3, 224) [87.50709052 17.13090382  5.10814282]\n",
      "(3, 224) [87.50686075 17.13062014  5.10821411]\n",
      "(3, 224) [87.50639449 17.13034344  5.10826949]\n",
      "(3, 224) [87.50602282 17.13011273  5.10831667]\n",
      "(3, 224) [87.50555618 17.12988416  5.10835765]\n",
      "(3, 224) [87.50549356 17.12965867  5.1084213 ]\n",
      "(3, 224) [87.50505088 17.12941156  5.1084692 ]\n",
      "(3, 224) [87.50481341 17.12917626  5.10852555]\n",
      "(3, 224) [87.50449463 17.12893762  5.10857815]\n",
      "(3, 224) [87.50435942 17.12871917  5.10863547]\n",
      "(3, 224) [87.50395636 17.12845166  5.10869184]\n",
      "(3, 224) [87.50342507 17.12820975  5.10873304]\n",
      "(3, 224) [87.50339118 17.12797917  5.10879993]\n",
      "(3, 224) [87.50304666 17.12777941  5.10883946]\n",
      "(3, 224) [87.50271996 17.12757059  5.10888277]\n",
      "(3, 224) [87.5023432  17.12735263  5.10892586]\n",
      "(3, 224) [87.50211993 17.12713203  5.10897871]\n",
      "(3, 224) [87.5020714  17.12692293  5.10903835]\n",
      "(3, 224) [87.50200486 17.12671169  5.10909757]\n",
      "(3, 224) [87.50185054 17.12651091  5.10914855]\n",
      "(3, 224) [87.50192091 17.12631954  5.10920982]\n",
      "(3, 224) [87.50220758 17.12612228  5.10928551]\n",
      "(3, 224) [87.50253333 17.12590697  5.10936887]\n",
      "(3, 224) [87.50274465 17.12571929  5.10943729]\n",
      "(3, 224) [87.50312756 17.12554388  5.10951208]\n",
      "(3, 224) [87.50353275 17.12538976  5.10958183]\n",
      "(3, 224) [87.50355489 17.1252197   5.10963395]\n",
      "(3, 224) [87.50360357 17.12505921  5.10968476]\n",
      "(3, 224) [87.50398627 17.12489562  5.10975602]\n",
      "(3, 224) [87.50404581 17.12473851  5.10980645]\n",
      "(3, 224) [87.50446381 17.1245862   5.10987639]\n",
      "(3, 224) [87.50491517 17.12442903  5.10994975]\n",
      "(3, 224) [87.50546097 17.1242908   5.11002296]\n",
      "(3, 224) [87.50613986 17.12416546  5.1101001 ]\n",
      "(3, 224) [87.50685609 17.12403473  5.11018105]\n",
      "(3, 224) [87.50741972 17.12391445  5.11024996]\n",
      "(3, 224) [87.50827878 17.12379182  5.11033684]\n",
      "(3, 224) [87.50934461 17.12366688  5.11043651]\n",
      "(3, 224) [87.51010283 17.12353396  5.11052059]\n",
      "(3, 224) [87.51103703 17.12339537  5.11061663]\n",
      "(3, 224) [87.51179305 17.12324448  5.11070594]\n",
      "(3, 224) [87.51246144 17.12310508  5.11078672]\n",
      "(3, 224) [87.51342587 17.12297719  5.11088136]\n",
      "(3, 224) [87.51444484 17.12289365  5.11096596]\n",
      "(3, 224) [87.51544616 17.12281045  5.11104943]\n",
      "(3, 224) [87.5163279  17.12275941  5.1111163 ]\n",
      "(3, 224) [87.51722829 17.1227272   5.11117862]\n",
      "(3, 224) [87.51820383 17.12269085  5.11124659]\n",
      "(3, 224) [87.51894858 17.12266185  5.11129885]\n",
      "(3, 224) [87.51959506 17.12259319  5.11135723]\n",
      "(3, 224) [87.52027711 17.12252953  5.11141619]\n",
      "(3, 224) [87.52087674 17.12244546  5.11147644]\n",
      "(3, 224) [87.52134561 17.12230477  5.11154597]\n",
      "(3, 224) [87.52204385 17.12213512  5.11163754]\n",
      "(3, 224) [87.52266202 17.12193787  5.11173264]\n",
      "(3, 224) [87.52310553 17.1217259   5.11182195]\n",
      "(3, 224) [87.52352905 17.12148877  5.11191759]\n",
      "(3, 224) [87.52408921 17.12121545  5.11203198]\n",
      "(3, 224) [87.52451506 17.12094738  5.11213695]\n",
      "(3, 224) [87.52521834 17.1206813   5.11225752]\n",
      "(3, 224) [87.52552428 17.120413    5.11235555]\n",
      "(3, 224) [87.52600603 17.1201583   5.11245976]\n",
      "(3, 224) [87.52631469 17.11991113  5.11255161]\n",
      "(3, 224) [87.52695264 17.11970399  5.11265079]\n",
      "(3, 224) [87.52741009 17.11945268  5.11275257]\n",
      "(3, 224) [87.52790009 17.11919519  5.1128581 ]\n",
      "(3, 224) [87.52825093 17.11892877  5.11295814]\n",
      "(3, 224) [87.52852297 17.11866271  5.1130535 ]\n",
      "(3, 224) [87.52872904 17.11841067  5.11314081]\n",
      "(3, 224) [87.52892961 17.11816615  5.11322553]\n",
      "(3, 224) [87.52917958 17.11793129  5.11331026]\n",
      "(3, 224) [87.52936515 17.11771492  5.1133857 ]\n",
      "(3, 224) [87.52976198 17.11750532  5.11347144]\n",
      "(3, 224) [87.52993058 17.11730007  5.11354257]\n",
      "(3, 224) [87.53039799 17.11710509  5.11362807]\n",
      "(3, 224) [87.53062927 17.11689433  5.11370447]\n",
      "(3, 224) [87.53092423 17.11666512  5.1137901 ]\n",
      "(3, 224) [87.53102744 17.11647569  5.11385268]\n",
      "(3, 224) [87.53106117 17.11627888  5.11391343]\n",
      "(3, 224) [87.53083529 17.11602972  5.11397465]\n",
      "(3, 224) [87.53062583 17.11576045  5.11404284]\n",
      "(3, 224) [87.53004379 17.11550472  5.11408523]\n",
      "(3, 224) [87.52954671 17.11525419  5.114131  ]\n",
      "(3, 224) [87.52888908 17.11502809  5.11416007]\n",
      "(3, 224) [87.52852014 17.11480937  5.11420379]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  3%|██▏                                                                        | 2171/76339 [00:00<00:33, 2237.37it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.52813669 17.11459354  5.11424584]\n",
      "(3, 224) [87.527689   17.11436765  5.11428712]\n",
      "(3, 224) [87.52740724 17.11414209  5.11433801]\n",
      "(3, 224) [87.52680043 17.11391975  5.11436896]\n",
      "(3, 224) [87.52627736 17.11367222  5.1144123 ]\n",
      "(3, 224) [87.52580913 17.11339531  5.11446768]\n",
      "(3, 224) [87.52543804 17.11314798  5.1145199 ]\n",
      "(3, 224) [87.52484638 17.11288526  5.11456381]\n",
      "(3, 224) [87.52447167 17.11259845  5.11462761]\n",
      "(3, 224) [87.52416016 17.11230699  5.11469646]\n",
      "(3, 224) [87.5237845  17.11204744  5.11475204]\n",
      "(3, 224) [87.52319114 17.11178814  5.11479482]\n",
      "(3, 224) [87.52278547 17.1115371   5.11484605]\n",
      "(3, 224) [87.522316   17.11128367  5.11489431]\n",
      "(3, 224) [87.52208004 17.11101306  5.11496135]\n",
      "(3, 224) [87.52158264 17.11073911  5.11501407]\n",
      "(3, 224) [87.52104137 17.11046477  5.11506435]\n",
      "(3, 224) [87.520614   17.11021946  5.1151126 ]\n",
      "(3, 224) [87.52013674 17.11000713  5.1151481 ]\n",
      "(3, 224) [87.51981289 17.10977833  5.11519745]\n",
      "(3, 224) [87.51974866 17.10955754  5.11525959]\n",
      "(3, 224) [87.51934615 17.10932106  5.11530669]\n",
      "(3, 224) [87.51909927 17.10907469  5.11536583]\n",
      "(3, 224) [87.5186448  17.10880155  5.1154208 ]\n",
      "(3, 224) [87.51828435 17.10854868  5.11547524]\n",
      "(3, 224) [87.51819789 17.10829026  5.11554732]\n",
      "(3, 224) [87.51756478 17.10805276  5.1155813 ]\n",
      "(3, 224) [87.51715605 17.10782205  5.11562638]\n",
      "(3, 224) [87.51666491 17.10756276  5.11567519]\n",
      "(3, 224) [87.51581819 17.10728816  5.11570783]\n",
      "(3, 224) [87.51516475 17.10702851  5.11574729]\n",
      "(3, 224) [87.5143097  17.10677283  5.11577381]\n",
      "(3, 224) [87.51342586 17.10653658  5.11579281]\n",
      "(3, 224) [87.51254804 17.10631219  5.11580863]\n",
      "(3, 224) [87.51149658 17.10602635  5.11583267]\n",
      "(3, 224) [87.51082995 17.10581487  5.11585692]\n",
      "(3, 224) [87.51006789 17.10560921  5.11587386]\n",
      "(3, 224) [87.50950657 17.10543517  5.11589308]\n",
      "(3, 224) [87.50908597 17.10527346  5.11591684]\n",
      "(3, 224) [87.50857561 17.10506605  5.11594902]\n",
      "(3, 224) [87.5078996  17.10486463  5.1159697 ]\n",
      "(3, 224) [87.50726658 17.10467038  5.11599077]\n",
      "(3, 224) [87.50646479 17.10446703  5.11600471]\n",
      "(3, 224) [87.5057106  17.10431115  5.11600724]\n",
      "(3, 224) [87.50477856 17.10415638  5.11599905]\n",
      "(3, 224) [87.503734   17.1039909   5.11598748]\n",
      "(3, 224) [87.50307777 17.10382832  5.11599772]\n",
      "(3, 224) [87.50253573 17.10362907  5.11602558]\n",
      "(3, 224) [87.50189279 17.1034379   5.11604515]\n",
      "(3, 224) [87.50129468 17.10325486  5.11606491]\n",
      "(3, 224) [87.50077745 17.10307308  5.11608899]\n",
      "(3, 224) [87.49996977 17.10289863  5.11609392]\n",
      "(3, 224) [87.49955694 17.10273713  5.11611804]\n",
      "(3, 224) [87.4990353  17.10258774  5.11613219]\n",
      "(3, 224) [87.49859524 17.10241714  5.11615743]\n",
      "(3, 224) [87.49807743 17.10228538  5.11616653]\n",
      "(3, 224) [87.49756473 17.10217471  5.11616964]\n",
      "(3, 224) [87.49695537 17.10205278  5.11617047]\n",
      "(3, 224) [87.49649964 17.10195806  5.11617216]\n",
      "(3, 224) [87.49574885 17.1018812   5.11615128]\n",
      "(3, 224) [87.49556817 17.10179504  5.11616647]\n",
      "(3, 224) [87.49528142 17.1016889   5.11618143]\n",
      "(3, 224) [87.49510201 17.10159811  5.11619807]\n",
      "(3, 224) [87.49501482 17.10149385  5.11622411]\n",
      "(3, 224) [87.49490024 17.10140679  5.11624342]\n",
      "(3, 224) [87.49485778 17.10132072  5.11626663]\n",
      "(3, 224) [87.49474979 17.10117922  5.11630257]\n",
      "(3, 224) [87.49474093 17.10106026  5.11633758]\n",
      "(3, 224) [87.49484536 17.10093759  5.11638031]\n",
      "(3, 224) [87.49510697 17.10081551  5.11643205]\n",
      "(3, 224) [87.49528193 17.10068605  5.11648093]\n",
      "(3, 224) [87.49551032 17.10056012  5.1165319 ]\n",
      "(3, 224) [87.49571845 17.10045348  5.11657594]\n",
      "(3, 224) [87.49579468 17.10039953  5.11659651]\n",
      "(3, 224) [87.49592366 17.10030122  5.11663344]\n",
      "(3, 224) [87.49619837 17.10019754  5.11668049]\n",
      "(3, 224) [87.49657388 17.10010351  5.11673056]\n",
      "(3, 224) [87.49719438 17.10001223  5.11679414]\n",
      "(3, 224) [87.49763794 17.09992796  5.11684526]\n",
      "(3, 224) [87.4983621  17.09987142  5.11690449]\n",
      "(3, 224) [87.49902987 17.09983653  5.11695394]\n",
      "(3, 224) [87.49975101 17.09979825  5.11700753]\n",
      "(3, 224) [87.50042087 17.09969919  5.11707625]\n",
      "(3, 224) [87.50123805 17.09960256  5.11715283]\n",
      "(3, 224) [87.50204335 17.09950165  5.11723004]\n",
      "(3, 224) [87.5030472  17.09942569  5.11731139]\n",
      "(3, 224) [87.50411341 17.09936512  5.11739177]\n",
      "(3, 224) [87.50513515 17.09930383  5.11746976]\n",
      "(3, 224) [87.50608153 17.09926104  5.11753783]\n",
      "(3, 224) [87.50729876 17.09924678  5.11761322]\n",
      "(3, 224) [87.50873634 17.09926472  5.11769189]\n",
      "(3, 224) [87.51008514 17.09924104  5.11777775]\n",
      "(3, 224) [87.51157785 17.09921332  5.11787324]\n",
      "(3, 224) [87.51279188 17.09917068  5.11795691]\n",
      "(3, 224) [87.51394124 17.0991281   5.11803678]\n",
      "(3, 224) [87.5152034  17.09907813  5.11812545]\n",
      "(3, 224) [87.51652216 17.09903861  5.11821431]\n",
      "(3, 224) [87.5178465  17.09897694  5.11831011]\n",
      "(3, 224) [87.51928781 17.09892471  5.11840993]\n",
      "(3, 224) [87.52066627 17.09885551  5.11851115]\n",
      "(3, 224) [87.52219727 17.098812    5.11861361]\n",
      "(3, 224) [87.52355653 17.09876942  5.11870577]\n",
      "(3, 224) [87.52502077 17.09872795  5.11880374]\n",
      "(3, 224) [87.52669209 17.09870945  5.11890694]\n",
      "(3, 224) [87.52847159 17.09871026  5.11901071]\n",
      "(3, 224) [87.53034282 17.09871076  5.11911994]\n",
      "(3, 224) [87.53207934 17.09868239  5.11922992]\n",
      "(3, 224) [87.53374512 17.09867739  5.11932877]\n",
      "(3, 224) [87.53562166 17.09867848  5.1194381 ]\n",
      "(3, 224) [87.53753282 17.09869765  5.11954407]\n",
      "(3, 224) [87.53928599 17.09871341  5.1196418 ]\n",
      "(3, 224) [87.54096816 17.09877274  5.11972237]\n",
      "(3, 224) [87.5427924  17.09882537  5.11981325]\n",
      "(3, 224) [87.54451201 17.09888885  5.11989476]\n",
      "(3, 224) [87.5462636  17.09894255  5.11998108]\n",
      "(3, 224) [87.54793193 17.09901129  5.12005804]\n",
      "(3, 224) [87.5495956  17.09907968  5.12013483]\n",
      "(3, 224) [87.55115266 17.09915813  5.12020239]\n",
      "(3, 224) [87.55313561 17.09927381  5.12028371]\n",
      "(3, 224) [87.55496105 17.09936551  5.12036298]\n",
      "(3, 224) [87.55666047 17.0994491   5.12043732]\n",
      "(3, 224) [87.55859735 17.09954778  5.12052103]\n",
      "(3, 224) [87.56029818 17.09962749  5.1205966 ]\n",
      "(3, 224) [87.56214132 17.09973251  5.12067292]\n",
      "(3, 224) [87.5639018  17.09986259  5.1207369 ]\n",
      "(3, 224) [87.5659565  17.10004502  5.12080243]\n",
      "(3, 224) [87.56818648 17.10023608  5.12087562]\n",
      "(3, 224) [87.56999455 17.10040511  5.12093075]\n",
      "(3, 224) [87.57202721 17.10057018  5.12100019]\n",
      "(3, 224) [87.57385041 17.10076916  5.12104725]\n",
      "(3, 224) [87.57570786 17.10095545  5.12110011]\n",
      "(3, 224) [87.57787052 17.10114055  5.12117117]\n",
      "(3, 224) [87.58002005 17.10133172  5.12123963]\n",
      "(3, 224) [87.58236834 17.1015097   5.12132366]\n",
      "(3, 224) [87.58429817 17.10168682  5.12138345]\n",
      "(3, 224) [87.58624235 17.10182408  5.12145601]\n",
      "(3, 224) [87.58800157 17.10198787  5.12150982]\n",
      "(3, 224) [87.58961171 17.10215766  5.12155313]\n",
      "(3, 224) [87.59145394 17.10234618  5.1216044 ]\n",
      "(3, 224) [87.59298723 17.1024965   5.12164905]\n",
      "(3, 224) [87.59425856 17.10266635  5.12167253]\n",
      "(3, 224) [87.59560949 17.10282053  5.12170536]\n",
      "(3, 224) [87.59682192 17.10294524  5.1217389 ]\n",
      "(3, 224) [87.59826639 17.10305199  5.1217914 ]\n",
      "(3, 224) [87.59957904 17.10315992  5.12183582]\n",
      "(3, 224) [87.60096642 17.10328874  5.12187838]\n",
      "(3, 224) [87.60230696 17.10341351  5.12191941]\n",
      "(3, 224) [87.60359301 17.10355019  5.12195369]\n",
      "(3, 224) [87.6049906  17.10367907  5.12199682]\n",
      "(3, 224) [87.6063259  17.10383505  5.12202818]\n",
      "(3, 224) [87.60766249 17.10397844  5.1220634 ]\n",
      "(3, 224) [87.60864308 17.10412056  5.12207818]\n",
      "(3, 224) [87.6098773  17.10426273  5.12210778]\n",
      "(3, 224) [87.61102261 17.10441325  5.12212968]\n",
      "(3, 224) [87.61242044 17.1045811   5.12216115]\n",
      "(3, 224) [87.61366513 17.10474474  5.12218493]\n",
      "(3, 224) [87.6148842  17.10489321  5.12221172]\n",
      "(3, 224) [87.61610823 17.10505327  5.12223536]\n",
      "(3, 224) [87.61718475 17.10521837  5.12224886]\n",
      "(3, 224) [87.61833924 17.10534708  5.1222778 ]\n",
      "(3, 224) [87.61931943 17.10547363  5.1222972 ]\n",
      "(3, 224) [87.62029718 17.10560659  5.12231453]\n",
      "(3, 224) [87.62104383 17.10571985  5.12232426]\n",
      "(3, 224) [87.62174085 17.10583028  5.12233193]\n",
      "(3, 224) [87.62262056 17.10594629  5.12234861]\n",
      "(3, 224) [87.62367303 17.10606339  5.12237507]\n",
      "(3, 224) [87.62467425 17.10618555  5.12239702]\n",
      "(3, 224) [87.62554458 17.10631916  5.12240789]\n",
      "(3, 224) [87.62672894 17.10644428  5.12243964]\n",
      "(3, 224) [87.62774615 17.10656441  5.12246312]\n",
      "(3, 224) [87.62847578 17.10667819  5.1224717 ]\n",
      "(3, 224) [87.62925809 17.10677854  5.12248736]\n",
      "(3, 224) [87.62996595 17.1068771   5.12249922]\n",
      "(3, 224) [87.63052699 17.10697905  5.12250147]\n",
      "(3, 224) [87.63111929 17.10707964  5.12250597]\n",
      "(3, 224) [87.63194868 17.10721735  5.12251319]\n",
      "(3, 224) [87.63252678 17.10735017  5.12250719]\n",
      "(3, 224) [87.6332628  17.10747798  5.12251193]\n",
      "(3, 224) [87.63404025 17.10761638  5.12251591]\n",
      "(3, 224) [87.63488108 17.10776382  5.12252088]\n",
      "(3, 224) [87.6355556  17.10790793  5.12251713]\n",
      "(3, 224) [87.63614496 17.1080348   5.12251357]\n",
      "(3, 224) [87.63663022 17.10817138  5.122501  ]\n",
      "(3, 224) [87.63705691 17.10830546  5.12248576]\n",
      "(3, 224) [87.63743824 17.10844387  5.12246658]\n",
      "(3, 224) [87.6378436  17.10858179  5.12244896]\n",
      "(3, 224) [87.63840055 17.10873094  5.12243682]\n",
      "(3, 224) [87.63892355 17.10887285  5.12242487]\n",
      "(3, 224) [87.63932948 17.10900963  5.12240762]\n",
      "(3, 224) [87.63984344 17.1091473   5.12239641]\n",
      "(3, 224) [87.64025312 17.10928529  5.12237902]\n",
      "(3, 224) [87.64074209 17.10944171  5.12236074]\n",
      "(3, 224) [87.64121777 17.10957989  5.12234714]\n",
      "(3, 224) [87.64187323 17.10971978  5.12234354]\n",
      "(3, 224) [87.64231719 17.10985051  5.12233032]\n",
      "(3, 224) [87.64276865 17.10999462  5.12231354]\n",
      "(3, 224) [87.64308625 17.11014093  5.12228827]\n",
      "(3, 224) [87.64372413 17.11029562  5.12227922]\n",
      "(3, 224) [87.64412545 17.11043181  5.12226187]\n",
      "(3, 224) [87.64473619 17.11057493  5.12225469]\n",
      "(3, 224) [87.64531201 17.11070828  5.12224841]\n",
      "(3, 224) [87.64598922 17.11083077  5.12225131]\n",
      "(3, 224) [87.6464857  17.11093986  5.12224765]\n",
      "(3, 224) [87.64701202 17.11105164  5.12224493]\n",
      "(3, 224) [87.64756009 17.11116077  5.12224428]\n",
      "(3, 224) [87.64829732 17.11126583  5.1222559 ]\n",
      "(3, 224) [87.64901827 17.1113821   5.12226321]\n",
      "(3, 224) [87.64971968 17.11150921  5.12226615]\n",
      "(3, 224) [87.65038803 17.11160245  5.1222773 ]\n",
      "(3, 224) [87.65110906 17.11170034  5.12229013]\n",
      "(3, 224) [87.65158662 17.11176787  5.12229783]\n",
      "(3, 224) [87.6521017  17.11184212  5.1223057 ]\n",
      "(3, 224) [87.65269199 17.11194347  5.12230987]\n",
      "(3, 224) [87.6531263  17.11203669  5.12230734]\n",
      "(3, 224) [87.65399449 17.11211198  5.12233554]\n",
      "(3, 224) [87.65455598 17.11219728  5.12234282]\n",
      "(3, 224) [87.65518261 17.11226647  5.12235873]\n",
      "(3, 224) [87.65583495 17.11233766  5.12237554]\n",
      "(3, 224) [87.65657914 17.11242167  5.12239388]\n",
      "(3, 224) [87.65720341 17.11248868  5.1224103 ]\n",
      "(3, 224) [87.65794489 17.11253947  5.12243844]\n",
      "(3, 224) [87.65884394 17.1125878   5.12247652]\n",
      "(3, 224) [87.65982248 17.11258669  5.12253405]\n",
      "(3, 224) [87.6606534  17.11255117  5.12259327]\n",
      "(3, 224) [87.6610728  17.11252201  5.12262652]\n",
      "(3, 224) [87.66176165 17.11249777  5.12267406]\n",
      "(3, 224) [87.66248121 17.11248011  5.12272143]\n",
      "(3, 224) [87.66334871 17.11245364  5.12278008]\n",
      "(3, 224) [87.66422278 17.11243662  5.1228363 ]\n",
      "(3, 224) [87.66455014 17.11243777  5.1228551 ]\n",
      "(3, 224) [87.66519187 17.11244754  5.1228897 ]\n",
      "(3, 224) [87.66595022 17.11244988  5.12293335]\n",
      "(3, 224) [87.6664954  17.11248589  5.12295445]\n",
      "(3, 224) [87.66714722 17.11251126  5.12298497]\n",
      "(3, 224) [87.66770381 17.11250441  5.12301958]\n",
      "(3, 224) [87.66834161 17.11251637  5.12305329]\n",
      "(3, 224) [87.66917482 17.1125087   5.12310431]\n",
      "(3, 224) [87.66969942 17.11251746  5.12313236]\n",
      "(3, 224) [87.67011166 17.11255188  5.12314615]\n",
      "(3, 224) [87.67070055 17.11256869  5.12317555]\n",
      "(3, 224) [87.67141821 17.11261485  5.12320369]\n",
      "(3, 224) [87.67218609 17.11260749  5.12325079]\n",
      "(3, 224) [87.67298494 17.11258733  5.12330352]\n",
      "(3, 224) [87.67391946 17.11259359  5.12335628]\n",
      "(3, 224) [87.67434755 17.11260087  5.12337913]\n",
      "(3, 224) [87.67499149 17.11262512  5.12340952]\n",
      "(3, 224) [87.67553306 17.11265941  5.12343091]\n",
      "(3, 224) [87.67612186 17.11270923  5.12345042]\n",
      "(3, 224) [87.67671154 17.11276185  5.12346914]\n",
      "(3, 224) [87.67716658 17.11280712  5.12348219]\n",
      "(3, 224) [87.67772938 17.11283636  5.12350634]\n",
      "(3, 224) [87.6781741  17.11287337  5.12352126]\n",
      "(3, 224) [87.67874499 17.11290812  5.12354423]\n",
      "(3, 224) [87.67936207 17.11296692  5.12356271]\n",
      "(3, 224) [87.67991788 17.11302516  5.12357776]\n",
      "(3, 224) [87.68037062 17.11307659  5.12358883]\n",
      "(3, 224) [87.68123216 17.11312679  5.12362418]\n",
      "(3, 224) [87.68183046 17.11316895  5.12364654]\n",
      "(3, 224) [87.68245424 17.11322422  5.12366647]\n",
      "(3, 224) [87.68312995 17.11322952  5.1237044 ]\n",
      "(3, 224) [87.68363235 17.11321798  5.12373723]\n",
      "(3, 224) [87.68410776 17.11321865  5.12376483]\n",
      "(3, 224) [87.68439467 17.113219    5.1237815 ]\n",
      "(3, 224) [87.68467766 17.11322986  5.12379479]\n",
      "(3, 224) [87.68536425 17.11323473  5.12383348]\n",
      "(3, 224) [87.68581805 17.11322872  5.12386182]\n",
      "(3, 224) [87.68640016 17.11326136  5.12388608]\n",
      "(3, 224) [87.68699355 17.113278    5.12391578]\n",
      "(3, 224) [87.68743813 17.11327561  5.12394249]\n",
      "(3, 224) [87.687936   17.11328297  5.12396939]\n",
      "(3, 224) [87.68838959 17.11328041  5.12399666]\n",
      "(3, 224) [87.68852867 17.11329803  5.12399952]\n",
      "(3, 224) [87.68874413 17.11330052  5.12401137]\n",
      "(3, 224) [87.6888496  17.11330093  5.12401742]\n",
      "(3, 224) [87.68919965 17.11330011  5.12403812]\n",
      "(3, 224) [87.68955716 17.11328127  5.12406465]\n",
      "(3, 224) [87.68971585 17.11325944  5.12408046]\n",
      "(3, 224) [87.68998005 17.11324054  5.12410155]\n",
      "(3, 224) [87.69044234 17.11335048  5.1240957 ]\n",
      "(3, 224) [87.69110373 17.11344332  5.12410659]\n",
      "(3, 224) [87.69160729 17.11353621  5.12410826]\n",
      "(3, 224) [87.69220748 17.11364225  5.12411163]\n",
      "(3, 224) [87.69282763 17.11378924  5.12410393]\n",
      "(3, 224) [87.69378153 17.11396286  5.12410778]\n",
      "(3, 224) [87.69423302 17.11412399  5.12408602]\n",
      "(3, 224) [87.69507233 17.11431332  5.12407846]\n",
      "(3, 224) [87.69570185 17.11445675  5.12407238]\n",
      "(3, 224) [87.69642645 17.11454956  5.12408695]\n",
      "(3, 224) [87.6968556  17.1146221   5.12409034]\n",
      "(3, 224) [87.69776445 17.11474856  5.12410562]\n",
      "(3, 224) [87.69874106 17.11490192  5.1241168 ]\n",
      "(3, 224) [87.69948155 17.1150093   5.12412795]\n",
      "(3, 224) [87.70016636 17.11514173  5.12412836]\n",
      "(3, 224) [87.7006092  17.11529794  5.12410755]\n",
      "(3, 224) [87.70141524 17.11547258  5.12410242]\n",
      "(3, 224) [87.70198932 17.11563348  5.12408784]\n",
      "(3, 224) [87.70255098 17.11579384  5.12407269]\n",
      "(3, 224) [87.70351896 17.1159322   5.12408786]\n",
      "(3, 224) [87.70422905 17.11609074  5.12408193]\n",
      "(3, 224) [87.70503506 17.11625782  5.12407904]\n",
      "(3, 224) [87.70547117 17.11644395  5.12404884]\n",
      "(3, 224) [87.70600367 17.11664194  5.12402072]\n",
      "(3, 224) [87.70660796 17.11685216  5.12399316]\n",
      "(3, 224) [87.70686556 17.11704013  5.12395202]\n",
      "(3, 224) [87.70734764 17.11722666  5.12392444]\n",
      "(3, 224) [87.70794098 17.11747381  5.12388526]\n",
      "(3, 224) [87.70856673 17.11771599  5.12384947]\n",
      "(3, 224) [87.70923009 17.11795293  5.12381743]\n",
      "(3, 224) [87.70950024 17.11818795  5.12376299]\n",
      "(3, 224) [87.70989158 17.11840061  5.12372228]\n",
      "(3, 224) [87.7106282  17.11861168  5.12370222]\n",
      "(3, 224) [87.71096715 17.11882704  5.12365768]\n",
      "(3, 224) [87.71151969 17.11903055  5.12362914]\n",
      "(3, 224) [87.71192659 17.11924342  5.12358929]\n",
      "(3, 224) [87.71225171 17.11945729  5.12354436]\n",
      "(3, 224) [87.71264602 17.11965707  5.12350771]\n",
      "(3, 224) [87.71297855 17.11984294  5.12347158]\n",
      "(3, 224) [87.71327441 17.12005191  5.12342644]\n",
      "(3, 224) [87.71382685 17.12027567  5.12339185]\n",
      "(3, 224) [87.71442118 17.12050446  5.12335821]\n",
      "(3, 224) [87.71497757 17.12072646  5.12332438]\n",
      "(3, 224) [87.71570421 17.12100292  5.12328421]\n",
      "(3, 224) [87.71610352 17.12123506  5.12323815]\n",
      "(3, 224) [87.71629744 17.12148195  5.1231757 ]\n",
      "(3, 224) [87.71675383 17.12173837  5.12312572]\n",
      "(3, 224) [87.71723538 17.12200656  5.1230737 ]\n",
      "(3, 224) [87.71766729 17.12226807  5.12302076]\n",
      "(3, 224) [87.71790299 17.12254309  5.12295239]\n",
      "(3, 224) [87.71826197 17.12284596  5.12288291]\n",
      "(3, 224) [87.71856556 17.12314414  5.12281156]\n",
      "(3, 224) [87.71897972 17.12344056  5.12274716]\n",
      "(3, 224) [87.71943047 17.12370071  5.12269575]\n",
      "(3, 224) [87.71968491 17.12394335  5.12263812]\n",
      "(3, 224) [87.71986682 17.12419768  5.12257278]\n",
      "(3, 224) [87.71995932 17.12444214  5.12250519]\n",
      "(3, 224) [87.72001156 17.12468268  5.12243642]\n",
      "(3, 224) [87.72021935 17.12492578  5.12237595]\n",
      "(3, 224) [87.72046325 17.12516082  5.12231998]\n",
      "(3, 224) [87.72073649 17.12542487  5.12225708]\n",
      "(3, 224) [87.72117006 17.12569055  5.12220305]\n",
      "(3, 224) [87.72144447 17.12599443  5.12212834]\n",
      "(3, 224) [87.72180464 17.12631132  5.12205479]\n",
      "(3, 224) [87.72210419 17.12660874  5.12198349]\n",
      "(3, 224) [87.72225165 17.12691548  5.12190051]\n",
      "(3, 224) [87.72262644 17.12722608  5.12182964]\n",
      "(3, 224) [87.72279899 17.12753768  5.12174671]\n",
      "(3, 224) [87.72308218 17.12784123  5.12167264]\n",
      "(3, 224) [87.72338533 17.12811005  5.12161006]\n",
      "(3, 224) [87.72351566 17.12838675  5.12153506]\n",
      "(3, 224) [87.72365091 17.12863321  5.1214694 ]\n",
      "(3, 224) [87.72369618 17.12886535  5.12140277]\n",
      "(3, 224) [87.72410456 17.12909708  5.12135744]\n",
      "(3, 224) [87.72450954 17.1293597   5.12130267]\n",
      "(3, 224) [87.72496493 17.12959324  5.12125955]\n",
      "(3, 224) [87.72569151 17.12981787  5.12123487]\n",
      "(3, 224) [87.7262597  17.13003977  5.12120176]\n",
      "(3, 224) [87.72648628 17.13025241  5.12115149]\n",
      "(3, 224) [87.72665165 17.13048183  5.12109262]\n",
      "(3, 224) [87.72694841 17.13070851  5.12104225]\n",
      "(3, 224) [87.72713377 17.13094529  5.12098232]\n",
      "(3, 224) [87.72758278 17.13117457  5.12094003]\n",
      "(3, 224) [87.72815782 17.13140151  5.1209058 ]\n",
      "(3, 224) [87.72857006 17.13161445  5.12086623]\n",
      "(3, 224) [87.72905239 17.1318253   5.12083138]\n",
      "(3, 224) [87.72944593 17.13203029  5.12079311]\n",
      "(3, 224) [87.73000359 17.13223273  5.12076516]\n",
      "(3, 224) [87.73062802 17.13246458  5.12073234]\n",
      "(3, 224) [87.73109032 17.13269809  5.12068954]\n",
      "(3, 224) [87.73135719 17.13284451  5.12066133]\n",
      "(3, 224) [87.7316465  17.13295834  5.12064418]\n",
      "(3, 224) [87.73203852 17.13303529  5.12064405]\n",
      "(3, 224) [87.73246651 17.13308121  5.1206553 ]\n",
      "(3, 224) [87.73276415 17.13310148  5.12066661]\n",
      "(3, 224) [87.73292125 17.13308497  5.12068074]\n",
      "(3, 224) [87.73315493 17.13304194  5.12070728]\n",
      "(3, 224) [87.73357207 17.13298927  5.12074743]\n",
      "(3, 224) [87.73368057 17.13291909  5.12077479]\n",
      "(3, 224) [87.7339069  17.132823    5.12081681]\n",
      "(3, 224) [87.73417574 17.1326017   5.12089895]\n",
      "(3, 224) [87.73437767 17.13233662  5.12099037]\n",
      "(3, 224) [87.7344739  17.13211197  5.12106345]\n",
      "(3, 224) [87.73475672 17.13186501  5.12115415]\n",
      "(3, 224) [87.73502436 17.13159878  5.12124973]\n",
      "(3, 224) [87.73493585 17.13138189  5.12130966]\n",
      "(3, 224) [87.73485133 17.1311948   5.12136087]\n",
      "(3, 224) [87.73503046 17.13100624  5.12142796]\n",
      "(3, 224) [87.73526846 17.13083221  5.1214941 ]\n",
      "(3, 224) [87.73557573 17.13067018  5.12156068]\n",
      "(3, 224) [87.73547929 17.13054333  5.12159309]\n",
      "(3, 224) [87.7355678  17.1303953   5.12164268]\n",
      "(3, 224) [87.73573291 17.13025112  5.12169558]\n",
      "(3, 224) [87.73601511 17.13008956  5.12176055]\n",
      "(3, 224) [87.73588747 17.12992667  5.12180195]\n",
      "(3, 224) [87.73598678 17.1297414   5.12186338]\n",
      "(3, 224) [87.73636674 17.12954007  5.12194605]\n",
      "(3, 224) [87.73639147 17.12932886  5.12201094]\n",
      "(3, 224) [87.73654746 17.12902352  5.12211186]\n",
      "(3, 224) [87.73643908 17.12872237  5.12219604]\n",
      "(3, 224) [87.73656284 17.12837331  5.12230826]\n",
      "(3, 224) [87.73643404 17.12804136  5.12240051]\n",
      "(3, 224) [87.73632422 17.12776137  5.1224782 ]\n",
      "(3, 224) [87.73634232 17.12748737  5.12256158]\n",
      "(3, 224) [87.73626835 17.12723463  5.12263316]\n",
      "(3, 224) [87.73590882 17.12702991  5.12267356]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  3%|██▌                                                                        | 2617/76339 [00:01<00:33, 2209.61it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "(3, 224) [87.73589316 17.12684472  5.12272822]\n",
      "(3, 224) [87.73578981 17.12667892  5.12277192]\n",
      "(3, 224) [87.73546962 17.12650516  5.12280531]\n",
      "(3, 224) [87.73536518 17.12634311  5.12284781]\n",
      "(3, 224) [87.73535976 17.1262051   5.12288887]\n",
      "(3, 224) [87.73508599 17.12606561  5.12291466]\n",
      "(3, 224) [87.7346315  17.12586194  5.12294917]\n",
      "(3, 224) [87.73441541 17.12562489  5.1230077 ]\n",
      "(3, 224) [87.73421432 17.12545478  5.12304694]\n",
      "(3, 224) [87.73392593 17.12530137  5.12307607]\n",
      "(3, 224) [87.73382849 17.12515245  5.12311502]\n",
      "(3, 224) [87.73367361 17.12500546  5.12315002]\n",
      "(3, 224) [87.73361559 17.12489407  5.12318002]\n",
      "(3, 224) [87.7333609  17.12477392  5.12320115]\n",
      "(3, 224) [87.73353469 17.12467917  5.12323972]\n",
      "(3, 224) [87.73357935 17.12459762  5.12326676]\n",
      "(3, 224) [87.73377016 17.12447632  5.12331427]\n",
      "(3, 224) [87.73368083 17.12435958  5.12334403]\n",
      "(3, 224) [87.73344314 17.12425899  5.12336027]\n",
      "(3, 224) [87.73338879 17.12416203  5.12338615]\n",
      "(3, 224) [87.73339908 17.12406124  5.12341695]\n",
      "(3, 224) [87.73343567 17.12395119  5.12345208]\n",
      "(3, 224) [87.73336939 17.12385823  5.12347607]\n",
      "(3, 224) [87.73329078 17.12375429  5.12350263]\n",
      "(3, 224) [87.73331938 17.12365749  5.12353332]\n",
      "(3, 224) [87.73327476 17.12355285  5.1235621 ]\n",
      "(3, 224) [87.7332568  17.12346153  5.12358843]\n",
      "(3, 224) [87.73342107 17.12335361  5.12363038]\n",
      "(3, 224) [87.73352818 17.12319694  5.12368365]\n",
      "(3, 224) [87.73379641 17.12301614  5.12375362]\n",
      "(3, 224) [87.7340215  17.12285187  5.12381608]\n",
      "(3, 224) [87.73421576 17.12265935  5.12388522]\n",
      "(3, 224) [87.73430895 17.12240001  5.1239685 ]\n",
      "(3, 224) [87.73425726 17.12214244  5.12404278]\n",
      "(3, 224) [87.7339332  17.12185935  5.12410886]\n",
      "(3, 224) [87.73390709 17.12158071  5.124191  ]\n",
      "(3, 224) [87.73371537 17.12132923  5.12425527]\n",
      "(3, 224) [87.73348565 17.12110472  5.12430923]\n",
      "(3, 224) [87.73348719 17.12087221  5.12437915]\n",
      "(3, 224) [87.73339875 17.12066712  5.12443558]\n",
      "(3, 224) [87.73328722 17.12046811  5.12448882]\n",
      "(3, 224) [87.73317254 17.12025085  5.12454738]\n",
      "(3, 224) [87.73300779 17.12009619  5.12458418]\n",
      "(3, 224) [87.73284868 17.1199745   5.12461142]\n",
      "(3, 224) [87.7329587  17.11983769  5.12465896]\n",
      "(3, 224) [87.73314556 17.11971252  5.1247075 ]\n",
      "(3, 224) [87.73310632 17.11955069  5.12475385]\n",
      "(3, 224) [87.73294516 17.11940273  5.12478888]\n",
      "(3, 224) [87.73297896 17.11924049  5.12483965]\n",
      "(3, 224) [87.73309112 17.11911432  5.12488411]\n",
      "(3, 224) [87.73310963 17.11899236  5.12492185]\n",
      "(3, 224) [87.73300189 17.11885539  5.1249567 ]\n",
      "(3, 224) [87.73296079 17.11872114  5.12499461]\n",
      "(3, 224) [87.73293023 17.11856908  5.12503853]\n",
      "(3, 224) [87.73267989 17.11843482  5.1250642 ]\n",
      "(3, 224) [87.73271029 17.11829676  5.12510745]\n",
      "(3, 224) [87.73251221 17.1181552   5.12513838]\n",
      "(3, 224) [87.73269556 17.11801076  5.1251925 ]\n",
      "(3, 224) [87.73277646 17.11784779  5.12524617]\n",
      "(3, 224) [87.73293663 17.11767351  5.1253079 ]\n",
      "(3, 224) [87.73302144 17.11747715  5.12537183]\n",
      "(3, 224) [87.73288577 17.11730303  5.12541621]\n",
      "(3, 224) [87.73284676 17.11711906  5.1254692 ]\n",
      "(3, 224) [87.73268743 17.11693904  5.12551396]\n",
      "(3, 224) [87.73268759 17.11676234  5.12556702]\n",
      "(3, 224) [87.73270182 17.11659401  5.1256184 ]\n",
      "(3, 224) [87.73254063 17.11642154  5.12566074]\n",
      "(3, 224) [87.73273669 17.11624458  5.12572532]\n",
      "(3, 224) [87.7326453  17.1160705   5.12577221]\n",
      "(3, 224) [87.73266562 17.1159035   5.12582351]\n",
      "(3, 224) [87.73279012 17.11572486  5.12588445]\n",
      "(3, 224) [87.73266932 17.11558596  5.12591908]\n",
      "(3, 224) [87.73234774 17.11544482  5.12594264]\n",
      "(3, 224) [87.7323711  17.11531122  5.12598412]\n",
      "(3, 224) [87.73211209 17.11516956  5.12601149]\n",
      "(3, 224) [87.73225259 17.11505528  5.12605402]\n",
      "(3, 224) [87.73211059 17.11493044  5.1260832 ]\n",
      "(3, 224) [87.73216918 17.11483951  5.12611392]\n",
      "(3, 224) [87.73231952 17.11474149  5.12615214]\n",
      "(3, 224) [87.73267928 17.11463038  5.12620657]\n",
      "(3, 224) [87.73285607 17.11450593  5.12625429]\n",
      "(3, 224) [87.73307504 17.1143145   5.12632461]\n",
      "(3, 224) [87.73337516 17.11410279  5.12640581]\n",
      "(3, 224) [87.73362486 17.11389185  5.12648382]\n",
      "(3, 224) [87.73377921 17.11368541  5.1265549 ]\n",
      "(3, 224) [87.73378997 17.11350455  5.12660986]\n",
      "(3, 224) [87.73378042 17.11328804  5.12667433]\n",
      "(3, 224) [87.73361961 17.11306632  5.12673149]\n",
      "(3, 224) [87.73398277 17.11286836  5.12681219]\n",
      "(3, 224) [87.73420428 17.11265356  5.12688963]\n",
      "(3, 224) [87.73423165 17.11244537  5.12695373]\n",
      "(3, 224) [87.73469034 17.11224976  5.1270393 ]\n",
      "(3, 224) [87.73506757 17.11206016  5.12711832]\n",
      "(3, 224) [87.73537328 17.11186843  5.12719376]\n",
      "(3, 224) [87.73560112 17.11166545  5.12726805]\n",
      "(3, 224) [87.73591336 17.11145667  5.12734902]\n",
      "(3, 224) [87.73619186 17.11125875  5.12742473]\n",
      "(3, 224) [87.73630483 17.11106859  5.12748842]\n",
      "(3, 224) [87.73642389 17.11075741  5.12758867]\n",
      "(3, 224) [87.73643414 17.11042955  5.12768758]\n",
      "(3, 224) [87.7365044  17.11008392  5.1277953 ]\n",
      "(3, 224) [87.73640268 17.10974547  5.12789078]\n",
      "(3, 224) [87.73615758 17.10939168  5.12798247]\n",
      "(3, 224) [87.7357873  17.10901298  5.12807428]\n",
      "(3, 224) [87.73562226 17.10862472  5.12818096]\n",
      "(3, 224) [87.73493856 17.10822435  5.12826092]\n",
      "(3, 224) [87.73460679 17.10785176  5.12835316]\n",
      "(3, 224) [87.73412723 17.10751901  5.12842489]\n",
      "(3, 224) [87.7336035  17.10717935  5.1284961 ]\n",
      "(3, 224) [87.73299198 17.10679808  5.12857464]\n",
      "(3, 224) [87.73229239 17.10640921  5.12865035]\n",
      "(3, 224) [87.73159591 17.10605971  5.12871442]\n",
      "(3, 224) [87.73085811 17.10567585  5.12878637]\n",
      "(3, 224) [87.73040615 17.10528909  5.12887585]\n",
      "(3, 224) [87.72970594 17.10487647  5.12895862]\n",
      "(3, 224) [87.7290147  17.10448491  5.12903559]\n",
      "(3, 224) [87.72838052 17.1040879   5.12911757]\n",
      "(3, 224) [87.72761714 17.10368233  5.1291946 ]\n",
      "(3, 224) [87.72705787 17.10333659  5.12926556]\n",
      "(3, 224) [87.72638668 17.10295957  5.12933939]\n",
      "(3, 224) [87.72575074 17.1026027   5.12940915]\n",
      "(3, 224) [87.72520146 17.10224936  5.12948295]\n",
      "(3, 224) [87.72464144 17.10187317  5.12956292]\n",
      "(3, 224) [87.72421605 17.10150676  5.1296478 ]\n",
      "(3, 224) [87.72395626 17.10113308  5.12974456]\n",
      "(3, 224) [87.7235411  17.10067716  5.12985685]\n",
      "(3, 224) [87.72314075 17.10020507  5.12997488]\n",
      "(3, 224) [87.72237262 17.09973392  5.13007109]\n",
      "(3, 224) [87.72192427 17.09927883  5.1301812 ]\n",
      "(3, 224) [87.72114802 17.09882137  5.13027289]\n",
      "(3, 224) [87.72052532 17.09836627  5.1303729 ]\n",
      "(3, 224) [87.72010313 17.09789676  5.13048889]\n",
      "(3, 224) [87.71925389 17.09743069  5.13057889]\n",
      "(3, 224) [87.71867255 17.0969553   5.13068737]\n",
      "(3, 224) [87.71788425 17.0964855   5.13078206]\n",
      "(3, 224) [87.71707217 17.09601138  5.13087661]\n",
      "(3, 224) [87.71618712 17.09555639  5.1309612 ]\n",
      "(3, 224) [87.7154495  17.09508731  5.13105857]\n",
      "(3, 224) [87.71470934 17.09461325  5.1311573 ]\n",
      "(3, 224) [87.71397837 17.09414351  5.13125529]\n",
      "(3, 224) [87.71325004 17.09368986  5.13134858]\n",
      "(3, 224) [87.71248775 17.09315716  5.13146365]\n",
      "(3, 224) [87.7117402  17.09264497  5.13157348]\n",
      "(3, 224) [87.71079397 17.092147    5.13166732]\n",
      "(3, 224) [87.7098285  17.09162593  5.131767  ]\n",
      "(3, 224) [87.70891074 17.09109236  5.13187322]\n",
      "(3, 224) [87.70791177 17.09059004  5.13196529]\n",
      "(3, 224) [87.7073381  17.09005256  5.13209274]\n",
      "(3, 224) [87.70650063 17.08951593  5.13220442]\n",
      "(3, 224) [87.70566061 17.08900089  5.13230952]\n",
      "(3, 224) [87.70474153 17.0884894   5.13240897]\n",
      "(3, 224) [87.70375188 17.08800221  5.132497  ]\n",
      "(3, 224) [87.70288229 17.08752706  5.13258843]\n",
      "(3, 224) [87.70205671 17.08703465  5.13268758]\n",
      "(3, 224) [87.70148818 17.08653216  5.1328048 ]\n",
      "(3, 224) [87.70075227 17.08602908  5.13291239]\n",
      "(3, 224) [87.69991201 17.08553592  5.13301093]\n",
      "(3, 224) [87.69900441 17.08504161  5.1331059 ]\n",
      "(3, 224) [87.69833644 17.08452599  5.13322124]\n",
      "(3, 224) [87.69749011 17.08400897  5.1333266 ]\n",
      "(3, 224) [87.69658785 17.08346704  5.13343605]\n",
      "(3, 224) [87.69580148 17.08290808  5.13355733]\n",
      "(3, 224) [87.69491434 17.08235029  5.13367245]\n",
      "(3, 224) [87.69400154 17.08180874  5.13378115]\n",
      "(3, 224) [87.69308602 17.08126175  5.13389138]\n",
      "(3, 224) [87.69220193 17.08071185  5.13400421]\n",
      "(3, 224) [87.69136008 17.08017709  5.134115  ]\n",
      "(3, 224) [87.69054556 17.07966238  5.13422149]\n",
      "(3, 224) [87.68985396 17.07912577  5.13434171]\n",
      "(3, 224) [87.68903016 17.07859173  5.13445342]\n",
      "(3, 224) [87.68811544 17.07806315  5.13455815]\n",
      "(3, 224) [87.68734682 17.07754138  5.13466947]\n",
      "(3, 224) [87.68649683 17.07699123  5.13478454]\n",
      "(3, 224) [87.68560615 17.07644378  5.13489638]\n",
      "(3, 224) [87.68447726 17.07588926  5.13499654]\n",
      "(3, 224) [87.68332457 17.07531967  5.13509988]\n",
      "(3, 224) [87.6824356  17.07473558  5.13522298]\n",
      "(3, 224) [87.68146578 17.07418938  5.13532993]\n",
      "(3, 224) [87.68043466 17.07366776  5.13542588]\n",
      "(3, 224) [87.67940341 17.0731966   5.1355067 ]\n",
      "(3, 224) [87.67824956 17.07270785  5.13558564]\n",
      "(3, 224) [87.67709797 17.07221826  5.13566495]\n",
      "(3, 224) [87.67600942 17.07174782  5.13574223]\n",
      "(3, 224) [87.67502555 17.07129526  5.1358203 ]\n",
      "(3, 224) [87.67410533 17.07083487  5.13590439]\n",
      "(3, 224) [87.67322016 17.07039441  5.13598462]\n",
      "(3, 224) [87.6722012  17.06993206  5.13606354]\n",
      "(3, 224) [87.67128341 17.06947003  5.1361483 ]\n",
      "(3, 224) [87.67046706 17.06908488  5.13621603]\n",
      "(3, 224) [87.66993952 17.06874271  5.13628778]\n",
      "(3, 224) [87.66947565 17.0684427   5.13635066]\n",
      "(3, 224) [87.66884451 17.06813774  5.13640527]\n",
      "(3, 224) [87.66820692 17.06789011  5.13644232]\n",
      "(3, 224) [87.66768863 17.06767387  5.13647694]\n",
      "(3, 224) [87.66722327 17.06748669  5.13650593]\n",
      "(3, 224) [87.66638021 17.06729769  5.13651337]\n",
      "(3, 224) [87.66596707 17.06712172  5.13654204]\n",
      "(3, 224) [87.66548735 17.0669677   5.13656025]\n",
      "(3, 224) [87.6649484  17.06696162  5.13653051]\n",
      "(3, 224) [87.66445052 17.06701553  5.13648512]\n",
      "(3, 224) [87.6638184  17.06702895  5.13644407]\n",
      "(3, 224) [87.66310916 17.06705949  5.13639334]\n",
      "(3, 224) [87.6626446  17.06710038  5.13635381]\n",
      "(3, 224) [87.6621177  17.06710219  5.13632241]\n",
      "(3, 224) [87.66177446 17.06709366  5.13630487]\n",
      "(3, 224) [87.66105204 17.06706495  5.1362712 ]\n",
      "(3, 224) [87.66049817 17.06700893  5.13625562]\n",
      "(3, 224) [87.65962637 17.06694517  5.13622374]\n",
      "(3, 224) [87.65894276 17.06686866  5.1362067 ]\n",
      "(3, 224) [87.65839238 17.06682199  5.13618851]\n",
      "(3, 224) [87.65789211 17.06675215  5.13618022]\n",
      "(3, 224) [87.65720854 17.06668949  5.13615904]\n",
      "(3, 224) [87.656836   17.06662953  5.13615525]\n",
      "(3, 224) [87.65604237 17.06659249  5.13611992]\n",
      "(3, 224) [87.65502076 17.06658576  5.13606211]\n",
      "(3, 224) [87.65408928 17.06657651  5.13601033]\n",
      "(3, 224) [87.65319626 17.06668429  5.13592553]\n",
      "(3, 224) [87.65255774 17.06678158  5.13585881]\n",
      "(3, 224) [87.65198289 17.0669244   5.13578207]\n",
      "(3, 224) [87.65139088 17.06701953  5.13571871]\n",
      "(3, 224) [87.65097438 17.06705727  5.13568293]\n",
      "(3, 224) [87.65045932 17.06711163  5.13563637]\n",
      "(3, 224) [87.64967223 17.06714531  5.13558013]\n",
      "(3, 224) [87.64914712 17.06712466  5.13555558]\n",
      "(3, 224) [87.64841327 17.06710064  5.13551983]\n",
      "(3, 224) [87.64803597 17.06708066  5.13550374]\n",
      "(3, 224) [87.64766187 17.06705285  5.1354902 ]\n",
      "(3, 224) [87.64736593 17.06702896  5.13548005]\n",
      "(3, 224) [87.64708039 17.06697482  5.1354796 ]\n",
      "(3, 224) [87.6467927  17.06694727  5.13547103]\n",
      "(3, 224) [87.64681383 17.06700364  5.13545533]\n",
      "(3, 224) [87.64649822 17.06708442  5.13541256]\n",
      "(3, 224) [87.64663506 17.06711389  5.13541172]\n",
      "(3, 224) [87.64637964 17.06712327  5.13539396]\n",
      "(3, 224) [87.64615346 17.0671534   5.13537168]\n",
      "(3, 224) [87.64607319 17.06718882  5.13535635]\n",
      "(3, 224) [87.64587332 17.06718859  5.13534473]\n",
      "(3, 224) [87.64559705 17.06719164  5.13532765]\n",
      "(3, 224) [87.64484698 17.06719186  5.13528371]\n",
      "(3, 224) [87.6442866  17.06717124  5.13525711]\n",
      "(3, 224) [87.64370508 17.06718391  5.13521929]\n",
      "(3, 224) [87.64329194 17.06718914  5.13519356]\n",
      "(3, 224) [87.64292224 17.06717922  5.13517491]\n",
      "(3, 224) [87.64233309 17.06715848  5.13514667]\n",
      "(3, 224) [87.64169978 17.06715233  5.13511147]\n",
      "(3, 224) [87.64095043 17.06716303  5.13506443]\n",
      "(3, 224) [87.64033986 17.06716551  5.13502797]\n",
      "(3, 224) [87.63974365 17.06717247  5.134991  ]\n",
      "(3, 224) [87.63922389 17.06717783  5.13495899]\n",
      "(3, 224) [87.63874025 17.06722347  5.13491701]\n",
      "(3, 224) [87.6381626  17.06725084  5.13487502]\n",
      "(3, 224) [87.63745521 17.06726353  5.13482984]\n",
      "(3, 224) [87.63709256 17.06738452  5.13477232]\n",
      "(3, 224) [87.63652076 17.06746451  5.13471481]\n",
      "(3, 224) [87.63589473 17.06752781  5.13465916]\n",
      "(3, 224) [87.63536936 17.06762251  5.13459997]\n",
      "(3, 224) [87.6350629  17.06772918  5.13454995]\n",
      "(3, 224) [87.63473445 17.06784858  5.13449484]\n",
      "(3, 224) [87.63442623 17.06801472  5.13442685]\n",
      "(3, 224) [87.6339253  17.06817738  5.13434863]\n",
      "(3, 224) [87.63369752 17.06830859  5.13429586]\n",
      "(3, 224) [87.63349224 17.06842356  5.1342493 ]\n",
      "(3, 224) [87.63286415 17.06854495  5.13417604]\n",
      "(3, 224) [87.63224843 17.06866455  5.13410407]\n",
      "(3, 224) [87.63183803 17.06879354  5.13404129]\n",
      "(3, 224) [87.63123235 17.06894788  5.13395947]\n",
      "(3, 224) [87.63075211 17.06908314  5.13389077]\n",
      "(3, 224) [87.63047523 17.06924374  5.13382638]\n",
      "(3, 224) [87.63010488 17.06941163  5.13375431]\n",
      "(3, 224) [87.62965756 17.06958285  5.13367675]\n",
      "(3, 224) [87.62923309 17.06978694  5.13359063]\n",
      "(3, 224) [87.62915031 17.06999237  5.13352411]\n",
      "(3, 224) [87.62903397 17.07020712  5.13345277]\n",
      "(3, 224) [87.62893715 17.07036805  5.13339879]\n",
      "(3, 224) [87.62861544 17.07048663  5.13334433]\n",
      "(3, 224) [87.62837871 17.07065345  5.13328039]\n",
      "(3, 224) [87.62833748 17.07081327  5.13323   ]\n",
      "(3, 224) [87.62817302 17.07100366  5.1331632 ]\n",
      "(3, 224) [87.62818609 17.07117489  5.13311256]\n",
      "(3, 224) [87.62808548 17.07133857  5.13305754]\n",
      "(3, 224) [87.62813691 17.07151788  5.13300672]\n",
      "(3, 224) [87.62790214 17.07169682  5.13293926]\n",
      "(3, 224) [87.62787739 17.0719083   5.13287434]\n",
      "(3, 224) [87.62783006 17.07214155  5.13280155]\n",
      "(3, 224) [87.62744618 17.07235398  5.13271533]\n",
      "(3, 224) [87.62736657 17.07257371  5.1326447 ]\n",
      "(3, 224) [87.62726668 17.07278181  5.13257636]\n",
      "(3, 224) [87.6271276  17.07297946  5.13250888]\n",
      "(3, 224) [87.62707962 17.07315672  5.13245285]\n",
      "(3, 224) [87.62704103 17.0733214   5.13240114]\n",
      "(3, 224) [87.62709497 17.0734767   5.13235768]\n",
      "(3, 224) [87.62680627 17.07366818  5.13228335]\n",
      "(3, 224) [87.62694385 17.07387175  5.13223032]\n",
      "(3, 224) [87.62681985 17.074066    5.13216481]\n",
      "(3, 224) [87.62654133 17.07427642  5.13208535]\n",
      "(3, 224) [87.62647441 17.07445607  5.13202755]\n",
      "(3, 224) [87.62631974 17.07465131  5.13195994]\n",
      "(3, 224) [87.62618052 17.07481122  5.1319038 ]\n",
      "(3, 224) [87.62628451 17.07496902  5.13186254]\n",
      "(3, 224) [87.62599621 17.07511657  5.1318014 ]\n",
      "(3, 224) [87.62570717 17.075269    5.13173875]\n",
      "(3, 224) [87.62532337 17.07540449  5.13167568]\n",
      "(3, 224) [87.62489448 17.0755292   5.13161318]\n",
      "(3, 224) [87.62419794 17.07570571  5.13151948]\n",
      "(3, 224) [87.62386861 17.07587629  5.13144903]\n",
      "(3, 224) [87.62351845 17.07609678  5.13136233]\n",
      "(3, 224) [87.62316885 17.07634158  5.13126834]\n",
      "(3, 224) [87.62282057 17.07658231  5.13117564]\n",
      "(3, 224) [87.62265644 17.07681555  5.13109597]\n",
      "(3, 224) [87.622681   17.07706155  5.13102356]\n",
      "(3, 224) [87.62247731 17.07730382  5.13093892]\n",
      "(3, 224) [87.62238368 17.07757659  5.13085162]\n",
      "(3, 224) [87.62215356 17.07783583  5.13076036]\n",
      "(3, 224) [87.62213689 17.07809455  5.13068175]\n",
      "(3, 224) [87.6222241  17.07834035  5.13061309]\n",
      "(3, 224) [87.62209401 17.07858085  5.1305333 ]\n",
      "(3, 224) [87.62208993 17.07883318  5.13045731]\n",
      "(3, 224) [87.62205777 17.07908162  5.13038088]\n",
      "(3, 224) [87.62188044 17.07932981  5.13029602]\n",
      "(3, 224) [87.62187758 17.07959346  5.13021671]\n",
      "(3, 224) [87.62178795 17.07985617  5.13013265]\n",
      "(3, 224) [87.62173338 17.08010205  5.13005571]\n",
      "(3, 224) [87.62158191 17.08036109  5.12996914]\n",
      "(3, 224) [87.6215942  17.08062988  5.1298892 ]\n",
      "(3, 224) [87.6213453  17.08090685  5.12979155]\n",
      "(3, 224) [87.62124764 17.08118579  5.12970221]\n",
      "(3, 224) [87.62119785 17.08147345  5.12961305]\n",
      "(3, 224) [87.62111583 17.08173205  5.1295307 ]\n",
      "(3, 224) [87.62102693 17.08201296  5.12944124]\n",
      "(3, 224) [87.62102979 17.08226764  5.12936505]\n",
      "(3, 224) [87.62085871 17.08253616  5.12927453]\n",
      "(3, 224) [87.62087335 17.08282192  5.1291897 ]\n",
      "(3, 224) [87.62100535 17.08314578  5.12910034]\n",
      "(3, 224) [87.62100986 17.08347615  5.12900158]\n",
      "(3, 224) [87.6211552  17.08382757  5.12890471]\n",
      "(3, 224) [87.62140106 17.08415972  5.12881952]\n",
      "(3, 224) [87.62150202 17.08451895  5.12871777]\n",
      "(3, 224) [87.62149677 17.08486519  5.12861369]\n",
      "(3, 224) [87.62164134 17.08521816  5.12851632]\n",
      "(3, 224) [87.62175873 17.08556971  5.12841779]\n",
      "(3, 224) [87.6216279  17.08593542  5.12830052]\n",
      "(3, 224) [87.62173502 17.08633035  5.12818837]\n",
      "(3, 224) [87.62165895 17.08665934  5.12808534]\n",
      "(3, 224) [87.62152062 17.08699381  5.12797696]\n",
      "(3, 224) [87.62174607 17.08733745  5.12788721]\n",
      "(3, 224) [87.62172157 17.08766759  5.12778685]\n",
      "(3, 224) [87.62166252 17.08799664  5.12768483]\n",
      "(3, 224) [87.62187979 17.08832677  5.12759863]\n",
      "(3, 224) [87.62169351 17.088648    5.12749149]\n",
      "(3, 224) [87.62160958 17.08898383  5.12738591]\n",
      "(3, 224) [87.62151525 17.08934551  5.12727195]\n",
      "(3, 224) [87.62170473 17.08969615  5.12717793]\n",
      "(3, 224) [87.62158648 17.09004822  5.12706548]\n",
      "(3, 224) [87.62159448 17.09041687  5.12695547]\n",
      "(3, 224) [87.62142272 17.09077228  5.12683887]\n",
      "(3, 224) [87.62121531 17.09113591  5.12671772]\n",
      "(3, 224) [87.62109726 17.09148432  5.1266064 ]\n",
      "(3, 224) [87.62084417 17.09184338  5.12648394]\n",
      "(3, 224) [87.62075345 17.09220522  5.12637017]\n",
      "(3, 224) [87.62074047 17.092568    5.1262607 ]\n",
      "(3, 224) [87.62088315 17.09292644  5.12616161]\n",
      "(3, 224) [87.62119864 17.09326267  5.12607925]\n",
      "(3, 224) [87.62119751 17.09359197  5.12598045]\n",
      "(3, 224) [87.62136295 17.09390396  5.12589655]\n",
      "(3, 224) [87.62131591 17.0941961   5.1258062 ]\n",
      "(3, 224) [87.62109526 17.0945062   5.12570021]\n",
      "(3, 224) [87.62069856 17.09482658  5.12558085]\n",
      "(3, 224) [87.62053056 17.09511088  5.12548575]\n",
      "(3, 224) [87.62045162 17.09540868  5.12539176]\n",
      "(3, 224) [87.62021606 17.09575002  5.1252756 ]\n",
      "(3, 224) [87.62017108 17.09610736  5.12516588]\n",
      "(3, 224) [87.61974898 17.09649212  5.12502586]\n",
      "(3, 224) [87.6198038  17.09687162  5.12491537]\n",
      "(3, 224) [87.61978177 17.09724811  5.1248013 ]\n",
      "(3, 224) [87.6197032  17.09762042  5.12468517]\n",
      "(3, 224) [87.61970059 17.0979877   5.12457503]\n",
      "(3, 224) [87.61973581 17.09835291  5.12446771]\n",
      "(3, 224) [87.61982028 17.09871259  5.12436491]\n",
      "(3, 224) [87.61964973 17.09908086  5.12424458]\n",
      "(3, 224) [87.61951806 17.09948022  5.12411732]\n",
      "(3, 224) [87.61930168 17.0998403   5.12399683]\n",
      "(3, 224) [87.61907087 17.10020447  5.12387427]\n",
      "(3, 224) [87.61885038 17.10057244  5.12375112]\n",
      "(3, 224) [87.61871085 17.10094176  5.12363231]\n",
      "(3, 224) [87.61867904 17.10129686  5.12352407]\n",
      "(3, 224) [87.61846312 17.10167525  5.12339813]\n",
      "(3, 224) [87.61833105 17.10205553  5.12327649]\n",
      "(3, 224) [87.61816546 17.10242626  5.1231558 ]\n",
      "(3, 224) [87.61796934 17.10279029  5.12303528]\n",
      "(3, 224) [87.61795779 17.10316086  5.12292364]\n",
      "(3, 224) [87.61771446 17.10351774  5.12280258]\n",
      "(3, 224) [87.61720138 17.10388489  5.12266266]\n",
      "(3, 224) [87.61698544 17.1042511   5.1225403 ]\n",
      "(3, 224) [87.61674637 17.10462041  5.12241571]\n",
      "(3, 224) [87.61681835 17.10500068  5.12230604]\n",
      "(3, 224) [87.61689045 17.10539387  5.12219245]\n",
      "(3, 224) [87.61682371 17.10578184  5.12207228]\n",
      "(3, 224) [87.6169896  17.10619321  5.12195873]\n",
      "(3, 224) [87.61711874 17.10661288  5.12184051]\n",
      "(3, 224) [87.61720467 17.10706743  5.1217093 ]\n",
      "(3, 224) [87.61726621 17.10752817  5.12157473]\n",
      "(3, 224) [87.61739203 17.10794027  5.12145856]\n",
      "(3, 224) [87.61751164 17.10831396  5.12135358]\n",
      "(3, 224) [87.61759343 17.10864056  5.12126052]\n",
      "(3, 224) [87.61772131 17.1090019   5.12115977]\n",
      "(3, 224) [87.61796163 17.10935179  5.121069  ]\n",
      "(3, 224) [87.61779557 17.1096873   5.12095882]\n",
      "(3, 224) [87.61780609 17.11004396  5.1208526 ]\n",
      "(3, 224) [87.61784209 17.11037279  5.12075618]\n",
      "(3, 224) [87.61783188 17.11070529  5.12065595]\n",
      "(3, 224) [87.61783319 17.11104468  5.12055437]\n",
      "(3, 224) [87.61772803 17.11142242  5.12043511]\n",
      "(3, 224) [87.61783766 17.1118219   5.12032189]\n",
      "(3, 224) [87.61760361 17.11220055  5.12019485]\n",
      "(3, 224) [87.61738235 17.11256534  5.12007267]\n",
      "(3, 224) [87.6174159  17.11298277  5.11994964]\n",
      "(3, 224) [87.61743621 17.11336686  5.1198358 ]\n",
      "(3, 224) [87.61764372 17.11375141  5.11973274]\n",
      "(3, 224) [87.61769287 17.1141431   5.11961833]\n",
      "(3, 224) [87.61815055 17.11453383  5.11952809]\n",
      "(3, 224) [87.61851509 17.11493516  5.11942922]\n",
      "(3, 224) [87.61885621 17.11534334  5.1193269 ]\n",
      "(3, 224) [87.61921403 17.11571487  5.11923656]\n",
      "(3, 224) [87.61943481 17.11606685  5.11914411]\n",
      "(3, 224) [87.61960403 17.11642187  5.11904775]\n",
      "(3, 224) [87.61980922 17.11675129  5.11896112]\n",
      "(3, 224) [87.61984816 17.11706611  5.11886911]\n",
      "(3, 224) [87.62036814 17.11736939  5.11880865]\n",
      "(3, 224) [87.62073701 17.11768493  5.11873569]\n",
      "(3, 224) [87.62118911 17.11801657  5.11866276]\n",
      "(3, 224) [87.62172641 17.1183582   5.11859177]\n",
      "(3, 224) [87.62227785 17.11866818  5.11853113]\n",
      "(3, 224) [87.62291913 17.11895877  5.11848158]\n",
      "(3, 224) [87.6232362  17.11922564  5.11842014]\n",
      "(3, 224) [87.62341842 17.11950543  5.11834694]\n",
      "(3, 224) [87.62363612 17.11980393  5.11827022]\n",
      "(3, 224) [87.62390767 17.12008409  5.11820211]\n",
      "(3, 224) [87.62435109 17.12035874  5.11814572]\n",
      "(3, 224) [87.6249604  17.12060127  5.11810865]\n",
      "(3, 224) [87.6255577  17.12088132  5.11805965]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  4%|███                                                                        | 3075/76339 [00:01<00:33, 2195.02it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "(3, 224) [87.62614899 17.12113829  5.11801724]\n",
      "(3, 224) [87.62681246 17.1214206   5.11797145]\n",
      "(3, 224) [87.62738548 17.1217139   5.11791706]\n",
      "(3, 224) [87.62797109 17.12201784  5.11786021]\n",
      "(3, 224) [87.6284119  17.12232483  5.11779395]\n",
      "(3, 224) [87.62886313 17.12262702  5.11772975]\n",
      "(3, 224) [87.62952192 17.12291513  5.11768197]\n",
      "(3, 224) [87.63003712 17.12318846  5.1176302 ]\n",
      "(3, 224) [87.63059197 17.12346377  5.11758017]\n",
      "(3, 224) [87.63105834 17.12372108  5.11753032]\n",
      "(3, 224) [87.63171181 17.12395639  5.117498  ]\n",
      "(3, 224) [87.63226684 17.1241782   5.11746394]\n",
      "(3, 224) [87.63259803 17.12439803  5.11741741]\n",
      "(3, 224) [87.63344451 17.12459378  5.11740824]\n",
      "(3, 224) [87.63394603 17.12476022  5.11738767]\n",
      "(3, 224) [87.63443044 17.12494849  5.11735958]\n",
      "(3, 224) [87.63464963 17.12510584  5.11732523]\n",
      "(3, 224) [87.63526444 17.12528613  5.11730716]\n",
      "(3, 224) [87.63576638 17.12542381  5.11729525]\n",
      "(3, 224) [87.63612851 17.12554929  5.11727883]\n",
      "(3, 224) [87.63650681 17.12568418  5.11726052]\n",
      "(3, 224) [87.63711814 17.12581598  5.11725677]\n",
      "(3, 224) [87.63775434 17.12595158  5.11725336]\n",
      "(3, 224) [87.63838297 17.12607609  5.11725282]\n",
      "(3, 224) [87.63873786 17.12619777  5.11723713]\n",
      "(3, 224) [87.63927911 17.12632105  5.11723185]\n",
      "(3, 224) [87.63968229 17.12643756  5.11722053]\n",
      "(3, 224) [87.64007209 17.12655411  5.11720842]\n",
      "(3, 224) [87.64065764 17.12666407  5.11720972]\n",
      "(3, 224) [87.6411415  17.12676697  5.11720721]\n",
      "(3, 224) [87.64195409 17.12689233  5.11721717]\n",
      "(3, 224) [87.64274058 17.12698739  5.11723467]\n",
      "(3, 224) [87.64319231 17.12710781  5.11722501]\n",
      "(3, 224) [87.64365408 17.12720822  5.11722194]\n",
      "(3, 224) [87.64426635 17.12730528  5.11722866]\n",
      "(3, 224) [87.64482215 17.12742925  5.11722403]\n",
      "(3, 224) [87.64532105 17.12750884  5.11722935]\n",
      "(3, 224) [87.64569259 17.12762643  5.11721584]\n",
      "(3, 224) [87.64615261 17.127733    5.11721081]\n",
      "(3, 224) [87.64670291 17.12784948  5.11720808]\n",
      "(3, 224) [87.64704917 17.12797796  5.11718981]\n",
      "(3, 224) [87.6474056  17.12809213  5.11717644]\n",
      "(3, 224) [87.64788196 17.12818507  5.11717644]\n",
      "(3, 224) [87.64853709 17.12828823  5.11718383]\n",
      "(3, 224) [87.64905189 17.12841572  5.11717573]\n",
      "(3, 224) [87.64934424 17.12853453  5.11715723]\n",
      "(3, 224) [87.64982061 17.12865706  5.11714838]\n",
      "(3, 224) [87.65067311 17.12877547  5.11716274]\n",
      "(3, 224) [87.65124532 17.12887896  5.11716519]\n",
      "(3, 224) [87.6520498  17.12897166  5.11718445]\n",
      "(3, 224) [87.6525621  17.12903333  5.11719593]\n",
      "(3, 224) [87.65287246 17.12906877  5.11720345]\n",
      "(3, 224) [87.65322928 17.12914335  5.11720199]\n",
      "(3, 224) [87.65356899 17.12920955  5.11720203]\n",
      "(3, 224) [87.65373574 17.12925848  5.11719713]\n",
      "(3, 224) [87.65368173 17.12930958  5.11717869]\n",
      "(3, 224) [87.65344082 17.12936128  5.11714914]\n",
      "(3, 224) [87.65344799 17.12942968  5.11712909]\n",
      "(3, 224) [87.65341641 17.12952175  5.11709967]\n",
      "(3, 224) [87.65359574 17.12957331  5.11709472]\n",
      "(3, 224) [87.65366132 17.12960971  5.11708765]\n",
      "(3, 224) [87.65371102 17.12963657  5.11708251]\n",
      "(3, 224) [87.65373264 17.12967006  5.11707375]\n",
      "(3, 224) [87.65364464 17.12969109  5.11706231]\n",
      "(3, 224) [87.65351318 17.12971999  5.11704598]\n",
      "(3, 224) [87.65358584 17.12973311  5.1170463 ]\n",
      "(3, 224) [87.65338639 17.12973492  5.1170341 ]\n",
      "(3, 224) [87.65324522 17.12971904  5.1170306 ]\n",
      "(3, 224) [87.65340069 17.12973821  5.11703395]\n",
      "(3, 224) [87.65351108 17.12973703  5.11704076]\n",
      "(3, 224) [87.65340033 17.12975444  5.11702907]\n",
      "(3, 224) [87.65357515 17.12977134  5.11703423]\n",
      "(3, 224) [87.65359814 17.12979395  5.1170288 ]\n",
      "(3, 224) [87.65347435 17.12981883  5.11701412]\n",
      "(3, 224) [87.65330159 17.12985302  5.11699378]\n",
      "(3, 224) [87.6533445  17.12985272  5.11699638]\n",
      "(3, 224) [87.65325885 17.12981735  5.11700196]\n",
      "(3, 224) [87.65353871 17.12981486  5.11701906]\n",
      "(3, 224) [87.65388705 17.12980938  5.11704106]\n",
      "(3, 224) [87.65418521 17.1297831   5.11706635]\n",
      "(3, 224) [87.65448089 17.12973818  5.11709708]\n",
      "(3, 224) [87.65444177 17.12971673  5.11710122]\n",
      "(3, 224) [87.65451822 17.12971015  5.11710766]\n",
      "(3, 224) [87.654807   17.12970972  5.11712467]\n",
      "(3, 224) [87.65492792 17.12971185  5.1171311 ]\n",
      "(3, 224) [87.65545676 17.12972661  5.11715759]\n",
      "(3, 224) [87.65582335 17.12971676  5.11718197]\n",
      "(3, 224) [87.65605348 17.1296799   5.11720645]\n",
      "(3, 224) [87.65600705 17.1296883   5.11720122]\n",
      "(3, 224) [87.65607275 17.12970088  5.1172013 ]\n",
      "(3, 224) [87.65612701 17.12972127  5.11719837]\n",
      "(3, 224) [87.65620631 17.12977476  5.117187  ]\n",
      "(3, 224) [87.6562274  17.12982827  5.11717222]\n",
      "(3, 224) [87.6562705  17.12985404  5.11716703]\n",
      "(3, 224) [87.6563127  17.12983626  5.11717482]\n",
      "(3, 224) [87.65647677 17.12981085  5.117192  ]\n",
      "(3, 224) [87.65667844 17.12977955  5.11721315]\n",
      "(3, 224) [87.65680731 17.12974534  5.11723091]\n",
      "(3, 224) [87.65686216 17.12971821  5.11724224]\n",
      "(3, 224) [87.65688313 17.12968257  5.11725413]\n",
      "(3, 224) [87.65688403 17.12963169  5.11726942]\n",
      "(3, 224) [87.65690008 17.12958881  5.11728319]\n",
      "(3, 224) [87.6569816  17.129565    5.11729508]\n",
      "(3, 224) [87.65703837 17.12955267  5.11730208]\n",
      "(3, 224) [87.65705198 17.12951433  5.11731434]\n",
      "(3, 224) [87.65709833 17.12946667  5.11733131]\n",
      "(3, 224) [87.65711516 17.12940256  5.11735147]\n",
      "(3, 224) [87.65690627 17.12932859  5.1173614 ]\n",
      "(3, 224) [87.65692451 17.12926362  5.1173819 ]\n",
      "(3, 224) [87.65708153 17.12919744  5.11741086]\n",
      "(3, 224) [87.65715995 17.12910021  5.11744452]\n",
      "(3, 224) [87.6571847  17.12905045  5.11746085]\n",
      "(3, 224) [87.6571729  17.12898359  5.11748015]\n",
      "(3, 224) [87.65754427 17.12893726  5.11751571]\n",
      "(3, 224) [87.65796662 17.12888452  5.11755615]\n",
      "(3, 224) [87.65801669 17.12882156  5.1175779 ]\n",
      "(3, 224) [87.65839163 17.12874504  5.11762268]\n",
      "(3, 224) [87.65851378 17.12864577  5.11765948]\n",
      "(3, 224) [87.65850439 17.12854724  5.11768839]\n",
      "(3, 224) [87.65858763 17.12846932  5.11771654]\n",
      "(3, 224) [87.65878285 17.12836407  5.11775939]\n",
      "(3, 224) [87.65909364 17.12825108  5.11781132]\n",
      "(3, 224) [87.65909471 17.12816337  5.11783759]\n",
      "(3, 224) [87.65916484 17.12807341  5.11786857]\n",
      "(3, 224) [87.65955569 17.12796046  5.11792515]\n",
      "(3, 224) [87.65965866 17.12784746  5.11796493]\n",
      "(3, 224) [87.65988647 17.12774     5.11801035]\n",
      "(3, 224) [87.66046648 17.12766784  5.1180658 ]\n",
      "(3, 224) [87.66073067 17.12757666  5.11810847]\n",
      "(3, 224) [87.6609918  17.12746236  5.11815788]\n",
      "(3, 224) [87.66141287 17.1273798   5.11820712]\n",
      "(3, 224) [87.66163386 17.1272621   5.11825521]\n",
      "(3, 224) [87.66195969 17.12715139  5.11830732]\n",
      "(3, 224) [87.66236204 17.12706078  5.11835791]\n",
      "(3, 224) [87.66261165 17.12695856  5.11840303]\n",
      "(3, 224) [87.6628082  17.12687744  5.11843875]\n",
      "(3, 224) [87.66317645 17.12676764  5.11849307]\n",
      "(3, 224) [87.66363153 17.12665765  5.11855252]\n",
      "(3, 224) [87.66395116 17.1265628   5.11859953]\n",
      "(3, 224) [87.66425649 17.12648015  5.11864205]\n",
      "(3, 224) [87.66473998 17.12642728  5.11868607]\n",
      "(3, 224) [87.66545642 17.12637824  5.11874255]\n",
      "(3, 224) [87.66622481 17.12633681  5.11879979]\n",
      "(3, 224) [87.6670058  17.12628272  5.11886154]\n",
      "(3, 224) [87.66749156 17.12625807  5.11889726]\n",
      "(3, 224) [87.66786252 17.12625308  5.11892041]\n",
      "(3, 224) [87.66840604 17.12626029  5.11894999]\n",
      "(3, 224) [87.66883756 17.12628301  5.11896839]\n",
      "(3, 224) [87.66939686 17.12631297  5.11899209]\n",
      "(3, 224) [87.67012439 17.12637872  5.11901493]\n",
      "(3, 224) [87.67103657 17.12644777  5.11904756]\n",
      "(3, 224) [87.67200838 17.12652281  5.11908189]\n",
      "(3, 224) [87.67279723 17.1265936   5.11910679]\n",
      "(3, 224) [87.67377981 17.12663427  5.119152  ]\n",
      "(3, 224) [87.67490521 17.12664665  5.11921399]\n",
      "(3, 224) [87.67598952 17.12664547  5.11927762]\n",
      "(3, 224) [87.67683191 17.12664989  5.11932544]\n",
      "(3, 224) [87.6778658  17.12665323  5.11938475]\n",
      "(3, 224) [87.67887439 17.12664502  5.11944605]\n",
      "(3, 224) [87.68010136 17.12665094  5.11951585]\n",
      "(3, 224) [87.68133094 17.12664856  5.1195883 ]\n",
      "(3, 224) [87.68270788 17.12663174  5.11967367]\n",
      "(3, 224) [87.68405605 17.1266074   5.1197596 ]\n",
      "(3, 224) [87.68542124 17.12654484  5.11985793]\n",
      "(3, 224) [87.68671387 17.12649278  5.11994892]\n",
      "(3, 224) [87.68789926 17.12643943  5.12003402]\n",
      "(3, 224) [87.68890314 17.12640089  5.12010411]\n",
      "(3, 224) [87.68972248 17.12636814  5.12016169]\n",
      "(3, 224) [87.69056298 17.12633704  5.12022003]\n",
      "(3, 224) [87.69151348 17.1262978   5.1202872 ]\n",
      "(3, 224) [87.6922662  17.12623517  5.12034982]\n",
      "(3, 224) [87.69322042 17.12617906  5.12042224]\n",
      "(3, 224) [87.69436267 17.12615354  5.12049651]\n",
      "(3, 224) [87.69543475 17.12611191  5.12057148]\n",
      "(3, 224) [87.69644749 17.12607001  5.12064307]\n",
      "(3, 224) [87.69763651 17.12605789  5.12071604]\n",
      "(3, 224) [87.69845331 17.12606459  5.12076168]\n",
      "(3, 224) [87.699398  17.1260595  5.1208183]\n",
      "(3, 224) [87.70017482 17.12603632  5.12087053]\n",
      "(3, 224) [87.70081886 17.12600612  5.1209171 ]\n",
      "(3, 224) [87.70151346 17.12600227  5.12095876]\n",
      "(3, 224) [87.70211915 17.12593718  5.12101353]\n",
      "(3, 224) [87.70279052 17.12588935  5.12106696]\n",
      "(3, 224) [87.70364038 17.12582908  5.12113453]\n",
      "(3, 224) [87.70425513 17.12574518  5.12119545]\n",
      "(3, 224) [87.7047904  17.1256559   5.12125336]\n",
      "(3, 224) [87.70528267 17.1255777   5.12130544]\n",
      "(3, 224) [87.70603011 17.12551463  5.12136791]\n",
      "(3, 224) [87.70668512 17.12546733  5.12142025]\n",
      "(3, 224) [87.70709484 17.12540682  5.12146223]\n",
      "(3, 224) [87.7079267  17.12537129  5.12152137]\n",
      "(3, 224) [87.70849565 17.12530903  5.12157317]\n",
      "(3, 224) [87.70907008 17.12528378  5.12161423]\n",
      "(3, 224) [87.70966715 17.12521326  5.12167016]\n",
      "(3, 224) [87.71041978 17.1251146   5.12174357]\n",
      "(3, 224) [87.71118973 17.12498601  5.12182693]\n",
      "(3, 224) [87.71162161 17.12483104  5.12189842]\n",
      "(3, 224) [87.71236636 17.1246709   5.12198972]\n",
      "(3, 224) [87.71295937 17.12450106  5.1220751 ]\n",
      "(3, 224) [87.71334779 17.1243144   5.12215352]\n",
      "(3, 224) [87.7136017  17.12414501  5.12221894]\n",
      "(3, 224) [87.71379252 17.12399042  5.12227627]\n",
      "(3, 224) [87.71417681 17.12380362  5.12235451]\n",
      "(3, 224) [87.7143909  17.12360088  5.12242761]\n",
      "(3, 224) [87.71448734 17.12338018  5.12249921]\n",
      "(3, 224) [87.71448542 17.12317291  5.12256103]\n",
      "(3, 224) [87.71431911 17.12295516  5.12261641]\n",
      "(3, 224) [87.71444955 17.12274227  5.12268766]\n",
      "(3, 224) [87.71452683 17.12252967  5.1227557 ]\n",
      "(3, 224) [87.71478577 17.12232756  5.12283125]\n",
      "(3, 224) [87.71475406 17.12210308  5.12289655]\n",
      "(3, 224) [87.7144921  17.12189813  5.12294259]\n",
      "(3, 224) [87.71438309 17.12168444  5.12300017]\n",
      "(3, 224) [87.71415636 17.1214829   5.12304722]\n",
      "(3, 224) [87.71390657 17.12129519  5.1230888 ]\n",
      "(3, 224) [87.71365766 17.12113638  5.12312177]\n",
      "(3, 224) [87.71359622 17.12097002  5.12316797]\n",
      "(3, 224) [87.71343644 17.12085283  5.12319369]\n",
      "(3, 224) [87.71356918 17.12073346  5.12323716]\n",
      "(3, 224) [87.71326363 17.12058877  5.12326258]\n",
      "(3, 224) [87.71300698 17.12046186  5.12328556]\n",
      "(3, 224) [87.71271307 17.12034899  5.12330216]\n",
      "(3, 224) [87.71237828 17.12024648  5.12331328]\n",
      "(3, 224) [87.71231617 17.12011191  5.12334993]\n",
      "(3, 224) [87.71217542 17.11998204  5.12338057]\n",
      "(3, 224) [87.71186485 17.11983002  5.12340792]\n",
      "(3, 224) [87.71145274 17.11969683  5.12342369]\n",
      "(3, 224) [87.71083245 17.11957766  5.12342309]\n",
      "(3, 224) [87.71019316 17.11948111  5.12341462]\n",
      "(3, 224) [87.70957789 17.1193723   5.12341122]\n",
      "(3, 224) [87.70901972 17.11927013  5.12340916]\n",
      "(3, 224) [87.70875526 17.11916929  5.12342387]\n",
      "(3, 224) [87.70845987 17.11906067  5.12343909]\n",
      "(3, 224) [87.7078786  17.11892804  5.12344482]\n",
      "(3, 224) [87.70733513 17.11881598  5.12344661]\n",
      "(3, 224) [87.70697437 17.11871156  5.1234568 ]\n",
      "(3, 224) [87.70681841 17.11860791  5.12347871]\n",
      "(3, 224) [87.70609916 17.1185032   5.12346804]\n",
      "(3, 224) [87.70534449 17.11838405  5.12345961]\n",
      "(3, 224) [87.70486972 17.11826661  5.12346703]\n",
      "(3, 224) [87.7046255  17.11816033  5.12348459]\n",
      "(3, 224) [87.70427782 17.11802877  5.12350367]\n",
      "(3, 224) [87.70386052 17.1179244   5.12351054]\n",
      "(3, 224) [87.70336275 17.11785739  5.12350151]\n",
      "(3, 224) [87.70292462 17.11794983  5.12344833]\n",
      "(3, 224) [87.70264365 17.11795111  5.12343154]\n",
      "(3, 224) [87.702798   17.1179755   5.12343325]\n",
      "(3, 224) [87.70272693 17.11801403  5.12341758]\n",
      "(3, 224) [87.70311666 17.11799606  5.12344572]\n",
      "(3, 224) [87.7033502  17.11797931  5.12346438]\n",
      "(3, 224) [87.7040534  17.11798477  5.12350381]\n",
      "(3, 224) [87.70462647 17.11804072  5.12352054]\n",
      "(3, 224) [87.70497603 17.11813852  5.12351171]\n",
      "(3, 224) [87.70566322 17.11829592  5.12350478]\n",
      "(3, 224) [87.70616856 17.11847885  5.12347962]\n",
      "(3, 224) [87.70652638 17.11864715  5.12345018]\n",
      "(3, 224) [87.70723028 17.11891017  5.12341273]\n",
      "(3, 224) [87.70794224 17.11920315  5.12336684]\n",
      "(3, 224) [87.70825303 17.11946457  5.12330698]\n",
      "(3, 224) [87.70886999 17.11970485  5.12327126]\n",
      "(3, 224) [87.70911758 17.11988267  5.1232326 ]\n",
      "(3, 224) [87.70951937 17.12005822  5.12320359]\n",
      "(3, 224) [87.70995698 17.12028741  5.12316067]\n",
      "(3, 224) [87.71022146 17.12056311  5.12309384]\n",
      "(3, 224) [87.71047546 17.12080702  5.12303585]\n",
      "(3, 224) [87.71079028 17.12101418  5.12299235]\n",
      "(3, 224) [87.71085455 17.12129676  5.12291178]\n",
      "(3, 224) [87.71087029 17.12151188  5.12284847]\n",
      "(3, 224) [87.71121839 17.12174016  5.12280062]\n",
      "(3, 224) [87.7116375  17.12195442  5.12276111]\n",
      "(3, 224) [87.71215568 17.12217223  5.1227263 ]\n",
      "(3, 224) [87.71218107 17.12246001  5.12264193]\n",
      "(3, 224) [87.71249792 17.12277748  5.12256572]\n",
      "(3, 224) [87.71254755 17.12309661  5.12247344]\n",
      "(3, 224) [87.71286836 17.12342939  5.12239292]\n",
      "(3, 224) [87.71355459 17.12378803  5.122326  ]\n",
      "(3, 224) [87.71413409 17.12411985  5.12226089]\n",
      "(3, 224) [87.7145679  17.12438836  5.12220612]\n",
      "(3, 224) [87.71536478 17.1246714   5.12216817]\n",
      "(3, 224) [87.71619508 17.1249762   5.1221257 ]\n",
      "(3, 224) [87.71686507 17.12532263  5.12206155]\n",
      "(3, 224) [87.71761859 17.12566885  5.12200229]\n",
      "(3, 224) [87.7186905  17.12600887  5.1219634 ]\n",
      "(3, 224) [87.7193691  17.12633723  5.12190504]\n",
      "(3, 224) [87.72006508 17.12671392  5.1218333 ]\n",
      "(3, 224) [87.72076918 17.12706868  5.12176855]\n",
      "(3, 224) [87.72190193 17.12743995  5.12172385]\n",
      "(3, 224) [87.7227257  17.12787084  5.12164348]\n",
      "(3, 224) [87.72367694 17.12826956  5.12158009]\n",
      "(3, 224) [87.72460603 17.1286105   5.12153253]\n",
      "(3, 224) [87.72535104 17.12894999  5.12147476]\n",
      "(3, 224) [87.72611967 17.12932067  5.12140906]\n",
      "(3, 224) [87.72702326 17.12962343  5.12137143]\n",
      "(3, 224) [87.7275852  17.12994294  5.12130887]\n",
      "(3, 224) [87.72830761 17.13021087  5.12127103]\n",
      "(3, 224) [87.72900448 17.13050611  5.12122354]\n",
      "(3, 224) [87.72956301 17.13078508  5.12117285]\n",
      "(3, 224) [87.73037697 17.131033    5.1211463 ]\n",
      "(3, 224) [87.73103716 17.13125922  5.12111728]\n",
      "(3, 224) [87.73173629 17.13149369  5.12108807]\n",
      "(3, 224) [87.73229611 17.1317551   5.12104267]\n",
      "(3, 224) [87.73268348 17.1319791   5.12099837]\n",
      "(3, 224) [87.73289952 17.13216227  5.12095623]\n",
      "(3, 224) [87.7333072  17.1323107   5.12093563]\n",
      "(3, 224) [87.7339013  17.13247324  5.12092169]\n",
      "(3, 224) [87.73467306 17.13263653  5.1209179 ]\n",
      "(3, 224) [87.73527899 17.13275585  5.12091758]\n",
      "(3, 224) [87.73575038 17.1328839   5.12090679]\n",
      "(3, 224) [87.7364259  17.1329132   5.12093749]\n",
      "(3, 224) [87.73727831 17.13300639  5.12095937]\n",
      "(3, 224) [87.73811578 17.13310177  5.12097973]\n",
      "(3, 224) [87.73940696 17.1331718   5.12103419]\n",
      "(3, 224) [87.74058739 17.13314614  5.12111088]\n",
      "(3, 224) [87.74182731 17.13307939  5.12120338]\n",
      "(3, 224) [87.74268059 17.13293018  5.12129806]\n",
      "(3, 224) [87.74371206 17.13269185  5.12142995]\n",
      "(3, 224) [87.74453573 17.13247367  5.12154363]\n",
      "(3, 224) [87.74547186 17.13227643  5.12165758]\n",
      "(3, 224) [87.74649633 17.13219532  5.12174183]\n",
      "(3, 224) [87.74775253 17.13212523  5.12183628]\n",
      "(3, 224) [87.74875483 17.13204751  5.1219182 ]\n",
      "(3, 224) [87.74942713 17.13197032  5.12198066]\n",
      "(3, 224) [87.75037045 17.13187781  5.12206359]\n",
      "(3, 224) [87.75122266 17.13180495  5.12213529]\n",
      "(3, 224) [87.75201884 17.13175432  5.12219704]\n",
      "(3, 224) [87.75270488 17.13167715  5.12226031]\n",
      "(3, 224) [87.75341771 17.13153473  5.12234476]\n",
      "(3, 224) [87.75409861 17.13133204  5.12244546]\n",
      "(3, 224) [87.75499538 17.13112667  5.12255963]\n",
      "(3, 224) [87.75587905 17.13092575  5.12267171]\n",
      "(3, 224) [87.75660614 17.13080425  5.12275072]\n",
      "(3, 224) [87.75764878 17.1307039   5.12284183]\n",
      "(3, 224) [87.75855865 17.13060438  5.12292491]\n",
      "(3, 224) [87.75938398 17.13043834  5.12302305]\n",
      "(3, 224) [87.76027905 17.13028351  5.12312194]\n",
      "(3, 224) [87.76105463 17.13005696  5.1232354 ]\n",
      "(3, 224) [87.76201014 17.12980524  5.12336701]\n",
      "(3, 224) [87.76263377 17.12952211  5.1234887 ]\n",
      "(3, 224) [87.76347607 17.12931801  5.12359933]\n",
      "(3, 224) [87.76422185 17.12913141  5.12369901]\n",
      "(3, 224) [87.76474439 17.12896144  5.12378061]\n",
      "(3, 224) [87.76551575 17.12876245  5.12388552]\n",
      "(3, 224) [87.76640589 17.12856755  5.12399615]\n",
      "(3, 224) [87.76703172 17.12839113  5.12408572]\n",
      "(3, 224) [87.76782311 17.12821651  5.12418446]\n",
      "(3, 224) [87.76849703 17.12807475  5.12426645]\n",
      "(3, 224) [87.76930497 17.12792312  5.12435922]\n",
      "(3, 224) [87.77002927 17.1277577   5.12445124]\n",
      "(3, 224) [87.77091537 17.12763223  5.12454075]\n",
      "(3, 224) [87.77183214 17.12752278  5.12462721]\n",
      "(3, 224) [87.7725146  17.12741917  5.12469821]\n",
      "(3, 224) [87.77298659 17.12728236  5.12476688]\n",
      "(3, 224) [87.77338943 17.12713267  5.12483534]\n",
      "(3, 224) [87.77385361 17.12701984  5.12489634]\n",
      "(3, 224) [87.7744593  17.12691292  5.12496381]\n",
      "(3, 224) [87.77494222 17.12683062  5.12501673]\n",
      "(3, 224) [87.77557937 17.12672727  5.12508501]\n",
      "(3, 224) [87.77592909 17.12662316  5.12513668]\n",
      "(3, 224) [87.77645725 17.12652499  5.12519701]\n",
      "(3, 224) [87.77695751 17.12642122  5.12525737]\n",
      "(3, 224) [87.77759814 17.12635086  5.12531594]\n",
      "(3, 224) [87.77825944 17.12625414  5.12538363]\n",
      "(3, 224) [87.7790978  17.12615433  5.1254626 ]\n",
      "(3, 224) [87.77999268 17.12602229  5.12555454]\n",
      "(3, 224) [87.78062617 17.12585704  5.12564115]\n",
      "(3, 224) [87.78096474 17.12570333  5.12570705]\n",
      "(3, 224) [87.78124553 17.12553997  5.12577247]\n",
      "(3, 224) [87.78152836 17.12539578  5.12583225]\n",
      "(3, 224) [87.78208562 17.12526874  5.12590288]\n",
      "(3, 224) [87.78270152 17.12511393  5.12598529]\n",
      "(3, 224) [87.78317049 17.12495313  5.12606089]\n",
      "(3, 224) [87.78374736 17.12479619  5.12614164]\n",
      "(3, 224) [87.78430851 17.12463008  5.12622422]\n",
      "(3, 224) [87.78495316 17.12444711  5.12631676]\n",
      "(3, 224) [87.78542445 17.1242786   5.12639479]\n",
      "(3, 224) [87.78575967 17.124123    5.126461  ]\n",
      "(3, 224) [87.78622502 17.1239597   5.12653714]\n",
      "(3, 224) [87.78648615 17.12376753  5.12661001]\n",
      "(3, 224) [87.78667641 17.12354037  5.12668927]\n",
      "(3, 224) [87.78697796 17.12330271  5.12677819]\n",
      "(3, 224) [87.78737302 17.12306798  5.12687164]\n",
      "(3, 224) [87.78753365 17.12281463  5.126957  ]\n",
      "(3, 224) [87.78786958 17.12257437  5.12704871]\n",
      "(3, 224) [87.78778456 17.12229969  5.12712614]\n",
      "(3, 224) [87.78787238 17.12206511  5.12720164]\n",
      "(3, 224) [87.78788531 17.12188104  5.12725763]\n",
      "(3, 224) [87.78771566 17.12169909  5.1273023 ]\n",
      "(3, 224) [87.78759786 17.12152573  5.12734742]\n",
      "(3, 224) [87.78763467 17.1213694   5.12739647]\n",
      "(3, 224) [87.7878763  17.12121621  5.12745655]\n",
      "(3, 224) [87.78800374 17.12106041  5.1275107 ]\n",
      "(3, 224) [87.7882745  17.1208946   5.12757623]\n",
      "(3, 224) [87.7886378  17.1207315   5.12764635]\n",
      "(3, 224) [87.78893439 17.12055103  5.12771778]\n",
      "(3, 224) [87.78962988 17.12041033  5.12780062]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  4%|███▏                                                                       | 3295/76339 [00:01<00:33, 2183.55it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.79034223 17.12020971  5.12790246]\n",
      "(3, 224) [87.7908045  17.12001844  5.12798686]\n",
      "(3, 224) [87.79084835 17.11981793  5.12804957]\n",
      "(3, 224) [87.79125664 17.11960498  5.12813731]\n",
      "(3, 224) [87.79156385 17.11933833  5.12823523]\n",
      "(3, 224) [87.79182115 17.11906931  5.12833093]\n",
      "(3, 224) [87.79230639 17.11882092  5.12843377]\n",
      "(3, 224) [87.792557   17.11860578  5.12851289]\n",
      "(3, 224) [87.79258406 17.11838747  5.1285799 ]\n",
      "(3, 224) [87.7927491  17.11813968  5.12866381]\n",
      "(3, 224) [87.79304096 17.11789138  5.12875539]\n",
      "(3, 224) [87.79323723 17.11762821  5.12884583]\n",
      "(3, 224) [87.7931388  17.11735972  5.12892066]\n",
      "(3, 224) [87.7934076  17.11701572  5.12903982]\n",
      "(3, 224) [87.7936244  17.11672698  5.12913927]\n",
      "(3, 224) [87.79377315 17.11643294  5.12923631]\n",
      "(3, 224) [87.79380401 17.1161794   5.12931427]\n",
      "(3, 224) [87.79390603 17.11580869  5.12943164]\n",
      "(3, 224) [87.79417025 17.11536066  5.12958195]\n",
      "(3, 224) [87.79457603 17.11490988  5.12974136]\n",
      "(3, 224) [87.79499771 17.11443522  5.12990896]\n",
      "(3, 224) [87.795705   17.11398273  5.13008659]\n",
      "(3, 224) [87.79613985 17.11359839  5.13022775]\n",
      "(3, 224) [87.79651612 17.11320273  5.13036896]\n",
      "(3, 224) [87.79705274 17.11279298  5.13052387]\n",
      "(3, 224) [87.79756304 17.11241158  5.13066862]\n",
      "(3, 224) [87.79797065 17.11204228  5.13080375]\n",
      "(3, 224) [87.79840633 17.11168464  5.13093703]\n",
      "(3, 224) [87.79903027 17.1113381   5.13107795]\n",
      "(3, 224) [87.79980146 17.11100243  5.13122417]\n",
      "(3, 224) [87.80021468 17.11067749  5.13134615]\n",
      "(3, 224) [87.80058078 17.11038693  5.13145502]\n",
      "(3, 224) [87.8009049  17.11011597  5.13155555]\n",
      "(3, 224) [87.80127198 17.10985581  5.13165535]\n",
      "(3, 224) [87.80189902 17.10958094  5.13177479]\n",
      "(3, 224) [87.80276201 17.10927208  5.13191837]\n",
      "(3, 224) [87.8030678  17.10896512  5.13202871]\n",
      "(3, 224) [87.80382624 17.10862547  5.13217547]\n",
      "(3, 224) [87.80427041 17.10832307  5.1322926 ]\n",
      "(3, 224) [87.80498012 17.10806476  5.13241201]\n",
      "(3, 224) [87.80564794 17.10781808  5.13252545]\n",
      "(3, 224) [87.80618081 17.10756981  5.13263144]\n",
      "(3, 224) [87.80672796 17.1073186   5.13273912]\n",
      "(3, 224) [87.80720482 17.10704596  5.13284916]\n",
      "(3, 224) [87.80797575 17.10677921  5.13297461]\n",
      "(3, 224) [87.80860824 17.10654562  5.13308198]\n",
      "(3, 224) [87.80923936 17.10625154  5.13320745]\n",
      "(3, 224) [87.80980791 17.10594346  5.13333352]\n",
      "(3, 224) [87.81079538 17.10565597  5.13347788]\n",
      "(3, 224) [87.81187495 17.10539511  5.13361963]\n",
      "(3, 224) [87.81292207 17.10509906  5.13377008]\n",
      "(3, 224) [87.81421142 17.1048196   5.13392977]\n",
      "(3, 224) [87.8150761  17.10455715  5.13405946]\n",
      "(3, 224) [87.81602499 17.10428491  5.13419702]\n",
      "(3, 224) [87.81715512 17.10406225  5.13433023]\n",
      "(3, 224) [87.81841259 17.10378989  5.13448585]\n",
      "(3, 224) [87.81966064 17.10345284  5.13466039]\n",
      "(3, 224) [87.82101348 17.10308832  5.13484935]\n",
      "(3, 224) [87.82235239 17.10270002  5.13504472]\n",
      "(3, 224) [87.82362957 17.1023101   5.13523693]\n",
      "(3, 224) [87.82490127 17.10191828  5.13542951]\n",
      "(3, 224) [87.82613126 17.10155168  5.135612  ]\n",
      "(3, 224) [87.82731504 17.10122097  5.13578097]\n",
      "(3, 224) [87.82836967 17.10089127  5.13594208]\n",
      "(3, 224) [87.8291537  17.10056509  5.13608631]\n",
      "(3, 224) [87.83009944 17.10024087  5.13623944]\n",
      "(3, 224) [87.83133779 17.09992585  5.13640687]\n",
      "(3, 224) [87.8326039  17.09966144  5.13656068]\n",
      "(3, 224) [87.83353162 17.09937589  5.13670101]\n",
      "(3, 224) [87.83409077 17.09909388  5.13681872]\n",
      "(3, 224) [87.83459115 17.09880965  5.13693364]\n",
      "(3, 224) [87.83482104 17.09851927  5.1370345 ]\n",
      "(3, 224) [87.83528242 17.0982038   5.13715641]\n",
      "(3, 224) [87.83587441 17.09780209  5.13731154]\n",
      "(3, 224) [87.83604216 17.09753091  5.13740278]\n",
      "(3, 224) [87.83591674 17.09717311  5.13750291]\n",
      "(3, 224) [87.83588718 17.09684634  5.13759924]\n",
      "(3, 224) [87.83568239 17.09658745  5.13766503]\n",
      "(3, 224) [87.83536301 17.09634259  5.13771989]\n",
      "(3, 224) [87.83482607 17.09610132  5.13776093]\n",
      "(3, 224) [87.83442605 17.09577061  5.13783683]\n",
      "(3, 224) [87.83396862 17.09543668  5.13791021]\n",
      "(3, 224) [87.83342667 17.09501435  5.13800517]\n",
      "(3, 224) [87.83297243 17.09454694  5.13811877]\n",
      "(3, 224) [87.8325025  17.09412121  5.13821899]\n",
      "(3, 224) [87.83176919 17.09352988  5.13835335]\n",
      "(3, 224) [87.8311327  17.09289741  5.13850568]\n",
      "(3, 224) [87.83073112 17.09234553  5.13864747]\n",
      "(3, 224) [87.8300549  17.09179212  5.13877373]\n",
      "(3, 224) [87.8296201  17.09131298  5.13889194]\n",
      "(3, 224) [87.8291977  17.0909641   5.13897174]\n",
      "(3, 224) [87.82858857 17.0905808   5.13905085]\n",
      "(3, 224) [87.82792868 17.09021451  5.1391217 ]\n",
      "(3, 224) [87.82757209 17.089941    5.13918257]\n",
      "(3, 224) [87.82731725 17.08962687  5.13926163]\n",
      "(3, 224) [87.82725553 17.08927557  5.13936295]\n",
      "(3, 224) [87.82727462 17.08893276  5.1394666 ]\n",
      "(3, 224) [87.82693805 17.08859508  5.1395479 ]\n",
      "(3, 224) [87.82679242 17.08827105  5.13963631]\n",
      "(3, 224) [87.82652434 17.08789971  5.13973178]\n",
      "(3, 224) [87.82634353 17.08747055  5.13984948]\n",
      "(3, 224) [87.82591884 17.08704173  5.13995276]\n",
      "(3, 224) [87.82581552 17.08660269  5.14007786]\n",
      "(3, 224) [87.82573668 17.08613865  5.14021189]\n",
      "(3, 224) [87.82531572 17.08563143  5.1403389 ]\n",
      "(3, 224) [87.82492567 17.08513442  5.1404646 ]\n",
      "(3, 224) [87.82454234 17.08470998  5.14056905]\n",
      "(3, 224) [87.82397869 17.08427461  5.1406663 ]\n",
      "(3, 224) [87.82343554 17.08382411  5.1407692 ]\n",
      "(3, 224) [87.82328253 17.08334422  5.14090358]\n",
      "(3, 224) [87.822902   17.08286227  5.14102532]\n",
      "(3, 224) [87.82227927 17.08244612  5.14111327]\n",
      "(3, 224) [87.82184151 17.08204324  5.14120804]\n",
      "(3, 224) [87.82148681 17.0815868   5.14132363]\n",
      "(3, 224) [87.82115548 17.08111762  5.14144449]\n",
      "(3, 224) [87.8206503  17.0806371   5.14155866]\n",
      "(3, 224) [87.82035484 17.08010956  5.14169891]\n",
      "(3, 224) [87.81997795 17.07965642  5.14181217]\n",
      "(3, 224) [87.81969163 17.07926404  5.14191273]\n",
      "(3, 224) [87.81958784 17.07887303  5.14202341]\n",
      "(3, 224) [87.81948981 17.0784638   5.14213986]\n",
      "(3, 224) [87.81923982 17.0780841   5.14223875]\n",
      "(3, 224) [87.81907711 17.07770992  5.14234104]\n",
      "(3, 224) [87.81891789 17.0773597   5.14243647]\n",
      "(3, 224) [87.81887502 17.07700445  5.14254019]\n",
      "(3, 224) [87.8187721  17.07667218  5.14263349]\n",
      "(3, 224) [87.81859258 17.07635701  5.1427173 ]\n",
      "(3, 224) [87.8185152  17.07605763  5.14280232]\n",
      "(3, 224) [87.81840955 17.07576761  5.14288286]\n",
      "(3, 224) [87.81838734 17.07549289  5.14296368]\n",
      "(3, 224) [87.8184211  17.07520346  5.14305221]\n",
      "(3, 224) [87.81856787 17.07494106  5.14313933]\n",
      "(3, 224) [87.81855605 17.0747415   5.14319842]\n",
      "(3, 224) [87.81853349 17.07456974  5.14324855]\n",
      "(3, 224) [87.81832793 17.074383    5.14329248]\n",
      "(3, 224) [87.81815378 17.07423169  5.14332764]\n",
      "(3, 224) [87.8183137  17.07406555  5.14338677]\n",
      "(3, 224) [87.81831006 17.07398611  5.14341038]\n",
      "(3, 224) [87.81814703 17.0738587   5.14343906]\n",
      "(3, 224) [87.81816509 17.07378767  5.14346141]\n",
      "(3, 224) [87.81819272 17.07375434  5.14347303]\n",
      "(3, 224) [87.81845533 17.07376954  5.14348381]\n",
      "(3, 224) [87.81868581 17.07384105  5.1434758 ]\n",
      "(3, 224) [87.81912109 17.07400195  5.1434529 ]\n",
      "(3, 224) [87.81938392 17.07419393  5.14341051]\n",
      "(3, 224) [87.81998287 17.07437703  5.14339045]\n",
      "(3, 224) [87.82015014 17.07455076  5.143348  ]\n",
      "(3, 224) [87.82050131 17.07465857  5.14333614]\n",
      "(3, 224) [87.82044751 17.07474021  5.14330847]\n",
      "(3, 224) [87.82061895 17.07482779  5.14329218]\n",
      "(3, 224) [87.82092445 17.0749127   5.14328454]\n",
      "(3, 224) [87.82089573 17.07500818  5.14325417]\n",
      "(3, 224) [87.8211453  17.07508659  5.14324521]\n",
      "(3, 224) [87.82140489 17.07514417  5.14324309]\n",
      "(3, 224) [87.82179795 17.07522704  5.14324118]\n",
      "(3, 224) [87.82229982 17.0753807   5.14322435]\n",
      "(3, 224) [87.82245123 17.07556844  5.14317675]\n",
      "(3, 224) [87.82241013 17.07578126  5.14311035]\n",
      "(3, 224) [87.82256935 17.07596294  5.14306499]\n",
      "(3, 224) [87.82304947 17.07605661  5.14306491]\n",
      "(3, 224) [87.82305909 17.07613516  5.14304185]\n",
      "(3, 224) [87.82325345 17.07619735  5.14303452]\n",
      "(3, 224) [87.82338252 17.07631497  5.14300669]\n",
      "(3, 224) [87.82357542 17.07646435  5.14297303]\n",
      "(3, 224) [87.8240088  17.07664501  5.142944  ]\n",
      "(3, 224) [87.82417971 17.07689019  5.14288018]\n",
      "(3, 224) [87.82463553 17.07720452  5.14281221]\n",
      "(3, 224) [87.82482904 17.07746559  5.14274502]\n",
      "(3, 224) [87.82536602 17.07767399  5.14271376]\n",
      "(3, 224) [87.82603142 17.07785736  5.14269754]\n",
      "(3, 224) [87.82652419 17.07807518  5.14266085]\n",
      "(3, 224) [87.82683067 17.07826701  5.14262107]\n",
      "(3, 224) [87.8274235  17.07843649  5.1426048 ]\n",
      "(3, 224) [87.82789754 17.0786233   5.14257635]\n",
      "(3, 224) [87.82827418 17.07877149  5.14255383]\n",
      "(3, 224) [87.82861764 17.07893043  5.14252616]\n",
      "(3, 224) [87.82922935 17.07910648  5.14250902]\n",
      "(3, 224) [87.82934284 17.07925172  5.142472  ]\n",
      "(3, 224) [87.82944755 17.07936496  5.1424441 ]\n",
      "(3, 224) [87.82978919 17.07947898  5.14242983]\n",
      "(3, 224) [87.83015746 17.07961773  5.14240968]\n",
      "(3, 224) [87.83063655 17.07971633  5.14240807]\n",
      "(3, 224) [87.83090633 17.07984105  5.1423864 ]\n",
      "(3, 224) [87.83080997 17.07994785  5.14234872]\n",
      "(3, 224) [87.83087554 17.08004482  5.14232345]\n",
      "(3, 224) [87.83102454 17.08012262  5.14230879]\n",
      "(3, 224) [87.83136225 17.08018646  5.14230936]\n",
      "(3, 224) [87.83175028 17.08023957  5.14231609]\n",
      "(3, 224) [87.8322664  17.08026831  5.14233765]\n",
      "(3, 224) [87.83281104 17.08032488  5.1423525 ]\n",
      "(3, 224) [87.83339119 17.08042394  5.14235665]\n",
      "(3, 224) [87.83422432 17.08057982  5.14235851]\n",
      "(3, 224) [87.83505883 17.08078654  5.14234518]\n",
      "(3, 224) [87.83609916 17.08101287  5.142338  ]\n",
      "(3, 224) [87.83704786 17.0812262   5.1423294 ]\n",
      "(3, 224) [87.83819873 17.08141957  5.14233858]\n",
      "(3, 224) [87.8393283 17.0815957  5.1423517]\n",
      "(3, 224) [87.84052775 17.08176194  5.14237186]\n",
      "(3, 224) [87.84175447 17.08190626  5.14240018]\n",
      "(3, 224) [87.84305744 17.08200883  5.14244552]\n",
      "(3, 224) [87.84411095 17.08209554  5.14248104]\n",
      "(3, 224) [87.84553262 17.08220045  5.14253261]\n",
      "(3, 224) [87.84656847 17.08230874  5.1425606 ]\n",
      "(3, 224) [87.84765677 17.08237553  5.14260415]\n",
      "(3, 224) [87.84882951 17.0824611   5.14264698]\n",
      "(3, 224) [87.84962785 17.08250105  5.14268165]\n",
      "(3, 224) [87.85073535 17.08256459  5.14272732]\n",
      "(3, 224) [87.85167074 17.08265695  5.14275424]\n",
      "(3, 224) [87.8526344  17.08275077  5.14278237]\n",
      "(3, 224) [87.85327563 17.08281444  5.14280072]\n",
      "(3, 224) [87.85405228 17.08288831  5.14282392]\n",
      "(3, 224) [87.8547278  17.08296646  5.14283991]\n",
      "(3, 224) [87.85566405 17.08305559  5.14286786]\n",
      "(3, 224) [87.85655262 17.08311213  5.14290282]\n",
      "(3, 224) [87.8572773  17.08315816  5.14293135]\n",
      "(3, 224) [87.85823524 17.08320971  5.14297186]\n",
      "(3, 224) [87.8590095  17.08323265  5.14301025]\n",
      "(3, 224) [87.85967723 17.08325419  5.14304282]\n",
      "(3, 224) [87.86007693 17.08326517  5.1430629 ]\n",
      "(3, 224) [87.86057448 17.08327489  5.14308907]\n",
      "(3, 224) [87.86104789 17.08329396  5.14311102]\n",
      "(3, 224) [87.86136336 17.0833209   5.14312138]\n",
      "(3, 224) [87.86171923 17.08334796  5.14313405]\n",
      "(3, 224) [87.86194932 17.0832869   5.1431659 ]\n",
      "(3, 224) [87.86195703 17.08330653  5.14316044]\n",
      "(3, 224) [87.86192881 17.08328317  5.14316582]\n",
      "(3, 224) [87.86240761 17.08330254  5.143188  ]\n",
      "(3, 224) [87.86277933 17.08335043  5.14319534]\n",
      "(3, 224) [87.86346793 17.0834122   5.14321703]\n",
      "(3, 224) [87.86400055 17.08345169  5.14323631]\n",
      "(3, 224) [87.86434762 17.08347125  5.14325073]\n",
      "(3, 224) [87.86489535 17.08345061  5.14328899]\n",
      "(3, 224) [87.86557812 17.08342431  5.14333685]\n",
      "(3, 224) [87.8661002  17.08341708  5.14336957]\n",
      "(3, 224) [87.86643989 17.08344272  5.14338173]\n",
      "(3, 224) [87.86665372 17.08350629  5.14337511]\n",
      "(3, 224) [87.86688507 17.08355687  5.14337343]\n",
      "(3, 224) [87.86715401 17.08374953  5.1433311 ]\n",
      "(3, 224) [87.86751184 17.08387961  5.14331285]\n",
      "(3, 224) [87.86803632 17.08403718  5.14329609]\n",
      "(3, 224) [87.86823511 17.08418056  5.14326459]\n",
      "(3, 224) [87.86877082 17.0844487   5.14321519]\n",
      "(3, 224) [87.86914924 17.08477709  5.1431383 ]\n",
      "(3, 224) [87.86918895 17.0850906   5.14304605]\n",
      "(3, 224) [87.8694877  17.08540409  5.14296889]\n",
      "(3, 224) [87.86940114 17.08571701  5.14286937]\n",
      "(3, 224) [87.86929646 17.08599215  5.14278026]\n",
      "(3, 224) [87.8693035  17.08629015  5.14269075]\n",
      "(3, 224) [87.86924945 17.08664355  5.14258094]\n",
      "(3, 224) [87.86948186 17.08696845  5.14249654]\n",
      "(3, 224) [87.86942427 17.0873007   5.14239298]\n",
      "(3, 224) [87.86950168 17.08760098  5.14230691]\n",
      "(3, 224) [87.86950206 17.08785625  5.14222989]\n",
      "(3, 224) [87.86943156 17.08810903  5.1421495 ]\n",
      "(3, 224) [87.86963096 17.08835244  5.1420878 ]\n",
      "(3, 224) [87.86985555 17.08860525  5.14202477]\n",
      "(3, 224) [87.87017119 17.08884315  5.14197156]\n",
      "(3, 224) [87.87067667 17.08909748  5.14192452]\n",
      "(3, 224) [87.87093401 17.08933944  5.14186665]\n",
      "(3, 224) [87.87111055 17.0896392   5.14178657]\n",
      "(3, 224) [87.87168488 17.08992995  5.14173254]\n",
      "(3, 224) [87.87219949 17.09024276  5.14166826]\n",
      "(3, 224) [87.8727694  17.09052151  5.14161752]\n",
      "(3, 224) [87.87306    17.09080668  5.14154855]\n",
      "(3, 224) [87.87372237 17.09109557  5.14150022]\n",
      "(3, 224) [87.87437142 17.09138068  5.14145226]\n",
      "(3, 224) [87.87516631 17.09165917  5.14141486]\n",
      "(3, 224) [87.87600507 17.09193856  5.14137972]\n",
      "(3, 224) [87.87659953 17.09220742  5.14133347]\n",
      "(3, 224) [87.87730314 17.09246252  5.14129776]\n",
      "(3, 224) [87.87794598 17.09274361  5.14125066]\n",
      "(3, 224) [87.87846701 17.09302815  5.14119535]\n",
      "(3, 224) [87.87879129 17.09329386  5.14113422]\n",
      "(3, 224) [87.87877196 17.09353097  5.14106158]\n",
      "(3, 224) [87.87886446 17.09378723  5.1409897 ]\n",
      "(3, 224) [87.87857406 17.09407789  5.14088506]\n",
      "(3, 224) [87.8785703  17.09435581  5.14080106]\n",
      "(3, 224) [87.87877365 17.09467686  5.14071621]\n",
      "(3, 224) [87.8788339  17.09493736  5.14064124]\n",
      "(3, 224) [87.87884083 17.09525557  5.14054576]\n",
      "(3, 224) [87.8789223  17.09563069  5.14043749]\n",
      "(3, 224) [87.87900871 17.09605005  5.14031618]\n",
      "(3, 224) [87.87905277 17.0964547   5.14019672]\n",
      "(3, 224) [87.87952491 17.09691084  5.14008685]\n",
      "(3, 224) [87.87974174 17.09739203  5.13995444]\n",
      "(3, 224) [87.87988528 17.09782292  5.13983293]\n",
      "(3, 224) [87.88037057 17.0982952   5.13971904]\n",
      "(3, 224) [87.88085468 17.09877426  5.13960307]\n",
      "(3, 224) [87.88154781 17.09926003  5.13949729]\n",
      "(3, 224) [87.88197495 17.09971624  5.13938481]\n",
      "(3, 224) [87.88244205 17.10015016  5.13928137]\n",
      "(3, 224) [87.88282534 17.10055161  5.13918288]\n",
      "(3, 224) [87.8835324  17.10096816  5.1390988 ]\n",
      "(3, 224) [87.88418799 17.10141539  5.13900254]\n",
      "(3, 224) [87.88502237 17.10188324  5.13891057]\n",
      "(3, 224) [87.88635087 17.1023299   5.13885391]\n",
      "(3, 224) [87.88753358 17.10277405  5.13878948]\n",
      "(3, 224) [87.88829103 17.10314824  5.13872131]\n",
      "(3, 224) [87.88937065 17.10351436  5.13867446]\n",
      "(3, 224) [87.89061303 17.10390049  5.13863104]\n",
      "(3, 224) [87.89197342 17.10421255  5.1386168 ]\n",
      "(3, 224) [87.89319063 17.10452628  5.1385937 ]\n",
      "(3, 224) [87.89432865 17.10480509  5.13857648]\n",
      "(3, 224) [87.89523218 17.10506518  5.13855119]\n",
      "(3, 224) [87.89630093 17.10535963  5.1385252 ]\n",
      "(3, 224) [87.89766309 17.10562166  5.13852614]\n",
      "(3, 224) [87.89888711 17.10589859  5.13851448]\n",
      "(3, 224) [87.89990743 17.10618116  5.13848919]\n",
      "(3, 224) [87.90106254 17.10646101  5.13847261]\n",
      "(3, 224) [87.90246252 17.10677273  5.13846072]\n",
      "(3, 224) [87.9035811  17.1071183   5.13842219]\n",
      "(3, 224) [87.90498322 17.10739324  5.13842151]\n",
      "(3, 224) [87.90636062 17.1077176   5.13840456]\n",
      "(3, 224) [87.90765685 17.10803397  5.13838526]\n",
      "(3, 224) [87.90883449 17.10825116  5.1383889 ]\n",
      "(3, 224) [87.9100833  17.10847343  5.1383952 ]\n",
      "(3, 224) [87.9116127  17.10862486  5.13843916]\n",
      "(3, 224) [87.91279517 17.10872484  5.13847826]\n",
      "(3, 224) [87.91376922 17.10887008  5.13849161]\n",
      "(3, 224) [87.9148743  17.1090078   5.13851488]\n",
      "(3, 224) [87.91620597 17.10920416  5.13853376]\n",
      "(3, 224) [87.91755364 17.10935818  5.13856629]\n",
      "(3, 224) [87.91859026 17.10952426  5.13857703]\n",
      "(3, 224) [87.91987339 17.10974983  5.13858431]\n",
      "(3, 224) [87.92099962 17.10996125  5.13858669]\n",
      "(3, 224) [87.92243316 17.11013312  5.13861889]\n",
      "(3, 224) [87.92363496 17.1103076   5.13863675]\n",
      "(3, 224) [87.92467849 17.11053347  5.13862997]\n",
      "(3, 224) [87.92588375 17.11076302  5.1386315 ]\n",
      "(3, 224) [87.92713181 17.11096207  5.13864469]\n",
      "(3, 224) [87.92854621 17.11113659  5.13867498]\n",
      "(3, 224) [87.9300262  17.11131882  5.13870677]\n",
      "(3, 224) [87.93133744 17.11149221  5.13873137]\n",
      "(3, 224) [87.93244661 17.1116542   5.13874756]\n",
      "(3, 224) [87.93353643 17.11184456  5.13875413]\n",
      "(3, 224) [87.93472531 17.11196984  5.13878601]\n",
      "(3, 224) [87.9359632  17.11210093  5.13881902]\n",
      "(3, 224) [87.93692904 17.1122264   5.13883781]\n",
      "(3, 224) [87.93766282 17.11239273  5.13883078]\n",
      "(3, 224) [87.93838487 17.11255164  5.13882528]\n",
      "(3, 224) [87.9393569  17.11269772  5.13883824]\n",
      "(3, 224) [87.94016264 17.11279557  5.13885596]\n",
      "(3, 224) [87.94073189 17.11289552  5.13885923]\n",
      "(3, 224) [87.94153707 17.11299809  5.13887551]\n",
      "(3, 224) [87.94232864 17.11308688  5.13889512]\n",
      "(3, 224) [87.94294861 17.11319303  5.1388995 ]\n",
      "(3, 224) [87.94372683 17.11328905  5.13891617]\n",
      "(3, 224) [87.94468129 17.11345004  5.13892363]\n",
      "(3, 224) [87.94526249 17.11355928  5.13892481]\n",
      "(3, 224) [87.94590123 17.11365564  5.13893323]\n",
      "(3, 224) [87.94648917 17.1137605   5.13893612]\n",
      "(3, 224) [87.9471916 17.1138734  5.1389433]\n",
      "(3, 224) [87.94776786 17.11397182  5.13894746]\n",
      "(3, 224) [87.94855516 17.11405257  5.13896924]\n",
      "(3, 224) [87.9491907  17.11416444  5.13897281]\n",
      "(3, 224) [87.94993311 17.11432324  5.13896855]\n",
      "(3, 224) [87.95056398 17.11447943  5.13895856]\n",
      "(3, 224) [87.95133391 17.11461815  5.13896194]\n",
      "(3, 224) [87.95232743 17.11474541  5.13898181]\n",
      "(3, 224) [87.95326688 17.11488493  5.13899485]\n",
      "(3, 224) [87.95414055 17.11503656  5.1390004 ]\n",
      "(3, 224) [87.95505318 17.1151961   5.13900586]\n",
      "(3, 224) [87.95572235 17.11531519  5.13900922]\n",
      "(3, 224) [87.95624909 17.11540368  5.13901344]\n",
      "(3, 224) [87.9564331  17.11553607  5.1389845 ]\n",
      "(3, 224) [87.95675458 17.1156807   5.13895989]\n",
      "(3, 224) [87.95706254 17.11581395  5.13893792]\n",
      "(3, 224) [87.95748426 17.11593827  5.13892527]\n",
      "(3, 224) [87.95773924 17.11608131  5.13889727]\n",
      "(3, 224) [87.95780413 17.11622097  5.13885918]\n",
      "(3, 224) [87.9583381  17.11630665  5.13886466]\n",
      "(3, 224) [87.95860996 17.1163842   5.13885727]\n",
      "(3, 224) [87.95916965 17.11647221  5.13886356]\n",
      "(3, 224) [87.9596292  17.11658402  5.13885685]\n",
      "(3, 224) [87.96050497 17.11671894  5.13886752]\n",
      "(3, 224) [87.96138195 17.11685769  5.13887711]\n",
      "(3, 224) [87.96234135 17.11702193  5.13888386]\n",
      "(3, 224) [87.96304616 17.11719432  5.1388733 ]\n",
      "(3, 224) [87.96374392 17.11737467  5.13885998]\n",
      "(3, 224) [87.96443528 17.11753054  5.1388536 ]\n",
      "(3, 224) [87.96550889 17.1176966   5.13886648]\n",
      "(3, 224) [87.96669824 17.11782154  5.13889846]\n",
      "(3, 224) [87.96749408 17.11796522  5.13890183]\n",
      "(3, 224) [87.96819072 17.11814436  5.13888875]\n",
      "(3, 224) [87.9690897  17.11828305  5.13889963]\n",
      "(3, 224) [87.96988698 17.11841376  5.13890696]\n",
      "(3, 224) [87.97073501 17.1185263   5.13892271]\n",
      "(3, 224) [87.97158705 17.11859031  5.13895327]\n",
      "(3, 224) [87.97221929 17.11865129  5.13897189]\n",
      "(3, 224) [87.97307247 17.11868491  5.13901165]\n",
      "(3, 224) [87.97351886 17.11865702  5.13904611]\n",
      "(3, 224) [87.97427122 17.11861451  5.13910281]\n",
      "(3, 224) [87.97476846 17.11861367  5.13913212]\n",
      "(3, 224) [87.97504665 17.11860659  5.1391505 ]\n",
      "(3, 224) [87.97535701 17.1186043   5.13916932]\n",
      "(3, 224) [87.97595315 17.11858471  5.13921004]\n",
      "(3, 224) [87.97647862 17.11856475  5.13924675]\n",
      "(3, 224) [87.9769474  17.11854123  5.13928122]\n",
      "(3, 224) [87.97739845 17.11853897  5.13930826]\n",
      "(3, 224) [87.97796882 17.11852465  5.13934589]\n",
      "(3, 224) [87.97835392 17.11851622  5.13937092]\n",
      "(3, 224) [87.97902538 17.11852192  5.13940845]\n",
      "(3, 224) [87.97965521 17.1185441   5.13943859]\n",
      "(3, 224) [87.98044216 17.11856872  5.13947718]\n",
      "(3, 224) [87.98097591 17.11856595  5.1395092 ]\n",
      "(3, 224) [87.98161339 17.11858813  5.13953979]\n",
      "(3, 224) [87.98252235 17.11857193  5.13959777]\n",
      "(3, 224) [87.98361255 17.11852918  5.13967431]\n",
      "(3, 224) [87.98462991 17.11848969  5.13974563]\n",
      "(3, 224) [87.98548267 17.11848974  5.13979546]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  5%|███▋                                                                       | 3747/76339 [00:01<00:33, 2197.43it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.98626    17.11849844  5.13983829]\n",
      "(3, 224) [87.98684836 17.11851799  5.13986681]\n",
      "(3, 224) [87.98744377 17.11856797  5.13988659]\n",
      "(3, 224) [87.98770073 17.11861173  5.13988846]\n",
      "(3, 224) [87.98781173 17.11862581  5.13989072]\n",
      "(3, 224) [87.9877023  17.11857103  5.13990078]\n",
      "(3, 224) [87.98755887 17.1184849   5.13991826]\n",
      "(3, 224) [87.98745182 17.11844475  5.13992405]\n",
      "(3, 224) [87.98735274 17.11832395  5.13995453]\n",
      "(3, 224) [87.98725021 17.11827018  5.13996469]\n",
      "(3, 224) [87.9872782  17.1182293   5.13997859]\n",
      "(3, 224) [87.98695681 17.11815752  5.13998138]\n",
      "(3, 224) [87.98675421 17.11813769  5.1399755 ]\n",
      "(3, 224) [87.98631383 17.11807649  5.13996817]\n",
      "(3, 224) [87.98611763 17.11797264  5.13998797]\n",
      "(3, 224) [87.98550467 17.11786198  5.13998545]\n",
      "(3, 224) [87.98501755 17.11778042  5.13998151]\n",
      "(3, 224) [87.98466895 17.11778862  5.13995868]\n",
      "(3, 224) [87.9844041 17.1177354  5.1399592]\n",
      "(3, 224) [87.98413574 17.11777299  5.13993222]\n",
      "(3, 224) [87.98372966 17.11783833  5.13988884]\n",
      "(3, 224) [87.98351607 17.11788723  5.13986166]\n",
      "(3, 224) [87.98309286 17.11794827  5.13981858]\n",
      "(3, 224) [87.98289525 17.11796285  5.13980264]\n",
      "(3, 224) [87.9824093  17.11796227  5.1397744 ]\n",
      "(3, 224) [87.98202154 17.11802337  5.13973338]\n",
      "(3, 224) [87.9814891  17.11807871  5.13968562]\n",
      "(3, 224) [87.9808765  17.11811202  5.13963978]\n",
      "(3, 224) [87.98039415 17.11810599  5.1396134 ]\n",
      "(3, 224) [87.97997552 17.11809925  5.13959095]\n",
      "(3, 224) [87.97958434 17.11811273  5.13956402]\n",
      "(3, 224) [87.97950621 17.11811097  5.13955998]\n",
      "(3, 224) [87.97950714 17.11808238  5.13956864]\n",
      "(3, 224) [87.97972196 17.11803827  5.13959449]\n",
      "(3, 224) [87.98015085 17.11799008  5.13963408]\n",
      "(3, 224) [87.98081177 17.11797894  5.13967608]\n",
      "(3, 224) [87.98146979 17.11796353  5.1397192 ]\n",
      "(3, 224) [87.98148873 17.11805319  5.13969332]\n",
      "(3, 224) [87.98196041 17.1181217   5.13970029]\n",
      "(3, 224) [87.98232734 17.1181984   5.13969866]\n",
      "(3, 224) [87.9822473  17.11823234  5.13968377]\n",
      "(3, 224) [87.98233293 17.11826086  5.1396802 ]\n",
      "(3, 224) [87.98242034 17.11830025  5.13967345]\n",
      "(3, 224) [87.9824345  17.11833697  5.13966323]\n",
      "(3, 224) [87.98246765 17.11834223  5.13966359]\n",
      "(3, 224) [87.98266615 17.11836189  5.13966928]\n",
      "(3, 224) [87.98277454 17.11836496  5.1396747 ]\n",
      "(3, 224) [87.9828355  17.11836101  5.13967945]\n",
      "(3, 224) [87.98294875 17.11840636  5.13967242]\n",
      "(3, 224) [87.98307823 17.118408    5.1396795 ]\n",
      "(3, 224) [87.98339646 17.11843827  5.13968901]\n",
      "(3, 224) [87.98338599 17.11843996  5.13968789]\n",
      "(3, 224) [87.98351008 17.11842399  5.13969996]\n",
      "(3, 224) [87.98362968 17.11837423  5.13972194]\n",
      "(3, 224) [87.98393851 17.11830998  5.13975933]\n",
      "(3, 224) [87.98418248 17.11818795  5.13981031]\n",
      "(3, 224) [87.98453032 17.11810047  5.13985699]\n",
      "(3, 224) [87.98494652 17.11801358  5.13990749]\n",
      "(3, 224) [87.98538092 17.1179815   5.13994257]\n",
      "(3, 224) [87.98576206 17.11790764  5.1399871 ]\n",
      "(3, 224) [87.98637452 17.11783385  5.14004515]\n",
      "(3, 224) [87.98674885 17.11777733  5.14008405]\n",
      "(3, 224) [87.98709348 17.11766867  5.14013691]\n",
      "(3, 224) [87.98721043 17.11755857  5.14017689]\n",
      "(3, 224) [87.98757294 17.11744552  5.1402321 ]\n",
      "(3, 224) [87.98795813 17.11731698  5.14029336]\n",
      "(3, 224) [87.9882258  17.11720044  5.14034415]\n",
      "(3, 224) [87.98835381 17.11709847  5.14038235]\n",
      "(3, 224) [87.98870574 17.11700439  5.14043127]\n",
      "(3, 224) [87.98882165 17.11690776  5.14046712]\n",
      "(3, 224) [87.98868387 17.11683015  5.14048241]\n",
      "(3, 224) [87.98840481 17.11673006  5.14049619]\n",
      "(3, 224) [87.98834818 17.11663508  5.14052146]\n",
      "(3, 224) [87.98796706 17.11654434  5.14052646]\n",
      "(3, 224) [87.98780365 17.11647269  5.14053846]\n",
      "(3, 224) [87.98746657 17.11638816  5.14054418]\n",
      "(3, 224) [87.9872722  17.11633295  5.14054944]\n",
      "(3, 224) [87.98723622 17.11629066  5.14056005]\n",
      "(3, 224) [87.98680839 17.11622595  5.14055449]\n",
      "(3, 224) [87.98653888 17.11614986  5.14056162]\n",
      "(3, 224) [87.98616616 17.11606054  5.14056669]\n",
      "(3, 224) [87.98577511 17.11599076  5.14056482]\n",
      "(3, 224) [87.98548147 17.11594308  5.14056199]\n",
      "(3, 224) [87.98507454 17.11589978  5.14055121]\n",
      "(3, 224) [87.98495112 17.11586378  5.14055482]\n",
      "(3, 224) [87.98472959 17.11583511  5.14055049]\n",
      "(3, 224) [87.98459706 17.11581307  5.14054937]\n",
      "(3, 224) [87.98464317 17.11582029  5.14054989]\n",
      "(3, 224) [87.98467035 17.11587645  5.14053461]\n",
      "(3, 224) [87.98485042 17.11588942  5.14054124]\n",
      "(3, 224) [87.98512333 17.11591772  5.14054869]\n",
      "(3, 224) [87.98505026 17.11591576  5.14054501]\n",
      "(3, 224) [87.98500942 17.11596066  5.14052914]\n",
      "(3, 224) [87.98477093 17.11598611  5.14050758]\n",
      "(3, 224) [87.98465525 17.11600652  5.14049471]\n",
      "(3, 224) [87.98455829 17.11597678  5.14049796]\n",
      "(3, 224) [87.98438868 17.11599962  5.14048121]\n",
      "(3, 224) [87.98364609 17.1159624   5.140449  ]\n",
      "(3, 224) [87.98317625 17.11593997  5.14042829]\n",
      "(3, 224) [87.98284943 17.11588357  5.14042612]\n",
      "(3, 224) [87.98234402 17.11579972  5.14042174]\n",
      "(3, 224) [87.98197322 17.11571935  5.14042418]\n",
      "(3, 224) [87.98129489 17.1156442   5.1404071 ]\n",
      "(3, 224) [87.9806275  17.11556218  5.14039272]\n",
      "(3, 224) [87.98027024 17.11548647  5.14039456]\n",
      "(3, 224) [87.98010121 17.11539312  5.1404127 ]\n",
      "(3, 224) [87.97982919 17.11527444  5.14043244]\n",
      "(3, 224) [87.97958129 17.11519607  5.14044146]\n",
      "(3, 224) [87.97936893 17.11506672  5.14046784]\n",
      "(3, 224) [87.9789218  17.11500966  5.14045884]\n",
      "(3, 224) [87.97849866 17.11493159  5.14045754]\n",
      "(3, 224) [87.97856649 17.11484427  5.14048768]\n",
      "(3, 224) [87.97838185 17.11475855  5.14050258]\n",
      "(3, 224) [87.97813706 17.11468491  5.14051037]\n",
      "(3, 224) [87.9777273  17.11468563  5.14048623]\n",
      "(3, 224) [87.97734136 17.11466763  5.1404691 ]\n",
      "(3, 224) [87.97717369 17.11464972  5.14046468]\n",
      "(3, 224) [87.97706767 17.11462072  5.14046718]\n",
      "(3, 224) [87.97672668 17.11464097  5.1404412 ]\n",
      "(3, 224) [87.97619365 17.11463524  5.14041179]\n",
      "(3, 224) [87.97589483 17.11464079  5.14039268]\n",
      "(3, 224) [87.97531993 17.11462788  5.14036297]\n",
      "(3, 224) [87.97469854 17.11465209  5.14031943]\n",
      "(3, 224) [87.97381043 17.11470131  5.14025281]\n",
      "(3, 224) [87.97316766 17.11472792  5.14020731]\n",
      "(3, 224) [87.97208956 17.11476033  5.14013463]\n",
      "(3, 224) [87.97154838 17.11474665  5.14010713]\n",
      "(3, 224) [87.97095031 17.11472902  5.1400775 ]\n",
      "(3, 224) [87.97043699 17.1146782   5.14006276]\n",
      "(3, 224) [87.9698332  17.11464165  5.14003846]\n",
      "(3, 224) [87.96901364 17.11459458  5.14000472]\n",
      "(3, 224) [87.96869635 17.11454655  5.14000059]\n",
      "(3, 224) [87.96845296 17.1145137   5.13999623]\n",
      "(3, 224) [87.9680337  17.11448795  5.13997946]\n",
      "(3, 224) [87.96722679 17.11444699  5.13994464]\n",
      "(3, 224) [87.9666158  17.11437044  5.13993192]\n",
      "(3, 224) [87.96623165 17.11430951  5.13992776]\n",
      "(3, 224) [87.96564734 17.11423483  5.13991604]\n",
      "(3, 224) [87.96534188 17.11415669  5.13992163]\n",
      "(3, 224) [87.96479045 17.11407735  5.13991323]\n",
      "(3, 224) [87.96432048 17.11400277  5.13990816]\n",
      "(3, 224) [87.96394462 17.11389301  5.13991913]\n",
      "(3, 224) [87.9633539  17.11380105  5.13991221]\n",
      "(3, 224) [87.96286721 17.11371617  5.13990925]\n",
      "(3, 224) [87.96238707 17.11363379  5.13990593]\n",
      "(3, 224) [87.96174194 17.11358789  5.13988202]\n",
      "(3, 224) [87.96106562 17.11352887  5.13986023]\n",
      "(3, 224) [87.96060689 17.11346233  5.1398534 ]\n",
      "(3, 224) [87.96029082 17.11337669  5.13986063]\n",
      "(3, 224) [87.95980421 17.11333003  5.13984621]\n",
      "(3, 224) [87.95950496 17.11325222  5.13985208]\n",
      "(3, 224) [87.95917613 17.11317869  5.13985494]\n",
      "(3, 224) [87.95930942 17.11313378  5.1398762 ]\n",
      "(3, 224) [87.95904438 17.11309143  5.13987342]\n",
      "(3, 224) [87.95866814 17.1130495   5.13986403]\n",
      "(3, 224) [87.95830287 17.11298659  5.13986156]\n",
      "(3, 224) [87.95803018 17.11290939  5.1398688 ]\n",
      "(3, 224) [87.95757182 17.11284867  5.13986024]\n",
      "(3, 224) [87.95697058 17.11282062  5.13983353]\n",
      "(3, 224) [87.95674332 17.11279173  5.13982892]\n",
      "(3, 224) [87.95644265 17.11278737  5.13981266]\n",
      "(3, 224) [87.95585286 17.11271463  5.13980003]\n",
      "(3, 224) [87.9554261 17.112701   5.1397792]\n",
      "(3, 224) [87.95502486 17.11270418  5.13975481]\n",
      "(3, 224) [87.95484352 17.11272883  5.13973683]\n",
      "(3, 224) [87.95439894 17.11276038  5.13970142]\n",
      "(3, 224) [87.95409183 17.11275287  5.13968573]\n",
      "(3, 224) [87.95363578 17.11273693  5.13966388]\n",
      "(3, 224) [87.95328781 17.11271594  5.13964985]\n",
      "(3, 224) [87.95259909 17.11267289  5.13962253]\n",
      "(3, 224) [87.95227593 17.11262879  5.13961687]\n",
      "(3, 224) [87.9516264  17.1125591   5.13959983]\n",
      "(3, 224) [87.95086777 17.11249357  5.13957517]\n",
      "(3, 224) [87.95024656 17.11243709  5.13955582]\n",
      "(3, 224) [87.94948631 17.11237795  5.13952915]\n",
      "(3, 224) [87.94867168 17.11230028  5.13950486]\n",
      "(3, 224) [87.94795799 17.11224229  5.13948057]\n",
      "(3, 224) [87.94716475 17.11219197  5.13944933]\n",
      "(3, 224) [87.94646563 17.11207312  5.13944411]\n",
      "(3, 224) [87.94568758 17.11197338  5.13942857]\n",
      "(3, 224) [87.94475951 17.1118653   5.13940677]\n",
      "(3, 224) [87.94412954 17.11175826  5.13940208]\n",
      "(3, 224) [87.94342124 17.11164094  5.13939587]\n",
      "(3, 224) [87.94271999 17.11148574  5.13940144]\n",
      "(3, 224) [87.9419087  17.11136819  5.13938931]\n",
      "(3, 224) [87.94114916 17.11126467  5.13937599]\n",
      "(3, 224) [87.94020129 17.11114077  5.1393578 ]\n",
      "(3, 224) [87.93939044 17.11098324  5.13935769]\n",
      "(3, 224) [87.93828563 17.11080439  5.13934683]\n",
      "(3, 224) [87.93713134 17.11063278  5.13933089]\n",
      "(3, 224) [87.93570216 17.11044958  5.13930237]\n",
      "(3, 224) [87.93435497 17.11027021  5.13927747]\n",
      "(3, 224) [87.93329843 17.11008171  5.13927228]\n",
      "(3, 224) [87.9320578  17.10987262  5.13926253]\n",
      "(3, 224) [87.93093369 17.10967391  5.13925649]\n",
      "(3, 224) [87.92947135 17.10952531  5.13921565]\n",
      "(3, 224) [87.92842221 17.10939623  5.13919309]\n",
      "(3, 224) [87.92722585 17.10925814  5.13916464]\n",
      "(3, 224) [87.92611449 17.10915195  5.13913159]\n",
      "(3, 224) [87.92519976 17.10905607  5.13910693]\n",
      "(3, 224) [87.92416181 17.10895577  5.1390764 ]\n",
      "(3, 224) [87.92301194 17.10890533  5.13902436]\n",
      "(3, 224) [87.92196165 17.10887085  5.13897334]\n",
      "(3, 224) [87.92062879 17.10886778  5.13889639]\n",
      "(3, 224) [87.91955316 17.10886709  5.13883374]\n",
      "(3, 224) [87.91840964 17.10884922  5.13877229]\n",
      "(3, 224) [87.91719535 17.10881828  5.13871062]\n",
      "(3, 224) [87.91627608 17.10876319  5.13867344]\n",
      "(3, 224) [87.91533608 17.1087085   5.13863492]\n",
      "(3, 224) [87.91407908 17.10868758  5.13856772]\n",
      "(3, 224) [87.91305554 17.10864298  5.13852127]\n",
      "(3, 224) [87.91199023 17.10859469  5.1384735 ]\n",
      "(3, 224) [87.91100603 17.1085636   5.1384253 ]\n",
      "(3, 224) [87.90996593 17.1085448   5.13837015]\n",
      "(3, 224) [87.908931   17.10850825  5.13832064]\n",
      "(3, 224) [87.90784987 17.10842912  5.1382812 ]\n",
      "(3, 224) [87.90655345 17.10830434  5.13824288]\n",
      "(3, 224) [87.90505556 17.10818619  5.1381908 ]\n",
      "(3, 224) [87.90385342 17.1080826   5.13815163]\n",
      "(3, 224) [87.90250812 17.1080001   5.13809775]\n",
      "(3, 224) [87.9009895  17.10789447  5.13804068]\n",
      "(3, 224) [87.89932404 17.10779856  5.1379721 ]\n",
      "(3, 224) [87.89771084 17.10771652  5.1379024 ]\n",
      "(3, 224) [87.89606131 17.10762491  5.13783345]\n",
      "(3, 224) [87.8944959  17.1075204   5.13777331]\n",
      "(3, 224) [87.89305176 17.10740924  5.13772225]\n",
      "(3, 224) [87.89146548 17.10727342  5.13767029]\n",
      "(3, 224) [87.89020208 17.10711723  5.13764333]\n",
      "(3, 224) [87.88890532 17.10696765  5.13761243]\n",
      "(3, 224) [87.88718755 17.10681843  5.13755679]\n",
      "(3, 224) [87.88554312 17.10667136  5.1375048 ]\n",
      "(3, 224) [87.88389947 17.10646745  5.13746993]\n",
      "(3, 224) [87.88223371 17.10633499  5.13741228]\n",
      "(3, 224) [87.8806731  17.10615757  5.13737433]\n",
      "(3, 224) [87.87876733 17.10597945  5.1373164 ]\n",
      "(3, 224) [87.87703339 17.10578576  5.13727317]\n",
      "(3, 224) [87.87506163 17.10559914  5.13721393]\n",
      "(3, 224) [87.87340846 17.10547603  5.13715422]\n",
      "(3, 224) [87.87179839 17.10542438  5.13707553]\n",
      "(3, 224) [87.87019121 17.10535994  5.13700085]\n",
      "(3, 224) [87.86844271 17.10526964  5.13692568]\n",
      "(3, 224) [87.86691533 17.10512283  5.13688045]\n",
      "(3, 224) [87.86533791 17.10499795  5.13682571]\n",
      "(3, 224) [87.86372034 17.10483224  5.13678087]\n",
      "(3, 224) [87.86215841 17.10465982  5.1367413 ]\n",
      "(3, 224) [87.86051971 17.10450468  5.13669206]\n",
      "(3, 224) [87.85913662 17.10435917  5.13665487]\n",
      "(3, 224) [87.8576212  17.10424592  5.13660025]\n",
      "(3, 224) [87.85665318 17.10412976  5.13657854]\n",
      "(3, 224) [87.85539502 17.10393185  5.13656441]\n",
      "(3, 224) [87.85439642 17.103777    5.13655252]\n",
      "(3, 224) [87.85335482 17.1036224   5.13653806]\n",
      "(3, 224) [87.85229177 17.1034735   5.13652064]\n",
      "(3, 224) [87.85104322 17.10330817  5.13649731]\n",
      "(3, 224) [87.85024331 17.10316797  5.13649268]\n",
      "(3, 224) [87.84920395 17.10306419  5.13646308]\n",
      "(3, 224) [87.84779909 17.10295323  5.13641423]\n",
      "(3, 224) [87.84619747 17.10286682  5.13634647]\n",
      "(3, 224) [87.84422432 17.10277535  5.13625849]\n",
      "(3, 224) [87.84226217 17.10264259  5.1361836 ]\n",
      "(3, 224) [87.8403311  17.10252148  5.13610702]\n",
      "(3, 224) [87.83895143 17.10235719  5.1360757 ]\n",
      "(3, 224) [87.83723971 17.10216077  5.13603463]\n",
      "(3, 224) [87.83556155 17.10198338  5.13598978]\n",
      "(3, 224) [87.83437796 17.1018366   5.13596466]\n",
      "(3, 224) [87.83277034 17.10167202  5.13592007]\n",
      "(3, 224) [87.83101728 17.10151463  5.13586483]\n",
      "(3, 224) [87.82967892 17.10138905  5.13582428]\n",
      "(3, 224) [87.82827749 17.10129906  5.13576933]\n",
      "(3, 224) [87.8265276  17.10119879  5.13569707]\n",
      "(3, 224) [87.82494645 17.10113473  5.1356238 ]\n",
      "(3, 224) [87.82367309 17.10107706  5.13556661]\n",
      "(3, 224) [87.82219326 17.1009896   5.13550631]\n",
      "(3, 224) [87.82101449 17.1008994   5.13546445]\n",
      "(3, 224) [87.81961719 17.10080933  5.13540975]\n",
      "(3, 224) [87.81840065 17.10072117  5.13536506]\n",
      "(3, 224) [87.81726262 17.10067717  5.13531168]\n",
      "(3, 224) [87.81593561 17.10063625  5.13524631]\n",
      "(3, 224) [87.81462052 17.10059526  5.13518167]\n",
      "(3, 224) [87.81306168 17.10054743  5.1351048 ]\n",
      "(3, 224) [87.81166134 17.10051609  5.13503225]\n",
      "(3, 224) [87.81044049 17.10047979  5.13497171]\n",
      "(3, 224) [87.80904828 17.10041929  5.13490841]\n",
      "(3, 224) [87.8075983  17.10036118  5.134841  ]\n",
      "(3, 224) [87.80604905 17.10029273  5.13477089]\n",
      "(3, 224) [87.80449841 17.10020378  5.13470687]\n",
      "(3, 224) [87.80274606 17.10013856  5.13462387]\n",
      "(3, 224) [87.80127797 17.10011435  5.1345452 ]\n",
      "(3, 224) [87.79969448 17.10007288  5.13446495]\n",
      "(3, 224) [87.79783923 17.10007046  5.134357  ]\n",
      "(3, 224) [87.79626377 17.10007561  5.13426316]\n",
      "(3, 224) [87.79478442 17.10005708  5.13418208]\n",
      "(3, 224) [87.79343923 17.09994189  5.13413799]\n",
      "(3, 224) [87.79311731 17.09982267  5.13415509]\n",
      "(3, 224) [87.79294057 17.09969691  5.13418265]\n",
      "(3, 224) [87.79241067 17.09947939  5.13421723]\n",
      "(3, 224) [87.7915117  17.09927658  5.13422574]\n",
      "(3, 224) [87.79079903 17.09914165  5.13422464]\n",
      "(3, 224) [87.78981345 17.09889899  5.13424006]\n",
      "(3, 224) [87.78909683 17.09867748  5.13426492]\n",
      "(3, 224) [87.78819634 17.09834809  5.13431163]\n",
      "(3, 224) [87.78760125 17.09797661  5.13438895]\n",
      "(3, 224) [87.78687882 17.09762778  5.13445193]\n",
      "(3, 224) [87.78605592 17.09733796  5.13449117]\n",
      "(3, 224) [87.78533248 17.09707671  5.13452762]\n",
      "(3, 224) [87.78454736 17.09679817  5.13456568]\n",
      "(3, 224) [87.78378178 17.09652348  5.13460367]\n",
      "(3, 224) [87.78309655 17.09615853  5.13467369]\n",
      "(3, 224) [87.78242461 17.09587696  5.13471926]\n",
      "(3, 224) [87.78150118 17.09560026  5.13474859]\n",
      "(3, 224) [87.78076219 17.09527689  5.13480283]\n",
      "(3, 224) [87.78000911 17.09496781  5.1348519 ]\n",
      "(3, 224) [87.77902619 17.09463509  5.13489454]\n",
      "(3, 224) [87.77812646 17.09430893  5.1349401 ]\n",
      "(3, 224) [87.77696201 17.09392919  5.13498632]\n",
      "(3, 224) [87.7761198  17.09360223  5.13503546]\n",
      "(3, 224) [87.77516883 17.09326451  5.13508141]\n",
      "(3, 224) [87.77425731 17.09285593  5.135151  ]\n",
      "(3, 224) [87.77330591 17.09242255  5.13522573]\n",
      "(3, 224) [87.77226679 17.09201688  5.13528701]\n",
      "(3, 224) [87.77127439 17.09160075  5.13535413]\n",
      "(3, 224) [87.77036143 17.09124744  5.13540689]\n",
      "(3, 224) [87.76916417 17.09088627  5.13544536]\n",
      "(3, 224) [87.7681705  17.09058245  5.13547859]\n",
      "(3, 224) [87.7671581  17.09027297  5.13551239]\n",
      "(3, 224) [87.7661922  17.08995414  5.13555175]\n",
      "(3, 224) [87.76524781 17.08961176  5.13559941]\n",
      "(3, 224) [87.76427409 17.08932166  5.13562963]\n",
      "(3, 224) [87.76298011 17.08904     5.13563859]\n",
      "(3, 224) [87.76160932 17.08880389  5.13562937]\n",
      "(3, 224) [87.76028152 17.08853713  5.13563193]\n",
      "(3, 224) [87.75913384 17.0882201   5.13566009]\n",
      "(3, 224) [87.75777635 17.08794329  5.13566389]\n",
      "(3, 224) [87.75652256 17.08762449  5.13568633]\n",
      "(3, 224) [87.75538708 17.08731679  5.13571238]\n",
      "(3, 224) [87.75390914 17.0870035   5.13572011]\n",
      "(3, 224) [87.75258514 17.08665004  5.13574892]\n",
      "(3, 224) [87.75114006 17.08632904  5.13576087]\n",
      "(3, 224) [87.75001846 17.08596587  5.13580441]\n",
      "(3, 224) [87.74886329 17.08558679  5.1358508 ]\n",
      "(3, 224) [87.74760153 17.08520877  5.13589066]\n",
      "(3, 224) [87.74650515 17.08485695  5.13593231]\n",
      "(3, 224) [87.745455   17.08448016  5.1359841 ]\n",
      "(3, 224) [87.74431698 17.08416869  5.13601107]\n",
      "(3, 224) [87.74293525 17.08383149  5.13603156]\n",
      "(3, 224) [87.74206929 17.08351325  5.13607655]\n",
      "(3, 224) [87.74114782 17.08314308  5.13613387]\n",
      "(3, 224) [87.7404799  17.08276984  5.13620694]\n",
      "(3, 224) [87.73951164 17.0824178   5.13625601]\n",
      "(3, 224) [87.73896862 17.08210739  5.13631745]\n",
      "(3, 224) [87.73768334 17.08178534  5.13633899]\n",
      "(3, 224) [87.73652236 17.0814829   5.13636191]\n",
      "(3, 224) [87.73526257 17.08121691  5.13636809]\n",
      "(3, 224) [87.7342865  17.08093061  5.13639695]\n",
      "(3, 224) [87.7331723  17.08064222  5.13641832]\n",
      "(3, 224) [87.73201198 17.08037526  5.13643063]\n",
      "(3, 224) [87.73083658 17.08010962  5.13644167]\n",
      "(3, 224) [87.72987392 17.0798248   5.13647091]\n",
      "(3, 224) [87.72885619 17.07953853  5.13649735]\n",
      "(3, 224) [87.7275609  17.07928088  5.13649899]\n",
      "(3, 224) [87.72628066 17.07902129  5.13650208]\n",
      "(3, 224) [87.72496993 17.07876698  5.1365018 ]\n",
      "(3, 224) [87.72347573 17.07847103  5.13650331]\n",
      "(3, 224) [87.7220013  17.07819697  5.13649939]\n",
      "(3, 224) [87.72057729 17.07792784  5.13649695]\n",
      "(3, 224) [87.71921096 17.07767401  5.13649328]\n",
      "(3, 224) [87.71802646 17.07741964  5.13650042]\n",
      "(3, 224) [87.71681018 17.07717977  5.13650135]\n",
      "(3, 224) [87.71546522 17.07694819  5.13649226]\n",
      "(3, 224) [87.71421576 17.076658    5.13650637]\n",
      "(3, 224) [87.71307484 17.07635522  5.13653061]\n",
      "(3, 224) [87.71153883 17.07609165  5.13651993]\n",
      "(3, 224) [87.70998004 17.0758365   5.13650539]\n",
      "(3, 224) [87.70859366 17.07554752  5.1365111 ]\n",
      "(3, 224) [87.70707235 17.07530278  5.13649564]\n",
      "(3, 224) [87.70562876 17.07508912  5.13647536]\n",
      "(3, 224) [87.70417067 17.07483558  5.13646626]\n",
      "(3, 224) [87.70293187 17.07457834  5.13647108]\n",
      "(3, 224) [87.70180145 17.07432323  5.13648162]\n",
      "(3, 224) [87.70069504 17.0740852   5.13648842]\n",
      "(3, 224) [87.69941368 17.07386176  5.1364806 ]\n",
      "(3, 224) [87.69838405 17.07359428  5.13650074]\n",
      "(3, 224) [87.69729337 17.07329562  5.13652665]\n",
      "(3, 224) [87.69619564 17.07301851  5.1365457 ]\n",
      "(3, 224) [87.69498023 17.07272617  5.13656242]\n",
      "(3, 224) [87.69396723 17.07246157  5.13658266]\n",
      "(3, 224) [87.6928116  17.07213856  5.13661211]\n",
      "(3, 224) [87.69187865 17.07181123  5.13665585]\n",
      "(3, 224) [87.69087527 17.07150997  5.13668765]\n",
      "(3, 224) [87.68970299 17.07117681  5.13671906]\n",
      "(3, 224) [87.68884276 17.07088228  5.1367572 ]\n",
      "(3, 224) [87.6877698  17.07059029  5.13678213]\n",
      "(3, 224) [87.68670773 17.07029718  5.13680805]\n",
      "(3, 224) [87.6856594  17.07004299  5.13682301]\n",
      "(3, 224) [87.68460278 17.06977383  5.13684203]\n",
      "(3, 224) [87.68364312 17.06950322  5.13686716]\n",
      "(3, 224) [87.68266039 17.06924509  5.1368872 ]\n",
      "(3, 224) [87.68164607 17.06894121  5.13691916]\n",
      "(3, 224) [87.68053201 17.06859253  5.13695877]\n",
      "(3, 224) [87.67954112 17.06823555  5.1370081 ]\n",
      "(3, 224) [87.67853008 17.06784961  5.137065  ]\n",
      "(3, 224) [87.67751581 17.06748606  5.13711492]\n",
      "(3, 224) [87.67662488 17.06711943  5.13717302]\n",
      "(3, 224) [87.67579249 17.06673757  5.13723916]\n",
      "(3, 224) [87.67504893 17.06633147  5.13731782]\n",
      "(3, 224) [87.67395983 17.06591183  5.13738035]\n",
      "(3, 224) [87.67322774 17.06551815  5.13745596]\n",
      "(3, 224) [87.67230495 17.06517638  5.13750479]\n",
      "(3, 224) [87.67139505 17.06480947  5.13756199]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  5%|████                                                                       | 4187/76339 [00:01<00:33, 2148.24it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.67039978 17.06441959  5.13762108]\n",
      "(3, 224) [87.66951985 17.06404942  5.137681  ]\n",
      "(3, 224) [87.66847772 17.06369635  5.1377263 ]\n",
      "(3, 224) [87.66776288 17.06334639  5.13778988]\n",
      "(3, 224) [87.66701777 17.06298714  5.13785445]\n",
      "(3, 224) [87.6662586  17.0626354   5.13791588]\n",
      "(3, 224) [87.66566479 17.06229575  5.13798333]\n",
      "(3, 224) [87.66493006 17.06196824  5.13803888]\n",
      "(3, 224) [87.66411715 17.06168887  5.13807534]\n",
      "(3, 224) [87.6629887  17.06140159  5.1380957 ]\n",
      "(3, 224) [87.66214654 17.06105467  5.13815074]\n",
      "(3, 224) [87.66111362 17.06069831  5.1381975 ]\n",
      "(3, 224) [87.66021254 17.06032899  5.13825587]\n",
      "(3, 224) [87.6591938  17.05996677  5.13830523]\n",
      "(3, 224) [87.6578772  17.05961191  5.13833491]\n",
      "(3, 224) [87.6570072  17.05927605  5.1383851 ]\n",
      "(3, 224) [87.65626675 17.05893376  5.13844478]\n",
      "(3, 224) [87.65521327 17.05858251  5.1384888 ]\n",
      "(3, 224) [87.65460885 17.05818633  5.13857262]\n",
      "(3, 224) [87.65390635 17.05780439  5.13864644]\n",
      "(3, 224) [87.65277141 17.05742263  5.13869487]\n",
      "(3, 224) [87.65191279 17.05704813  5.13875727]\n",
      "(3, 224) [87.65095763 17.05669703  5.13880705]\n",
      "(3, 224) [87.649983   17.05632647  5.13886154]\n",
      "(3, 224) [87.64919769 17.0559838   5.1389187 ]\n",
      "(3, 224) [87.6483512  17.05565711  5.13896752]\n",
      "(3, 224) [87.64728021 17.05537319  5.13899022]\n",
      "(3, 224) [87.64629477 17.05506592  5.13902494]\n",
      "(3, 224) [87.6452369  17.05475649  5.13905603]\n",
      "(3, 224) [87.64432387 17.05444006  5.13909776]\n",
      "(3, 224) [87.64336722 17.05414657  5.13913006]\n",
      "(3, 224) [87.64288709 17.05388939  5.13917937]\n",
      "(3, 224) [87.6421366  17.05358911  5.13922581]\n",
      "(3, 224) [87.64147374 17.05329001  5.13927708]\n",
      "(3, 224) [87.64087497 17.05296286  5.13934054]\n",
      "(3, 224) [87.64016993 17.05267138  5.13938701]\n",
      "(3, 224) [87.63970459 17.05237962  5.13944761]\n",
      "(3, 224) [87.63903002 17.05208278  5.13949746]\n",
      "(3, 224) [87.63834588 17.05180263  5.13954172]\n",
      "(3, 224) [87.63794485 17.05151472  5.13960498]\n",
      "(3, 224) [87.63740369 17.05124067  5.13965583]\n",
      "(3, 224) [87.63712006 17.05097908  5.13971805]\n",
      "(3, 224) [87.63646    17.05070065  5.13976327]\n",
      "(3, 224) [87.63583968 17.05042839  5.13980895]\n",
      "(3, 224) [87.63567168 17.05016392  5.13987879]\n",
      "(3, 224) [87.63539976 17.04990023  5.13994229]\n",
      "(3, 224) [87.63513144 17.04962038  5.14001092]\n",
      "(3, 224) [87.6352095  17.04937036  5.14009086]\n",
      "(3, 224) [87.6350197  17.04911804  5.14015581]\n",
      "(3, 224) [87.63514352 17.04885855  5.14024129]\n",
      "(3, 224) [87.6350787  17.04861916  5.14030965]\n",
      "(3, 224) [87.63519008 17.04837958  5.14038839]\n",
      "(3, 224) [87.63520272 17.04818714  5.14044712]\n",
      "(3, 224) [87.63499622 17.04796981  5.1405005 ]\n",
      "(3, 224) [87.63477025 17.04776033  5.14055037]\n",
      "(3, 224) [87.63492549 17.04752837  5.14062938]\n",
      "(3, 224) [87.63467352 17.04731933  5.14067757]\n",
      "(3, 224) [87.6341899  17.0471077   5.14071296]\n",
      "(3, 224) [87.63409528 17.04690099  5.14076967]\n",
      "(3, 224) [87.63380889 17.0466794   5.1408196 ]\n",
      "(3, 224) [87.63352627 17.04646602  5.14086728]\n",
      "(3, 224) [87.63327295 17.04625735  5.14091524]\n",
      "(3, 224) [87.63294779 17.04606411  5.14095434]\n",
      "(3, 224) [87.63235447 17.04586249  5.14098031]\n",
      "(3, 224) [87.63194805 17.04568801  5.14100905]\n",
      "(3, 224) [87.631288   17.04549106  5.14102967]\n",
      "(3, 224) [87.63071077 17.04532455  5.141046  ]\n",
      "(3, 224) [87.62979589 17.04517115  5.14103857]\n",
      "(3, 224) [87.62917149 17.04504736  5.14103925]\n",
      "(3, 224) [87.62827128 17.04490566  5.14102916]\n",
      "(3, 224) [87.62729082 17.0447243   5.14102632]\n",
      "(3, 224) [87.62668678 17.04460811  5.14102589]\n",
      "(3, 224) [87.62619816 17.04448819  5.14103334]\n",
      "(3, 224) [87.6257446  17.04437182  5.14104177]\n",
      "(3, 224) [87.62531459 17.04425899  5.14105053]\n",
      "(3, 224) [87.62470021 17.04412964  5.14105345]\n",
      "(3, 224) [87.62386592 17.04399949  5.14104372]\n",
      "(3, 224) [87.62324362 17.04392021  5.14103111]\n",
      "(3, 224) [87.62264189 17.04385656  5.14101499]\n",
      "(3, 224) [87.62174484 17.04375155  5.140994  ]\n",
      "(3, 224) [87.62110205 17.04365283  5.14098603]\n",
      "(3, 224) [87.62038127 17.04351194  5.14098618]\n",
      "(3, 224) [87.61931028 17.04336819  5.14096665]\n",
      "(3, 224) [87.61847849 17.04328558  5.14094275]\n",
      "(3, 224) [87.61762959 17.04322394  5.14091154]\n",
      "(3, 224) [87.61691858 17.04314161  5.14089463]\n",
      "(3, 224) [87.6161149  17.04308681  5.14086403]\n",
      "(3, 224) [87.61551224 17.04298925  5.14085805]\n",
      "(3, 224) [87.61479147 17.04290451  5.1408413 ]\n",
      "(3, 224) [87.61425667 17.04283759  5.14083008]\n",
      "(3, 224) [87.61378796 17.04278837  5.14081742]\n",
      "(3, 224) [87.61310339 17.04273353  5.14079381]\n",
      "(3, 224) [87.61273404 17.04266966  5.14079138]\n",
      "(3, 224) [87.61233119 17.04256996  5.14079776]\n",
      "(3, 224) [87.6118175  17.04248274  5.14079389]\n",
      "(3, 224) [87.61132953 17.04238423  5.14079494]\n",
      "(3, 224) [87.61075928 17.04230213  5.14078623]\n",
      "(3, 224) [87.61012391 17.04221335  5.14077571]\n",
      "(3, 224) [87.6096396  17.04214185  5.14076884]\n",
      "(3, 224) [87.60928445 17.04206632  5.14077076]\n",
      "(3, 224) [87.6089309  17.04198796  5.14077361]\n",
      "(3, 224) [87.60888414 17.0419243   5.14079003]\n",
      "(3, 224) [87.60884901 17.04182577  5.14081761]\n",
      "(3, 224) [87.60870422 17.04178852  5.14082033]\n",
      "(3, 224) [87.60875552 17.04173582  5.14083918]\n",
      "(3, 224) [87.60868531 17.04168523  5.14085029]\n",
      "(3, 224) [87.60868172 17.04162602  5.14086789]\n",
      "(3, 224) [87.60837293 17.04166354  5.14083848]\n",
      "(3, 224) [87.60710004 17.04167212  5.14076127]\n",
      "(3, 224) [87.60588218 17.04165003  5.14069652]\n",
      "(3, 224) [87.60497365 17.04170829  5.14062563]\n",
      "(3, 224) [87.6041529  17.04176878  5.14055923]\n",
      "(3, 224) [87.60344677 17.04175134  5.14052308]\n",
      "(3, 224) [87.60260303 17.04179142  5.14046147]\n",
      "(3, 224) [87.60154318 17.04183783  5.14038526]\n",
      "(3, 224) [87.60070132 17.04197215  5.14029523]\n",
      "(3, 224) [87.59965413 17.04211865  5.14018943]\n",
      "(3, 224) [87.59848265 17.04225833  5.14007844]\n",
      "(3, 224) [87.59742764 17.04230954  5.14000102]\n",
      "(3, 224) [87.59636628 17.04234345  5.13992846]\n",
      "(3, 224) [87.59533824 17.04237859  5.13985748]\n",
      "(3, 224) [87.59463809 17.04239075  5.1398127 ]\n",
      "(3, 224) [87.5936819  17.04244897  5.1397389 ]\n",
      "(3, 224) [87.59257391 17.04242319  5.13968164]\n",
      "(3, 224) [87.5918384  17.04241196  5.13964185]\n",
      "(3, 224) [87.59087391 17.04244729  5.13957453]\n",
      "(3, 224) [87.58996502 17.04243619  5.13952452]\n",
      "(3, 224) [87.58915147 17.04238968  5.1394908 ]\n",
      "(3, 224) [87.58826225 17.0423306   5.13945644]\n",
      "(3, 224) [87.58745168 17.04234361  5.13940491]\n",
      "(3, 224) [87.58658606 17.04229038  5.13937016]\n",
      "(3, 224) [87.5856463  17.04221164  5.13933877]\n",
      "(3, 224) [87.58499908 17.04218659  5.13930832]\n",
      "(3, 224) [87.58414317 17.04218763  5.13925775]\n",
      "(3, 224) [87.58349317 17.04220385  5.13921468]\n",
      "(3, 224) [87.58294629 17.04222558  5.13917601]\n",
      "(3, 224) [87.58257184 17.04219097  5.13916447]\n",
      "(3, 224) [87.58214882 17.04216663  5.13914699]\n",
      "(3, 224) [87.58135809 17.04214107  5.1391083 ]\n",
      "(3, 224) [87.58080423 17.04209795  5.1390888 ]\n",
      "(3, 224) [87.58032686 17.0420741   5.13906798]\n",
      "(3, 224) [87.5797736  17.04204472  5.13904438]\n",
      "(3, 224) [87.57919126 17.04198652  5.13902775]\n",
      "(3, 224) [87.5787181  17.04192953  5.13901717]\n",
      "(3, 224) [87.57848127 17.04179349  5.13904431]\n",
      "(3, 224) [87.57807716 17.04170928  5.139046  ]\n",
      "(3, 224) [87.57756532 17.04160123  5.13904857]\n",
      "(3, 224) [87.57715945 17.04141991  5.13907949]\n",
      "(3, 224) [87.57685601 17.04127939  5.13910408]\n",
      "(3, 224) [87.57647421 17.04114251  5.13912299]\n",
      "(3, 224) [87.57611728 17.04095936  5.13915735]\n",
      "(3, 224) [87.57561376 17.04078827  5.13917947]\n",
      "(3, 224) [87.57522161 17.040594    5.13921512]\n",
      "(3, 224) [87.57469885 17.0404241   5.13923575]\n",
      "(3, 224) [87.57428786 17.040257    5.13926212]\n",
      "(3, 224) [87.57392753 17.04011926  5.13928259]\n",
      "(3, 224) [87.57346253 17.03992451  5.13931415]\n",
      "(3, 224) [87.57298479 17.03974192  5.13934127]\n",
      "(3, 224) [87.57276445 17.03950912  5.13939864]\n",
      "(3, 224) [87.57252253 17.03931354  5.13944351]\n",
      "(3, 224) [87.57184934 17.03911808  5.13946302]\n",
      "(3, 224) [87.57135035 17.03891529  5.13949499]\n",
      "(3, 224) [87.57090686 17.03857858  5.1395709 ]\n",
      "(3, 224) [87.57085384 17.03829175  5.13965454]\n",
      "(3, 224) [87.57049751 17.03795839  5.13973444]\n",
      "(3, 224) [87.57030095 17.03766812  5.13981063]\n",
      "(3, 224) [87.57032975 17.03748821  5.13986663]\n",
      "(3, 224) [87.57028987 17.03726653  5.1399312 ]\n",
      "(3, 224) [87.57023176 17.03704158  5.13999569]\n",
      "(3, 224) [87.57019597 17.03683862  5.14005481]\n",
      "(3, 224) [87.56997808 17.03665349  5.14009787]\n",
      "(3, 224) [87.56976334 17.03645054  5.14014651]\n",
      "(3, 224) [87.56929856 17.03625901  5.14017703]\n",
      "(3, 224) [87.56921305 17.03604362  5.14023704]\n",
      "(3, 224) [87.56901206 17.03585763  5.14028137]\n",
      "(3, 224) [87.5688655  17.03566983  5.14032943]\n",
      "(3, 224) [87.56877969 17.0354802   5.1403816 ]\n",
      "(3, 224) [87.56887898 17.03531847  5.14043625]\n",
      "(3, 224) [87.56886294 17.03516826  5.14048063]\n",
      "(3, 224) [87.56876928 17.03499246  5.14052819]\n",
      "(3, 224) [87.56885506 17.0348132   5.14058733]\n",
      "(3, 224) [87.56847881 17.03461806  5.14062413]\n",
      "(3, 224) [87.56812765 17.03441053  5.14066616]\n",
      "(3, 224) [87.56783413 17.03418803  5.14071609]\n",
      "(3, 224) [87.56742061 17.03400777  5.14074623]\n",
      "(3, 224) [87.56731864 17.03383844  5.14079138]\n",
      "(3, 224) [87.56735002 17.03362328  5.14085819]\n",
      "(3, 224) [87.56735272 17.03342127  5.14091931]\n",
      "(3, 224) [87.56728103 17.03324132  5.14096942]\n",
      "(3, 224) [87.56706837 17.03305265  5.14101386]\n",
      "(3, 224) [87.56697652 17.03286999  5.14106355]\n",
      "(3, 224) [87.56683199 17.03271085  5.14110308]\n",
      "(3, 224) [87.56669954 17.03252903  5.14115018]\n",
      "(3, 224) [87.56642951 17.03235432  5.14118706]\n",
      "(3, 224) [87.56623388 17.03218534  5.14122657]\n",
      "(3, 224) [87.56619805 17.03202708  5.14127222]\n",
      "(3, 224) [87.56606071 17.03189515  5.14130397]\n",
      "(3, 224) [87.56611844 17.03177034  5.14134502]\n",
      "(3, 224) [87.56596758 17.03160037  5.14138748]\n",
      "(3, 224) [87.5659655  17.03143307  5.14143785]\n",
      "(3, 224) [87.5658414  17.03127298  5.14147888]\n",
      "(3, 224) [87.56604078 17.03114528  5.14152915]\n",
      "(3, 224) [87.56604986 17.03101547  5.14156888]\n",
      "(3, 224) [87.56610779 17.03083784  5.14162591]\n",
      "(3, 224) [87.56634389 17.03067646  5.14168847]\n",
      "(3, 224) [87.56622657 17.03052493  5.14172731]\n",
      "(3, 224) [87.56643396 17.03037319  5.14178529]\n",
      "(3, 224) [87.56651778 17.03022431  5.14183514]\n",
      "(3, 224) [87.56690906 17.03002284  5.14191889]\n",
      "(3, 224) [87.56733327 17.02984865  5.14199637]\n",
      "(3, 224) [87.56757092 17.02970012  5.14205514]\n",
      "(3, 224) [87.56821887 17.02953043  5.14214445]\n",
      "(3, 224) [87.56859421 17.02934941  5.1422212 ]\n",
      "(3, 224) [87.5690993  17.02922914  5.14228722]\n",
      "(3, 224) [87.56969512 17.0291605   5.14234296]\n",
      "(3, 224) [87.57029737 17.02904398  5.14241361]\n",
      "(3, 224) [87.57070801 17.02888646  5.14248539]\n",
      "(3, 224) [87.57101964 17.02875936  5.14254215]\n",
      "(3, 224) [87.57110944 17.0286626   5.14257669]\n",
      "(3, 224) [87.57133537 17.02855228  5.14262337]\n",
      "(3, 224) [87.57143416 17.02844971  5.14266022]\n",
      "(3, 224) [87.57157186 17.02835525  5.14269691]\n",
      "(3, 224) [87.57172647 17.02820926  5.14275018]\n",
      "(3, 224) [87.57195323 17.02807951  5.14280281]\n",
      "(3, 224) [87.57216385 17.02795409  5.14285318]\n",
      "(3, 224) [87.57240781 17.02782371  5.14290701]\n",
      "(3, 224) [87.57250735 17.02769     5.14295336]\n",
      "(3, 224) [87.57248731 17.02755503  5.14299308]\n",
      "(3, 224) [87.57264174 17.02743724  5.14303784]\n",
      "(3, 224) [87.57286376 17.0273011   5.14309212]\n",
      "(3, 224) [87.57307825 17.02714378  5.14315237]\n",
      "(3, 224) [87.57337026 17.02699432  5.14321477]\n",
      "(3, 224) [87.57369072 17.02682128  5.14328596]\n",
      "(3, 224) [87.57411161 17.02660332  5.14337666]\n",
      "(3, 224) [87.57416697 17.02643284  5.1434315 ]\n",
      "(3, 224) [87.57419743 17.02627912  5.14347982]\n",
      "(3, 224) [87.57423409 17.02612512  5.14352859]\n",
      "(3, 224) [87.57438753 17.02597498  5.14358306]\n",
      "(3, 224) [87.57474058 17.02579004  5.14365981]\n",
      "(3, 224) [87.57462342 17.02563209  5.14370075]\n",
      "(3, 224) [87.57439428 17.02548774  5.14373097]\n",
      "(3, 224) [87.57429828 17.02534046  5.14376989]\n",
      "(3, 224) [87.5739626  17.0252136   5.14378855]\n",
      "(3, 224) [87.57355404 17.02506764  5.14380871]\n",
      "(3, 224) [87.57320973 17.02494295  5.14382619]\n",
      "(3, 224) [87.57308126 17.0248088   5.14385923]\n",
      "(3, 224) [87.57277709 17.02469013  5.14387726]\n",
      "(3, 224) [87.57262027 17.02461024  5.14389221]\n",
      "(3, 224) [87.57230648 17.02449762  5.14390783]\n",
      "(3, 224) [87.57209936 17.02441507  5.14392063]\n",
      "(3, 224) [87.57216462 17.02429947  5.1439594 ]\n",
      "(3, 224) [87.57224742 17.0242089   5.14399163]\n",
      "(3, 224) [87.57247902 17.02407828  5.1440447 ]\n",
      "(3, 224) [87.5724316  17.02395005  5.14408068]\n",
      "(3, 224) [87.57266778 17.02383006  5.14413085]\n",
      "(3, 224) [87.57265582 17.0237387   5.14415777]\n",
      "(3, 224) [87.57303535 17.02367836  5.14419832]\n",
      "(3, 224) [87.57304754 17.02365226  5.14420693]\n",
      "(3, 224) [87.57316639 17.02363272  5.14421982]\n",
      "(3, 224) [87.57335802 17.02361777  5.1442356 ]\n",
      "(3, 224) [87.57367805 17.02358144  5.1442654 ]\n",
      "(3, 224) [87.57411202 17.02355432  5.1442991 ]\n",
      "(3, 224) [87.57456611 17.02352275  5.14433532]\n",
      "(3, 224) [87.57459618 17.02349834  5.14434447]\n",
      "(3, 224) [87.57492263 17.02347317  5.14437127]\n",
      "(3, 224) [87.5749697  17.02348479  5.14437052]\n",
      "(3, 224) [87.5753029  17.02349522  5.14438694]\n",
      "(3, 224) [87.57543907 17.02352478  5.14438601]\n",
      "(3, 224) [87.57545252 17.02354874  5.14437956]\n",
      "(3, 224) [87.57566696 17.02357935  5.1443829 ]\n",
      "(3, 224) [87.575781   17.02361423  5.14437906]\n",
      "(3, 224) [87.57557838 17.02360084  5.1443712 ]\n",
      "(3, 224) [87.5754197  17.02359598  5.14436335]\n",
      "(3, 224) [87.57525811 17.02359302  5.14435475]\n",
      "(3, 224) [87.57508802 17.02359461  5.14434428]\n",
      "(3, 224) [87.57473192 17.02358567  5.14432606]\n",
      "(3, 224) [87.57453884 17.02355686  5.14432343]\n",
      "(3, 224) [87.57419354 17.0235216   5.1443138 ]\n",
      "(3, 224) [87.57420044 17.02350853  5.14431816]\n",
      "(3, 224) [87.57372497 17.02349803  5.14429341]\n",
      "(3, 224) [87.57354863 17.02346939  5.1442917 ]\n",
      "(3, 224) [87.57378896 17.02348602  5.14430079]\n",
      "(3, 224) [87.57399561 17.02348738  5.14431251]\n",
      "(3, 224) [87.57426457 17.02348792  5.14432814]\n",
      "(3, 224) [87.57444418 17.02346975  5.14434417]\n",
      "(3, 224) [87.57475677 17.02343224  5.14437385]\n",
      "(3, 224) [87.57489674 17.02338225  5.14439716]\n",
      "(3, 224) [87.57501228 17.02335287  5.14441282]\n",
      "(3, 224) [87.57503669 17.02333483  5.1444197 ]\n",
      "(3, 224) [87.57523646 17.02332181  5.14443536]\n",
      "(3, 224) [87.57524293 17.02329408  5.14444411]\n",
      "(3, 224) [87.5755876  17.02326014  5.14447459]\n",
      "(3, 224) [87.57577784 17.02322024  5.1444978 ]\n",
      "(3, 224) [87.57586361 17.02318505  5.14451345]\n",
      "(3, 224) [87.57617718 17.02317695  5.1445343 ]\n",
      "(3, 224) [87.57647264 17.02312039  5.14456871]\n",
      "(3, 224) [87.57680764 17.02306901  5.14460387]\n",
      "(3, 224) [87.57710012 17.02301211  5.14463819]\n",
      "(3, 224) [87.57715096 17.0229317   5.14466544]\n",
      "(3, 224) [87.57751007 17.02288319  5.14470115]\n",
      "(3, 224) [87.57795175 17.02283217  5.14474247]\n",
      "(3, 224) [87.57827843 17.0227633   5.14478242]\n",
      "(3, 224) [87.57859912 17.02266622  5.1448305 ]\n",
      "(3, 224) [87.57904696 17.02260975  5.14487381]\n",
      "(3, 224) [87.57960865 17.02256898  5.14491906]\n",
      "(3, 224) [87.57981042 17.02256976  5.14493066]\n",
      "(3, 224) [87.58063013 17.02254937  5.14498492]\n",
      "(3, 224) [87.58126927 17.02246871  5.14504673]\n",
      "(3, 224) [87.58199221 17.02235886  5.14512223]\n",
      "(3, 224) [87.5824493  17.02225661  5.14517985]\n",
      "(3, 224) [87.58310799 17.02211343  5.14526165]\n",
      "(3, 224) [87.58374601 17.02202743  5.145325  ]\n",
      "(3, 224) [87.58427824 17.0219494   5.14537974]\n",
      "(3, 224) [87.5846453  17.02187952  5.14542231]\n",
      "(3, 224) [87.58479023 17.0217585   5.14546725]\n",
      "(3, 224) [87.58485072 17.02165395  5.14550227]\n",
      "(3, 224) [87.584979   17.02155683  5.14553905]\n",
      "(3, 224) [87.58514042 17.02147117  5.14557433]\n",
      "(3, 224) [87.58525349 17.02141259  5.14559861]\n",
      "(3, 224) [87.58547694 17.02134661  5.1456316 ]\n",
      "(3, 224) [87.58552763 17.02126901  5.14565796]\n",
      "(3, 224) [87.58578853 17.021193    5.14569618]\n",
      "(3, 224) [87.58626656 17.02114032  5.14574009]\n",
      "(3, 224) [87.58662361 17.0210917   5.1457757 ]\n",
      "(3, 224) [87.58674466 17.02105931  5.14579256]\n",
      "(3, 224) [87.58683791 17.02099169  5.14581841]\n",
      "(3, 224) [87.58673966 17.02092143  5.14583383]\n",
      "(3, 224) [87.5868101  17.02077348  5.14588254]\n",
      "(3, 224) [87.58688865 17.02066689  5.14591927]\n",
      "(3, 224) [87.58679826 17.02052003  5.14595825]\n",
      "(3, 224) [87.58680457 17.02040044  5.14599468]\n",
      "(3, 224) [87.58703836 17.02026797  5.14604835]\n",
      "(3, 224) [87.58736245 17.02013703  5.14610685]\n",
      "(3, 224) [87.58752449 17.02005745  5.14614035]\n",
      "(3, 224) [87.5877257  17.01998405  5.1461743 ]\n",
      "(3, 224) [87.58824501 17.01987741  5.14623695]\n",
      "(3, 224) [87.58872333 17.01980245  5.14628762]\n",
      "(3, 224) [87.58921531 17.01976187  5.14632873]\n",
      "(3, 224) [87.58989483 17.01971709  5.14638212]\n",
      "(3, 224) [87.59035496 17.01966992  5.14642335]\n",
      "(3, 224) [87.5907226  17.01961748  5.14646076]\n",
      "(3, 224) [87.59144244 17.01956378  5.1465192 ]\n",
      "(3, 224) [87.59200951 17.01957317  5.14654965]\n",
      "(3, 224) [87.59251721 17.0195803   5.1465773 ]\n",
      "(3, 224) [87.59298889 17.01960892  5.14659635]\n",
      "(3, 224) [87.59331645 17.01961574  5.14661352]\n",
      "(3, 224) [87.59360828 17.01964328  5.14662234]\n",
      "(3, 224) [87.59394966 17.01968793  5.14662891]\n",
      "(3, 224) [87.59433518 17.01971114  5.14664453]\n",
      "(3, 224) [87.59490068 17.0197391   5.14666929]\n",
      "(3, 224) [87.59527159 17.01977327  5.14668075]\n",
      "(3, 224) [87.59599016 17.01981007  5.14671183]\n",
      "(3, 224) [87.59647159 17.01985316  5.14672709]\n",
      "(3, 224) [87.5970968  17.019863    5.14676083]\n",
      "(3, 224) [87.59746359 17.01986763  5.14678097]\n",
      "(3, 224) [87.59810218 17.01986425  5.1468195 ]\n",
      "(3, 224) [87.5985347  17.01987112  5.14684282]\n",
      "(3, 224) [87.59935116 17.0198773   5.1468889 ]\n",
      "(3, 224) [87.59987258 17.01988754  5.14691642]\n",
      "(3, 224) [87.6004526  17.01988531  5.14695115]\n",
      "(3, 224) [87.60091915 17.01987557  5.14698148]\n",
      "(3, 224) [87.60148853 17.01984811  5.14702318]\n",
      "(3, 224) [87.60229086 17.01980959  5.1470819 ]\n",
      "(3, 224) [87.60292099 17.01978296  5.14712693]\n",
      "(3, 224) [87.60333344 17.01973345  5.14716609]\n",
      "(3, 224) [87.60401433 17.01970034  5.14721605]\n",
      "(3, 224) [87.60480301 17.01964274  5.14727976]\n",
      "(3, 224) [87.60540938 17.01958804  5.14733188]\n",
      "(3, 224) [87.60574105 17.01959889  5.14734808]\n",
      "(3, 224) [87.6062402  17.01962474  5.14736958]\n",
      "(3, 224) [87.60696943 17.01967063  5.14739854]\n",
      "(3, 224) [87.60771374 17.01977466  5.14741082]\n",
      "(3, 224) [87.60823424 17.01983871  5.14742203]\n",
      "(3, 224) [87.60867068 17.0198957   5.14743044]\n",
      "(3, 224) [87.60922478 17.02001932  5.14742562]\n",
      "(3, 224) [87.60980744 17.02014885  5.14742069]\n",
      "(3, 224) [87.61030279 17.02029794  5.14740472]\n",
      "(3, 224) [87.61066027 17.02043604  5.14738399]\n",
      "(3, 224) [87.61096516 17.02059811  5.14735291]\n",
      "(3, 224) [87.61139533 17.02074125  5.14733491]\n",
      "(3, 224) [87.61189126 17.02093262  5.14730618]\n",
      "(3, 224) [87.61243606 17.02107391  5.14729547]\n",
      "(3, 224) [87.61279533 17.02122633  5.14727049]\n",
      "(3, 224) [87.61323265 17.02142421  5.14723638]\n",
      "(3, 224) [87.6140513  17.02164606  5.14721745]\n",
      "(3, 224) [87.61453107 17.02187798  5.14717556]\n",
      "(3, 224) [87.61478155 17.02225407  5.14707646]\n",
      "(3, 224) [87.61486481 17.02253168  5.14699738]\n",
      "(3, 224) [87.61508839 17.02284358  5.14691616]\n",
      "(3, 224) [87.61542944 17.02313287  5.14684873]\n",
      "(3, 224) [87.6153955  17.02327358  5.14680424]\n",
      "(3, 224) [87.61553944 17.02346659  5.14675441]\n",
      "(3, 224) [87.61565992 17.02364813  5.14670665]\n",
      "(3, 224) [87.61608534 17.02378066  5.14669159]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  6%|████▌                                                                      | 4616/76339 [00:02<00:34, 2101.71it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.61631746 17.02387286  5.14667737]\n",
      "(3, 224) [87.61640599 17.024027    5.14663604]\n",
      "(3, 224) [87.6168173  17.02417618  5.14661515]\n",
      "(3, 224) [87.61687028 17.02434707  5.14656663]\n",
      "(3, 224) [87.61712563 17.02451769  5.14653012]\n",
      "(3, 224) [87.61729081 17.0246726   5.14649306]\n",
      "(3, 224) [87.61738734 17.02482593  5.14645244]\n",
      "(3, 224) [87.61739943 17.02497385  5.14640848]\n",
      "(3, 224) [87.61771007 17.02509287  5.14639078]\n",
      "(3, 224) [87.61785315 17.0252203   5.1463607 ]\n",
      "(3, 224) [87.61784316 17.0253501   5.1463209 ]\n",
      "(3, 224) [87.61832281 17.02548852  5.14630726]\n",
      "(3, 224) [87.61872593 17.025638    5.14628578]\n",
      "(3, 224) [87.61919269 17.02582334  5.14625721]\n",
      "(3, 224) [87.61953443 17.02600407  5.14622272]\n",
      "(3, 224) [87.61962557 17.02620061  5.14616873]\n",
      "(3, 224) [87.61987462 17.02638589  5.14612737]\n",
      "(3, 224) [87.61997649 17.02655606  5.14608197]\n",
      "(3, 224) [87.62007391 17.02672483  5.14603674]\n",
      "(3, 224) [87.62041159 17.02687379  5.14601159]\n",
      "(3, 224) [87.62062213 17.02698473  5.14599046]\n",
      "(3, 224) [87.62093543 17.0270712   5.14598274]\n",
      "(3, 224) [87.62103344 17.02718821  5.14595315]\n",
      "(3, 224) [87.62112561 17.02729208  5.14592719]\n",
      "(3, 224) [87.62114769 17.02736091  5.1459077 ]\n",
      "(3, 224) [87.62120577 17.02741163  5.14589578]\n",
      "(3, 224) [87.62150555 17.02745212  5.14590115]\n",
      "(3, 224) [87.62174303 17.0274925   5.14590289]\n",
      "(3, 224) [87.62193911 17.0275542   5.14589576]\n",
      "(3, 224) [87.62209633 17.02761826  5.14588563]\n",
      "(3, 224) [87.62214387 17.02765202  5.14587821]\n",
      "(3, 224) [87.62214584 17.02771214  5.14586016]\n",
      "(3, 224) [87.62233741 17.02775873  5.14585732]\n",
      "(3, 224) [87.62213828 17.0278097   5.14583021]\n",
      "(3, 224) [87.62233812 17.02788237  5.14581998]\n",
      "(3, 224) [87.62246187 17.02791955  5.14581601]\n",
      "(3, 224) [87.62247276 17.02797616  5.14579954]\n",
      "(3, 224) [87.62245601 17.02801725  5.14578613]\n",
      "(3, 224) [87.62236458 17.02807963  5.1457619 ]\n",
      "(3, 224) [87.62186158 17.02812448  5.1457188 ]\n",
      "(3, 224) [87.62163583 17.02817201  5.14569117]\n",
      "(3, 224) [87.62090417 17.02822673  5.14563164]\n",
      "(3, 224) [87.62071245 17.02831485  5.1455937 ]\n",
      "(3, 224) [87.6202905  17.02836512  5.14555369]\n",
      "(3, 224) [87.61982921 17.02835741  5.14552892]\n",
      "(3, 224) [87.61916941 17.0284001   5.1454772 ]\n",
      "(3, 224) [87.61880533 17.02841225  5.14545211]\n",
      "(3, 224) [87.61837129 17.02840689  5.14542821]\n",
      "(3, 224) [87.6182831  17.02837827  5.14543169]\n",
      "(3, 224) [87.61787895 17.02837215  5.14540978]\n",
      "(3, 224) [87.61742575 17.02838251  5.14537999]\n",
      "(3, 224) [87.61678543 17.0283791   5.14534338]\n",
      "(3, 224) [87.61636189 17.02841858  5.14530651]\n",
      "(3, 224) [87.61570452 17.02848456  5.14524786]\n",
      "(3, 224) [87.61536875 17.02855088  5.14520801]\n",
      "(3, 224) [87.61501584 17.02862189  5.14516574]\n",
      "(3, 224) [87.61475319 17.02867089  5.14513544]\n",
      "(3, 224) [87.61435174 17.02873422  5.14509262]\n",
      "(3, 224) [87.61399196 17.0287884   5.14505504]\n",
      "(3, 224) [87.61365623 17.02886269  5.14501279]\n",
      "(3, 224) [87.61329754 17.02890526  5.14497878]\n",
      "(3, 224) [87.61274973 17.02894238  5.14493531]\n",
      "(3, 224) [87.61228778 17.02895544  5.14490419]\n",
      "(3, 224) [87.6118087  17.02900573  5.14486075]\n",
      "(3, 224) [87.61202639 17.0290501   5.1448601 ]\n",
      "(3, 224) [87.61207668 17.02906235  5.14485934]\n",
      "(3, 224) [87.61203558 17.02905775  5.14485832]\n",
      "(3, 224) [87.61197511 17.02909007  5.14484496]\n",
      "(3, 224) [87.61181253 17.02913668  5.14482125]\n",
      "(3, 224) [87.61198541 17.02916187  5.14482378]\n",
      "(3, 224) [87.61216073 17.02915987  5.14483471]\n",
      "(3, 224) [87.61281493 17.02917859  5.14486751]\n",
      "(3, 224) [87.61333164 17.0291809   5.14489721]\n",
      "(3, 224) [87.6141512  17.0292194   5.14493375]\n",
      "(3, 224) [87.61508211 17.02922725  5.14498613]\n",
      "(3, 224) [87.61554606 17.02923297  5.14501169]\n",
      "(3, 224) [87.61622611 17.0292533   5.14504553]\n",
      "(3, 224) [87.61685671 17.02924892  5.14508395]\n",
      "(3, 224) [87.61766343 17.02924454  5.14513273]\n",
      "(3, 224) [87.61824653 17.02922937  5.14517162]\n",
      "(3, 224) [87.61889985 17.02920995  5.14521592]\n",
      "(3, 224) [87.6196768  17.02915735  5.14527754]\n",
      "(3, 224) [87.62007321 17.02910692  5.14531614]\n",
      "(3, 224) [87.62050184 17.02906836  5.14535304]\n",
      "(3, 224) [87.62067902 17.02900937  5.14538136]\n",
      "(3, 224) [87.6209425  17.02891966  5.14542406]\n",
      "(3, 224) [87.62088564 17.0288307   5.14544768]\n",
      "(3, 224) [87.62101453 17.02872562  5.1454871 ]\n",
      "(3, 224) [87.62124942 17.02861646  5.145534  ]\n",
      "(3, 224) [87.62137964 17.02848051  5.14558285]\n",
      "(3, 224) [87.62128842 17.028375    5.14560947]\n",
      "(3, 224) [87.62115916 17.02825194  5.14563917]\n",
      "(3, 224) [87.62095652 17.02810754  5.14567101]\n",
      "(3, 224) [87.6209345  17.02797968  5.14570848]\n",
      "(3, 224) [87.62064008 17.02789075  5.1457181 ]\n",
      "(3, 224) [87.62054872 17.02777824  5.14574679]\n",
      "(3, 224) [87.62040313 17.0277018   5.14576137]\n",
      "(3, 224) [87.62043955 17.02758197  5.14579977]\n",
      "(3, 224) [87.62049492 17.02747014  5.14583687]\n",
      "(3, 224) [87.62049165 17.02731637  5.14588324]\n",
      "(3, 224) [87.62029536 17.02715665  5.14592006]\n",
      "(3, 224) [87.62036787 17.02700818  5.14596932]\n",
      "(3, 224) [87.62021053 17.02685241  5.14600725]\n",
      "(3, 224) [87.6200018  17.02668669  5.14604519]\n",
      "(3, 224) [87.61987908 17.02650499  5.14609301]\n",
      "(3, 224) [87.61974394 17.02628371  5.14615211]\n",
      "(3, 224) [87.61966396 17.02607574  5.14621041]\n",
      "(3, 224) [87.61984272 17.02586661  5.14628431]\n",
      "(3, 224) [87.61992681 17.02563384  5.1463598 ]\n",
      "(3, 224) [87.62005345 17.02542537  5.14643041]\n",
      "(3, 224) [87.62010333 17.02519829  5.14650214]\n",
      "(3, 224) [87.62020106 17.02494649  5.14658417]\n",
      "(3, 224) [87.62001695 17.02470913  5.14664527]\n",
      "(3, 224) [87.62001266 17.02449669  5.14670936]\n",
      "(3, 224) [87.61998522 17.02426662  5.14677747]\n",
      "(3, 224) [87.61975836 17.02404379  5.14683166]\n",
      "(3, 224) [87.61972791 17.02379446  5.14690544]\n",
      "(3, 224) [87.61976735 17.02357128  5.14697542]\n",
      "(3, 224) [87.61972719 17.02333288  5.14704528]\n",
      "(3, 224) [87.61966331 17.02307781  5.14711879]\n",
      "(3, 224) [87.61967695 17.02283433  5.14719335]\n",
      "(3, 224) [87.6195545  17.02258314  5.14726227]\n",
      "(3, 224) [87.61940291 17.0223093   5.14733634]\n",
      "(3, 224) [87.61938305 17.02205075  5.14741348]\n",
      "(3, 224) [87.61938229 17.02177684  5.14749644]\n",
      "(3, 224) [87.61931574 17.02152995  5.14756734]\n",
      "(3, 224) [87.61918724 17.02124828  5.14764514]\n",
      "(3, 224) [87.6193412  17.0209985   5.14772987]\n",
      "(3, 224) [87.61938401 17.02074512  5.14780917]\n",
      "(3, 224) [87.61958433 17.02047086  5.14790408]\n",
      "(3, 224) [87.61954334 17.02021113  5.14798039]\n",
      "(3, 224) [87.61945392 17.01992974  5.14806043]\n",
      "(3, 224) [87.61925115 17.01962704  5.14814026]\n",
      "(3, 224) [87.61893272 17.01931274  5.14821674]\n",
      "(3, 224) [87.61853591 17.01902558  5.14828036]\n",
      "(3, 224) [87.61843251 17.01871745  5.14836754]\n",
      "(3, 224) [87.61776657 17.01840485  5.14842305]\n",
      "(3, 224) [87.61706689 17.01811464  5.14846978]\n",
      "(3, 224) [87.61658085 17.01783021  5.14852734]\n",
      "(3, 224) [87.61589598 17.01755421  5.14857063]\n",
      "(3, 224) [87.61488405 17.01726681  5.14859818]\n",
      "(3, 224) [87.61414367 17.01695192  5.14865003]\n",
      "(3, 224) [87.61353448 17.01662978  5.14871179]\n",
      "(3, 224) [87.61295383 17.01627849  5.14878397]\n",
      "(3, 224) [87.61267995 17.01596258  5.14886353]\n",
      "(3, 224) [87.61226289 17.01561951  5.14894283]\n",
      "(3, 224) [87.61181268 17.01527713  5.14902005]\n",
      "(3, 224) [87.61124788 17.01488396  5.14910598]\n",
      "(3, 224) [87.61096879 17.01448128  5.14921157]\n",
      "(3, 224) [87.61027817 17.01404179  5.14930419]\n",
      "(3, 224) [87.60977119 17.01362777  5.14939985]\n",
      "(3, 224) [87.60910469 17.01327945  5.14946618]\n",
      "(3, 224) [87.60830202 17.01291287  5.14953001]\n",
      "(3, 224) [87.60766524 17.01255773  5.14960016]\n",
      "(3, 224) [87.60716425 17.01219119  5.14968168]\n",
      "(3, 224) [87.60677775 17.01185513  5.14976074]\n",
      "(3, 224) [87.60641865 17.01151375  5.14984304]\n",
      "(3, 224) [87.60598042 17.01121248  5.14990851]\n",
      "(3, 224) [87.60557377 17.01090353  5.14997818]\n",
      "(3, 224) [87.60517796 17.01063346  5.15003673]\n",
      "(3, 224) [87.60453742 17.01033641  5.15008903]\n",
      "(3, 224) [87.60360756 17.01003298  5.15012627]\n",
      "(3, 224) [87.60273611 17.00973319  5.15016585]\n",
      "(3, 224) [87.60223016 17.00942442  5.15022962]\n",
      "(3, 224) [87.60161215 17.00912225  5.15028481]\n",
      "(3, 224) [87.60079304 17.00885122  5.15031877]\n",
      "(3, 224) [87.5999357  17.00855033  5.15035949]\n",
      "(3, 224) [87.59931168 17.00825737  5.15041151]\n",
      "(3, 224) [87.59826664 17.00794788  5.15044381]\n",
      "(3, 224) [87.59750853 17.00763961  5.15049264]\n",
      "(3, 224) [87.59672847 17.00735153  5.15053401]\n",
      "(3, 224) [87.59587547 17.00707444  5.15056775]\n",
      "(3, 224) [87.59501624 17.0067722   5.15060871]\n",
      "(3, 224) [87.59449735 17.00651168  5.15065706]\n",
      "(3, 224) [87.59399658 17.0062576   5.1507045 ]\n",
      "(3, 224) [87.59340079 17.00601125  5.15074406]\n",
      "(3, 224) [87.59304149 17.00578639  5.150791  ]\n",
      "(3, 224) [87.5923181 17.0055255  5.1508274]\n",
      "(3, 224) [87.59172891 17.00530369  5.15085988]\n",
      "(3, 224) [87.59113987 17.00506773  5.15089666]\n",
      "(3, 224) [87.59057719 17.00485813  5.15092698]\n",
      "(3, 224) [87.58978755 17.00465495  5.15094206]\n",
      "(3, 224) [87.58923063 17.00447088  5.150965  ]\n",
      "(3, 224) [87.58870854 17.0042869   5.15098999]\n",
      "(3, 224) [87.58814527 17.0041134   5.15100938]\n",
      "(3, 224) [87.58767307 17.00398919  5.15101921]\n",
      "(3, 224) [87.5873247  17.00384391  5.15104269]\n",
      "(3, 224) [87.58634865 17.00366282  5.15104011]\n",
      "(3, 224) [87.58577516 17.00346046  5.15106762]\n",
      "(3, 224) [87.58494629 17.00326347  5.1510785 ]\n",
      "(3, 224) [87.58439486 17.00308396  5.15110041]\n",
      "(3, 224) [87.58382042 17.00288144  5.15112792]\n",
      "(3, 224) [87.58304917 17.00271393  5.15113327]\n",
      "(3, 224) [87.58223139 17.00251701  5.15114479]\n",
      "(3, 224) [87.58159408 17.00232433  5.15116564]\n",
      "(3, 224) [87.5807353  17.00213618  5.15117211]\n",
      "(3, 224) [87.58001547 17.00197297  5.15117921]\n",
      "(3, 224) [87.57927334 17.00183156  5.15117838]\n",
      "(3, 224) [87.57870301 17.00169385  5.15118652]\n",
      "(3, 224) [87.57795752 17.00153411  5.15119103]\n",
      "(3, 224) [87.57706911 17.00136424  5.15119021]\n",
      "(3, 224) [87.57634772 17.00119294  5.15119966]\n",
      "(3, 224) [87.57578839 17.00097505  5.15123275]\n",
      "(3, 224) [87.57529658 17.00078133  5.15126248]\n",
      "(3, 224) [87.57479671 17.00056545  5.15129845]\n",
      "(3, 224) [87.57413654 17.00033964  5.151328  ]\n",
      "(3, 224) [87.57348723 17.00008192  5.15136782]\n",
      "(3, 224) [87.57284512 16.99981717  5.15141018]\n",
      "(3, 224) [87.57210812 16.99954597  5.15144889]\n",
      "(3, 224) [87.57129569 16.99927051  5.15148451]\n",
      "(3, 224) [87.57035742 16.99897728  5.15151808]\n",
      "(3, 224) [87.5693118  16.99871042  5.15153737]\n",
      "(3, 224) [87.56852026 16.99843658  5.15157372]\n",
      "(3, 224) [87.56756563 16.99811148  5.15161593]\n",
      "(3, 224) [87.56626925 16.99777465  5.15164157]\n",
      "(3, 224) [87.56534441 16.99747168  5.1516788 ]\n",
      "(3, 224) [87.56465776 16.99715296  5.15173478]\n",
      "(3, 224) [87.56373123 16.99685917  5.15176913]\n",
      "(3, 224) [87.56299297 16.99652198  5.15182771]\n",
      "(3, 224) [87.56192367 16.9962028   5.15186133]\n",
      "(3, 224) [87.56094485 16.99591054  5.15189213]\n",
      "(3, 224) [87.56005906 16.99561339  5.15192986]\n",
      "(3, 224) [87.55916275 16.9953113   5.15196849]\n",
      "(3, 224) [87.55811148 16.99502483  5.15199334]\n",
      "(3, 224) [87.5571122  16.99475332  5.15201671]\n",
      "(3, 224) [87.55617541 16.99445588  5.15205153]\n",
      "(3, 224) [87.55499093 16.99415172  5.15207384]\n",
      "(3, 224) [87.55378283 16.99385148  5.15209357]\n",
      "(3, 224) [87.5526927  16.99351799  5.15213029]\n",
      "(3, 224) [87.55141521 16.99317786  5.15215797]\n",
      "(3, 224) [87.55022447 16.9928518   5.1521865 ]\n",
      "(3, 224) [87.54910019 16.99253697  5.15221557]\n",
      "(3, 224) [87.54798127 16.99225033  5.15223646]\n",
      "(3, 224) [87.54686389 16.99195688  5.15225949]\n",
      "(3, 224) [87.54590884 16.99165529  5.15229453]\n",
      "(3, 224) [87.54486718 16.99134695  5.15232656]\n",
      "(3, 224) [87.54391227 16.99106928  5.1523544 ]\n",
      "(3, 224) [87.54263511 16.99075013  5.15237581]\n",
      "(3, 224) [87.54163353 16.99042016  5.15241666]\n",
      "(3, 224) [87.54057113 16.99009739  5.15245173]\n",
      "(3, 224) [87.53958318 16.98980091  5.15248329]\n",
      "(3, 224) [87.53860698 16.98947594  5.15252413]\n",
      "(3, 224) [87.53790102 16.98913355  5.15258615]\n",
      "(3, 224) [87.53683934 16.98881708  5.15261942]\n",
      "(3, 224) [87.53611931 16.98851535  5.15266835]\n",
      "(3, 224) [87.53510495 16.98822583  5.15269632]\n",
      "(3, 224) [87.53422192 16.98800249  5.15271191]\n",
      "(3, 224) [87.53362748 16.98778718  5.15274207]\n",
      "(3, 224) [87.53287727 16.98759965  5.15275466]\n",
      "(3, 224) [87.53219415 16.9874176   5.15276956]\n",
      "(3, 224) [87.53129528 16.98723662  5.15277147]\n",
      "(3, 224) [87.53036686 16.98705057  5.15277319]\n",
      "(3, 224) [87.52941076 16.98686368  5.15277352]\n",
      "(3, 224) [87.52857279 16.98667384  5.15278169]\n",
      "(3, 224) [87.52786092 16.98650697  5.15279033]\n",
      "(3, 224) [87.52674482 16.98630403  5.1527861 ]\n",
      "(3, 224) [87.52579628 16.98612574  5.15278428]\n",
      "(3, 224) [87.52499222 16.98594491  5.15279171]\n",
      "(3, 224) [87.52402483 16.98574127  5.15279645]\n",
      "(3, 224) [87.52315813 16.98556092  5.15280006]\n",
      "(3, 224) [87.5222429  16.98537761  5.15280171]\n",
      "(3, 224) [87.52154139 16.98520808  5.15281176]\n",
      "(3, 224) [87.52065674 16.98501368  5.15281856]\n",
      "(3, 224) [87.52007548 16.98478854  5.15285252]\n",
      "(3, 224) [87.51960475 16.98460728  5.15287968]\n",
      "(3, 224) [87.51930351 16.9844396   5.1529127 ]\n",
      "(3, 224) [87.51861626 16.98427077  5.15292339]\n",
      "(3, 224) [87.51815432 16.98412163  5.15294137]\n",
      "(3, 224) [87.51749311 16.98398538  5.15294373]\n",
      "(3, 224) [87.51701558 16.98386821  5.15295113]\n",
      "(3, 224) [87.51670103 16.98378133  5.15295896]\n",
      "(3, 224) [87.51643202 16.98369711  5.15296865]\n",
      "(3, 224) [87.51580066 16.98359934  5.15296115]\n",
      "(3, 224) [87.51527428 16.98353697  5.15294908]\n",
      "(3, 224) [87.51501809 16.98345696  5.15295824]\n",
      "(3, 224) [87.51472475 16.98338386  5.15296312]\n",
      "(3, 224) [87.51426327 16.98330615  5.15295951]\n",
      "(3, 224) [87.51389808 16.98320915  5.15296739]\n",
      "(3, 224) [87.51347057 16.98316275  5.1529563 ]\n",
      "(3, 224) [87.51279323 16.98311373  5.15293131]\n",
      "(3, 224) [87.51229195 16.98306968  5.15291516]\n",
      "(3, 224) [87.51181536 16.98299525  5.15290967]\n",
      "(3, 224) [87.5111999  16.98293948  5.15289035]\n",
      "(3, 224) [87.5104103  16.98285414  5.15286975]\n",
      "(3, 224) [87.50951942 16.98283001  5.15282466]\n",
      "(3, 224) [87.50892345 16.98281382  5.15279451]\n",
      "(3, 224) [87.50840023 16.98283157  5.15275837]\n",
      "(3, 224) [87.50806225 16.98283627  5.15273707]\n",
      "(3, 224) [87.50727387 16.98283561  5.15269091]\n",
      "(3, 224) [87.50669031 16.98285895  5.15264951]\n",
      "(3, 224) [87.50621658 16.98291692  5.15260408]\n",
      "(3, 224) [87.50549905 16.98294048  5.15255476]\n",
      "(3, 224) [87.50498905 16.98296611  5.152517  ]\n",
      "(3, 224) [87.50424306 16.98298633  5.152467  ]\n",
      "(3, 224) [87.50366171 16.98301268  5.15242482]\n",
      "(3, 224) [87.50274652 16.98301968  5.15236887]\n",
      "(3, 224) [87.50180493 16.98304981  5.15230437]\n",
      "(3, 224) [87.50052709 16.98305787  5.15222678]\n",
      "(3, 224) [87.49944683 16.9830843   5.15215523]\n",
      "(3, 224) [87.49859267 16.98312361  5.15209309]\n",
      "(3, 224) [87.49742718 16.98316137  5.15201312]\n",
      "(3, 224) [87.4962755  16.98319502  5.15193521]\n",
      "(3, 224) [87.49521013 16.98320904  5.1518683 ]\n",
      "(3, 224) [87.49398233 16.98322383  5.15179162]\n",
      "(3, 224) [87.49279446 16.98324368  5.15171575]\n",
      "(3, 224) [87.49118854 16.9832644   5.15161504]\n",
      "(3, 224) [87.49013478 16.98332694  5.15153413]\n",
      "(3, 224) [87.48911368 16.98338311  5.15145706]\n",
      "(3, 224) [87.48804066 16.9835039   5.15135739]\n",
      "(3, 224) [87.48693083 16.98357175  5.15127155]\n",
      "(3, 224) [87.48608784 16.98363497  5.15120281]\n",
      "(3, 224) [87.48521273 16.98371667  5.1511266 ]\n",
      "(3, 224) [87.48432351 16.98379468  5.15105065]\n",
      "(3, 224) [87.48334865 16.98388162  5.15096697]\n",
      "(3, 224) [87.48235342 16.98396132  5.15088429]\n",
      "(3, 224) [87.48173873 16.98405106  5.15082094]\n",
      "(3, 224) [87.48117181 16.98414819  5.15075815]\n",
      "(3, 224) [87.48036678 16.98424167  5.15068247]\n",
      "(3, 224) [87.47961368 16.98427397  5.15062839]\n",
      "(3, 224) [87.47902674 16.98431122  5.15058259]\n",
      "(3, 224) [87.47837478 16.98431112  5.15054428]\n",
      "(3, 224) [87.47785267 16.98431279  5.15051306]\n",
      "(3, 224) [87.47711804 16.9842954   5.15047512]\n",
      "(3, 224) [87.476186   16.98431212  5.15041522]\n",
      "(3, 224) [87.4754963  16.98434873  5.15036354]\n",
      "(3, 224) [87.47457746 16.98441548  5.15028924]\n",
      "(3, 224) [87.47371581 16.98446275  5.15022421]\n",
      "(3, 224) [87.47275624 16.98452431  5.15014909]\n",
      "(3, 224) [87.4718889  16.98460344  5.15007408]\n",
      "(3, 224) [87.4710937  16.98469583  5.14999925]\n",
      "(3, 224) [87.47019482 16.9847639   5.1499257 ]\n",
      "(3, 224) [87.46911641 16.98486888  5.1498304 ]\n",
      "(3, 224) [87.46794829 16.98497491  5.14972949]\n",
      "(3, 224) [87.46710188 16.98507256  5.14965006]\n",
      "(3, 224) [87.46636932 16.98519726  5.14956915]\n",
      "(3, 224) [87.46503209 16.98532359  5.14945217]\n",
      "(3, 224) [87.46414443 16.98545338  5.1493606 ]\n",
      "(3, 224) [87.46297407 16.98552765  5.14926922]\n",
      "(3, 224) [87.46178278 16.98562121  5.14917074]\n",
      "(3, 224) [87.4607841  16.98572026  5.14908194]\n",
      "(3, 224) [87.4597983  16.98583018  5.14899057]\n",
      "(3, 224) [87.45883181 16.98590226  5.14891179]\n",
      "(3, 224) [87.45811966 16.98600806  5.14883779]\n",
      "(3, 224) [87.45727852 16.98612954  5.14875146]\n",
      "(3, 224) [87.45648771 16.98625006  5.14866838]\n",
      "(3, 224) [87.45583881 16.98640048  5.14858458]\n",
      "(3, 224) [87.45528026 16.98656628  5.14850143]\n",
      "(3, 224) [87.45473443 16.98669265  5.14843099]\n",
      "(3, 224) [87.45398952 16.98684976  5.14833951]\n",
      "(3, 224) [87.45327875 16.98699991  5.14825216]\n",
      "(3, 224) [87.45249028 16.9871515   5.14815978]\n",
      "(3, 224) [87.45155389 16.98727916  5.14806597]\n",
      "(3, 224) [87.45097424 16.98743591  5.14798431]\n",
      "(3, 224) [87.44985129 16.9875812   5.14787414]\n",
      "(3, 224) [87.4487549  16.98772609  5.14776568]\n",
      "(3, 224) [87.44784466 16.98789015  5.14766234]\n",
      "(3, 224) [87.44701555 16.98806525  5.14756042]\n",
      "(3, 224) [87.44629344 16.9882365   5.14746599]\n",
      "(3, 224) [87.44556874 16.98837073  5.14738266]\n",
      "(3, 224) [87.44501307 16.9884992   5.147311  ]\n",
      "(3, 224) [87.44449141 16.98864039  5.14723749]\n",
      "(3, 224) [87.44412344 16.98878849  5.14717096]\n",
      "(3, 224) [87.44363375 16.98893417  5.14709798]\n",
      "(3, 224) [87.44321787 16.98908135  5.14702893]\n",
      "(3, 224) [87.44301541 16.98925018  5.14696585]\n",
      "(3, 224) [87.44254717 16.98941838  5.14688731]\n",
      "(3, 224) [87.44210637 16.9895879   5.14680996]\n",
      "(3, 224) [87.44175623 16.98974667  5.14674123]\n",
      "(3, 224) [87.44119829 16.98987663  5.14666896]\n",
      "(3, 224) [87.44080257 16.98999924  5.14660848]\n",
      "(3, 224) [87.44057722 16.99012957  5.14655566]\n",
      "(3, 224) [87.44027251 16.99033194  5.14647628]\n",
      "(3, 224) [87.43968905 16.99048444  5.14639559]\n",
      "(3, 224) [87.43922331 16.99067178  5.14631122]\n",
      "(3, 224) [87.43857686 16.99082462  5.1462267 ]\n",
      "(3, 224) [87.43805313 16.9909453   5.14615922]\n",
      "(3, 224) [87.43749197 16.99106335  5.14609035]\n",
      "(3, 224) [87.43697697 16.99118136  5.14602419]\n",
      "(3, 224) [87.43645564 16.99129887  5.14595782]\n",
      "(3, 224) [87.43567864 16.9914222   5.14587465]\n",
      "(3, 224) [87.43497484 16.99156252  5.14579063]\n",
      "(3, 224) [87.43437545 16.99169895  5.14571397]\n",
      "(3, 224) [87.43365903 16.9918219   5.14563449]\n",
      "(3, 224) [87.43296379 16.99196231  5.14555099]\n",
      "(3, 224) [87.43237466 16.99210954  5.14547167]\n",
      "(3, 224) [87.43191612 16.99226398  5.14539786]\n",
      "(3, 224) [87.43131619 16.99241441  5.14531693]\n",
      "(3, 224) [87.43045011 16.9925448   5.1452264 ]\n",
      "(3, 224) [87.42972903 16.99268656  5.14514097]\n",
      "(3, 224) [87.42887942 16.99280894  5.14505385]\n",
      "(3, 224) [87.42817417 16.99290975  5.14498176]\n",
      "(3, 224) [87.42755793 16.99300285  5.14491724]\n",
      "(3, 224) [87.42723648 16.99312264  5.14486199]\n",
      "(3, 224) [87.42708329 16.99327643  5.14480632]\n",
      "(3, 224) [87.42696062 16.9934228   5.14475473]\n",
      "(3, 224) [87.42675024 16.99355938  5.14470096]\n",
      "(3, 224) [87.42683261 16.99368979  5.14466628]\n",
      "(3, 224) [87.42647486 16.99379585  5.1446131 ]\n",
      "(3, 224) [87.42633426 16.99390537  5.14457165]\n",
      "(3, 224) [87.42594483 16.99402733  5.14451179]\n",
      "(3, 224) [87.42564331 16.99414944  5.14445707]\n",
      "(3, 224) [87.42567836 16.99425887  5.14442599]\n",
      "(3, 224) [87.42532969 16.99434194  5.14438032]\n",
      "(3, 224) [87.42486781 16.99442832  5.14432699]\n",
      "(3, 224) [87.42470809 16.99450215  5.14429525]\n",
      "(3, 224) [87.42461312 16.99458667  5.14426407]\n",
      "(3, 224) [87.42448584 16.99466895  5.14423168]\n",
      "(3, 224) [87.42432199 16.99475553  5.14419583]\n",
      "(3, 224) [87.42413897 16.994844    5.14415829]\n",
      "(3, 224) [87.42385664 16.99490638  5.14412282]\n",
      "(3, 224) [87.42351075 16.99498047  5.14408005]\n",
      "(3, 224) [87.4235695  16.99507024  5.14405634]\n",
      "(3, 224) [87.42347757 16.9951581   5.14402433]\n",
      "(3, 224) [87.42337716 16.99521993  5.14399971]\n",
      "(3, 224) [87.42295262 16.99529019  5.14395347]\n",
      "(3, 224) [87.42250617 16.99536851  5.1439035 ]\n",
      "(3, 224) [87.42222715 16.99542474  5.14387007]\n",
      "(3, 224) [87.42206447 16.99550537  5.14383609]\n",
      "(3, 224) [87.42180217 16.99557588  5.1437993 ]\n",
      "(3, 224) [87.42143604 16.99566214  5.14375166]\n",
      "(3, 224) [87.42103758 16.99576183  5.14369804]\n",
      "(3, 224) [87.42091756 16.99583479  5.1436689 ]\n",
      "(3, 224) [87.42047231 16.99590978  5.14362004]\n",
      "(3, 224) [87.42013411 16.9959948   5.14357444]\n",
      "(3, 224) [87.41989681 16.99607714  5.14353558]\n",
      "(3, 224) [87.41955509 16.9961685   5.14348783]\n",
      "(3, 224) [87.41906223 16.99628225  5.14342439]\n",
      "(3, 224) [87.41867214 16.99637124  5.1433745 ]\n",
      "(3, 224) [87.41791602 16.99647979  5.14329716]\n",
      "(3, 224) [87.41735707 16.99657819  5.14323448]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  7%|█████                                                                      | 5207/76339 [00:02<00:28, 2479.17it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.4172003  16.99669996  5.14318837]\n",
      "(3, 224) [87.41697692 16.9968271   5.14313674]\n",
      "(3, 224) [87.41676907 16.99694709  5.14308818]\n",
      "(3, 224) [87.41672395 16.99708654  5.14304328]\n",
      "(3, 224) [87.41666136 16.99724524  5.14299155]\n",
      "(3, 224) [87.41671558 16.99740143  5.14294746]\n",
      "(3, 224) [87.41669009 16.99754933  5.14290116]\n",
      "(3, 224) [87.41685849 16.99771566  5.14286071]\n",
      "(3, 224) [87.41716392 16.99785939  5.14283518]\n",
      "(3, 224) [87.41734748 16.99799791  5.14280406]\n",
      "(3, 224) [87.41736117 16.99814496  5.14276035]\n",
      "(3, 224) [87.41755122 16.99826743  5.14273447]\n",
      "(3, 224) [87.41765291 16.99842459  5.14269285]\n",
      "(3, 224) [87.41801629 16.9985775   5.14266796]\n",
      "(3, 224) [87.41861461 16.99873308  5.14265608]\n",
      "(3, 224) [87.4190152  16.99884863  5.14264467]\n",
      "(3, 224) [87.41930332 16.99898242  5.14262113]\n",
      "(3, 224) [87.41930084 16.99911687  5.14258029]\n",
      "(3, 224) [87.41960127 16.99922584  5.14256497]\n",
      "(3, 224) [87.41971875 16.99933493  5.14253887]\n",
      "(3, 224) [87.42007321 16.99946857  5.14251929]\n",
      "(3, 224) [87.4203985  16.99954897  5.1425141 ]\n",
      "(3, 224) [87.42073131 16.99966466  5.14249866]\n",
      "(3, 224) [87.42104435 16.9998002   5.14247607]\n",
      "(3, 224) [87.4214497  16.9999104   5.14246657]\n",
      "(3, 224) [87.42182942 17.00004896  5.14244699]\n",
      "(3, 224) [87.42203627 17.00017171  5.14242201]\n",
      "(3, 224) [87.42228531 17.00030489  5.14239636]\n",
      "(3, 224) [87.42252916 17.00043316  5.14237188]\n",
      "(3, 224) [87.42247    17.00056021  5.14232993]\n",
      "(3, 224) [87.42238325 17.00065943  5.14229479]\n",
      "(3, 224) [87.42279293 17.00077738  5.14228319]\n",
      "(3, 224) [87.42314537 17.00088226  5.14227218]\n",
      "(3, 224) [87.42356856 17.00096761  5.14227124]\n",
      "(3, 224) [87.42359629 17.00106675  5.14224286]\n",
      "(3, 224) [87.42372902 17.0012102   5.14220726]\n",
      "(3, 224) [87.42375418 17.00135227  5.14216571]\n",
      "(3, 224) [87.42397355 17.00147946  5.14214011]\n",
      "(3, 224) [87.42385236 17.00161007  5.14209343]\n",
      "(3, 224) [87.42378226 17.00173826  5.14205049]\n",
      "(3, 224) [87.42398286 17.00180232  5.14204291]\n",
      "(3, 224) [87.42393302 17.00186356  5.14202144]\n",
      "(3, 224) [87.4241675  17.00190632  5.1420223 ]\n",
      "(3, 224) [87.42432615 17.00194379  5.14202029]\n",
      "(3, 224) [87.42438717 17.00196876  5.14201632]\n",
      "(3, 224) [87.42448728 17.0019982   5.14201329]\n",
      "(3, 224) [87.42464789 17.00204438  5.14200876]\n",
      "(3, 224) [87.42476607 17.00206591  5.14200919]\n",
      "(3, 224) [87.42457555 17.00208951  5.14199083]\n",
      "(3, 224) [87.424581   17.00210346  5.14198693]\n",
      "(3, 224) [87.42436725 17.00210252  5.14197464]\n",
      "(3, 224) [87.42426652 17.00213167  5.14195988]\n",
      "(3, 224) [87.42453991 17.00214977  5.14197049]\n",
      "(3, 224) [87.42468153 17.00214567  5.14198007]\n",
      "(3, 224) [87.42495306 17.00213127  5.14200041]\n",
      "(3, 224) [87.4249598  17.00208886  5.14201366]\n",
      "(3, 224) [87.42529021 17.00203657  5.14204898]\n",
      "(3, 224) [87.42551073 17.00201275  5.1420692 ]\n",
      "(3, 224) [87.42530024 17.00194261  5.14207807]\n",
      "(3, 224) [87.42515592 17.00187819  5.14208911]\n",
      "(3, 224) [87.42493428 17.00180004  5.14209976]\n",
      "(3, 224) [87.42456753 17.00170941  5.14210565]\n",
      "(3, 224) [87.42460549 17.0016022   5.14214043]\n",
      "(3, 224) [87.42456773 17.00148856  5.1421727 ]\n",
      "(3, 224) [87.42423798 17.0014257   5.14217235]\n",
      "(3, 224) [87.42414717 17.00133988  5.14219306]\n",
      "(3, 224) [87.42409339 17.00126747  5.14221188]\n",
      "(3, 224) [87.42393263 17.00117402  5.14223076]\n",
      "(3, 224) [87.42380036 17.00107009  5.14225452]\n",
      "(3, 224) [87.42374396 17.00095504  5.14228611]\n",
      "(3, 224) [87.42390346 17.00082219  5.14233583]\n",
      "(3, 224) [87.42392207 17.00070449  5.14237264]\n",
      "(3, 224) [87.42380735 17.000539    5.14241608]\n",
      "(3, 224) [87.42408463 17.00037073  5.14248344]\n",
      "(3, 224) [87.42396263 17.00021928  5.1425222 ]\n",
      "(3, 224) [87.42402188 17.00009347  5.14256387]\n",
      "(3, 224) [87.42419972 16.99995827  5.14261535]\n",
      "(3, 224) [87.42454159 16.99984965  5.14266842]\n",
      "(3, 224) [87.42483054 16.99971842  5.14272521]\n",
      "(3, 224) [87.42502144 16.99955297  5.1427866 ]\n",
      "(3, 224) [87.42502176 16.99940382  5.1428318 ]\n",
      "(3, 224) [87.42473072 16.99926592  5.14285646]\n",
      "(3, 224) [87.4245159  16.99912466  5.14288662]\n",
      "(3, 224) [87.42421405 16.99898252  5.14291192]\n",
      "(3, 224) [87.42377453 16.99884102  5.14292892]\n",
      "(3, 224) [87.42370275 16.99869391  5.14296926]\n",
      "(3, 224) [87.4234955  16.99854729  5.14300149]\n",
      "(3, 224) [87.42332834 16.9984125   5.1430325 ]\n",
      "(3, 224) [87.42298075 16.99828364  5.14305109]\n",
      "(3, 224) [87.42265947 16.99815373  5.14307154]\n",
      "(3, 224) [87.42256108 16.99800947  5.14310946]\n",
      "(3, 224) [87.42277406 16.99789212  5.14315755]\n",
      "(3, 224) [87.42266198 16.99777788  5.14318555]\n",
      "(3, 224) [87.42249488 16.99766652  5.14320944]\n",
      "(3, 224) [87.42243255 16.99755514  5.14323947]\n",
      "(3, 224) [87.42250779 16.99743686  5.14327969]\n",
      "(3, 224) [87.42238468 16.99735844  5.14329619]\n",
      "(3, 224) [87.42231565 16.99731382  5.14330563]\n",
      "(3, 224) [87.42203873 16.99726884  5.14330294]\n",
      "(3, 224) [87.42204231 16.99724149  5.14331141]\n",
      "(3, 224) [87.42169942 16.99718864  5.14330722]\n",
      "(3, 224) [87.42153271 16.99714223  5.14331145]\n",
      "(3, 224) [87.42157346 16.99705982  5.14333875]\n",
      "(3, 224) [87.42151684 16.99703952  5.14334156]\n",
      "(3, 224) [87.42129896 16.99702272  5.14333382]\n",
      "(3, 224) [87.42106897 16.99697514  5.14333468]\n",
      "(3, 224) [87.42082428 16.99694977  5.14332796]\n",
      "(3, 224) [87.42083831 16.99692096  5.14333749]\n",
      "(3, 224) [87.42092981 16.99691031  5.14334609]\n",
      "(3, 224) [87.42077296 16.99691159  5.14333648]\n",
      "(3, 224) [87.42074604 16.99694223  5.14332564]\n",
      "(3, 224) [87.42083528 16.99699815  5.14331399]\n",
      "(3, 224) [87.42092193 16.99706472  5.14329897]\n",
      "(3, 224) [87.42093459 16.99711494  5.14328454]\n",
      "(3, 224) [87.4210355  16.99717922  5.14327105]\n",
      "(3, 224) [87.42094463 16.99724784  5.14324496]\n",
      "(3, 224) [87.42078838 16.99734719  5.14320574]\n",
      "(3, 224) [87.42086149 16.99742527  5.14318644]\n",
      "(3, 224) [87.42089326 16.99747817  5.14317232]\n",
      "(3, 224) [87.42114403 16.99751649  5.14317548]\n",
      "(3, 224) [87.4214545  16.99757201  5.14317695]\n",
      "(3, 224) [87.42179083 16.99762148  5.14318178]\n",
      "(3, 224) [87.42203433 16.99764175  5.14318997]\n",
      "(3, 224) [87.42234772 16.99766462  5.14320149]\n",
      "(3, 224) [87.42251967 16.99764912  5.1432163 ]\n",
      "(3, 224) [87.42261216 16.997617    5.14323146]\n",
      "(3, 224) [87.42274452 16.99759015  5.14324736]\n",
      "(3, 224) [87.42273372 16.99756291  5.14325497]\n",
      "(3, 224) [87.42250831 16.99754345  5.14324759]\n",
      "(3, 224) [87.42280218 16.9975144   5.14327366]\n",
      "(3, 224) [87.4229522  16.99750928  5.14328402]\n",
      "(3, 224) [87.42319899 16.99750258  5.14330057]\n",
      "(3, 224) [87.42333798 16.99751358  5.14330542]\n",
      "(3, 224) [87.42321374 16.9975023   5.14330152]\n",
      "(3, 224) [87.42330938 16.99751221  5.14330415]\n",
      "(3, 224) [87.42337773 16.99753096  5.1433025 ]\n",
      "(3, 224) [87.42322938 16.99751344  5.14329907]\n",
      "(3, 224) [87.42332413 16.99746313  5.14331986]\n",
      "(3, 224) [87.42317775 16.99740951  5.14332747]\n",
      "(3, 224) [87.42323002 16.9973503   5.14334846]\n",
      "(3, 224) [87.4231814  16.99728287  5.14336601]\n",
      "(3, 224) [87.42314742 16.99723187  5.14337944]\n",
      "(3, 224) [87.42323874 16.99716874  5.14340392]\n",
      "(3, 224) [87.42324292 16.99712212  5.14341826]\n",
      "(3, 224) [87.42325286 16.99707601  5.14343279]\n",
      "(3, 224) [87.42332253 16.9970586   5.14344216]\n",
      "(3, 224) [87.42338932 16.99702348  5.14345671]\n",
      "(3, 224) [87.42350731 16.99699989  5.14347078]\n",
      "(3, 224) [87.42401015 16.99696924  5.14350963]\n",
      "(3, 224) [87.42415137 16.99693125  5.14352943]\n",
      "(3, 224) [87.42437525 16.99690686  5.14354997]\n",
      "(3, 224) [87.4247654  16.99687808  5.14358163]\n",
      "(3, 224) [87.4250019  16.996837    5.14360796]\n",
      "(3, 224) [87.42516603 16.99681397  5.14362459]\n",
      "(3, 224) [87.42539301 16.99676736  5.14365205]\n",
      "(3, 224) [87.42552569 16.99671038  5.1436771 ]\n",
      "(3, 224) [87.42553649 16.99667918  5.14368716]\n",
      "(3, 224) [87.42573877 16.99664726  5.14370871]\n",
      "(3, 224) [87.42580013 16.99658508  5.14373113]\n",
      "(3, 224) [87.42594174 16.99653984  5.14375315]\n",
      "(3, 224) [87.42585116 16.99650315  5.14375891]\n",
      "(3, 224) [87.42572662 16.99646828  5.14376213]\n",
      "(3, 224) [87.42577307 16.9964618   5.14376683]\n",
      "(3, 224) [87.42572172 16.9964889   5.14375561]\n",
      "(3, 224) [87.42557296 16.99651856  5.14373788]\n",
      "(3, 224) [87.42542663 16.99653333  5.1437248 ]\n",
      "(3, 224) [87.42551223 16.99658026  5.14371564]\n",
      "(3, 224) [87.42543548 16.99664474  5.14369161]\n",
      "(3, 224) [87.42565656 16.99672293  5.14368096]\n",
      "(3, 224) [87.42575598 16.99678763  5.14366724]\n",
      "(3, 224) [87.42569471 16.99683842  5.14364827]\n",
      "(3, 224) [87.42545638 16.99690335  5.1436146 ]\n",
      "(3, 224) [87.42553034 16.99696882  5.14359915]\n",
      "(3, 224) [87.42563123 16.99701177  5.1435921 ]\n",
      "(3, 224) [87.42566277 16.99704577  5.14358368]\n",
      "(3, 224) [87.42572885 16.99705618  5.14358442]\n",
      "(3, 224) [87.42551206 16.99706133  5.1435701 ]\n",
      "(3, 224) [87.42520278 16.99704295  5.14355746]\n",
      "(3, 224) [87.42497076 16.99703157  5.14354725]\n",
      "(3, 224) [87.4246394  16.99702586  5.14352948]\n",
      "(3, 224) [87.42469076 16.99708397  5.14351495]\n",
      "(3, 224) [87.42471997 16.99715453  5.14349536]\n",
      "(3, 224) [87.42459485 16.99720538  5.14347264]\n",
      "(3, 224) [87.42502202 16.99727788  5.14347586]\n",
      "(3, 224) [87.42536922 16.99735108  5.14347416]\n",
      "(3, 224) [87.42567259 16.99741281  5.14347334]\n",
      "(3, 224) [87.42572385 16.99744867  5.14346551]\n",
      "(3, 224) [87.4254664  16.9974825   5.14344014]\n",
      "(3, 224) [87.4253983  16.99751387  5.14342665]\n",
      "(3, 224) [87.42524833 16.9975511   5.14340658]\n",
      "(3, 224) [87.42490878 16.99758542  5.14337623]\n",
      "(3, 224) [87.42492442 16.99762328  5.14336571]\n",
      "(3, 224) [87.42457156 16.99763425  5.14334165]\n",
      "(3, 224) [87.42452995 16.99766752  5.14332915]\n",
      "(3, 224) [87.42410779 16.99767313  5.14330264]\n",
      "(3, 224) [87.42392069 16.99770555  5.14328184]\n",
      "(3, 224) [87.4237874  16.99772591  5.14326785]\n",
      "(3, 224) [87.4236978  16.99773492  5.14325986]\n",
      "(3, 224) [87.42336889 16.9977404   5.14323887]\n",
      "(3, 224) [87.42285205 16.99772667  5.14321262]\n",
      "(3, 224) [87.42250138 16.99770197  5.14319947]\n",
      "(3, 224) [87.42204594 16.99764842  5.14318888]\n",
      "(3, 224) [87.42152269 16.99758359  5.1431777 ]\n",
      "(3, 224) [87.42075513 16.99750556  5.14315614]\n",
      "(3, 224) [87.41987522 16.99739821  5.14313683]\n",
      "(3, 224) [87.41923138 16.99731424  5.14312435]\n",
      "(3, 224) [87.41850507 16.99721728  5.14311095]\n",
      "(3, 224) [87.41774529 16.99713884  5.14308997]\n",
      "(3, 224) [87.41721149 16.99703066  5.14309128]\n",
      "(3, 224) [87.41668232 16.99693453  5.14308921]\n",
      "(3, 224) [87.41614815 16.99685081  5.1430831 ]\n",
      "(3, 224) [87.41529883 16.99677811  5.14305511]\n",
      "(3, 224) [87.41465976 16.99672335  5.14303407]\n",
      "(3, 224) [87.41396193 16.99667217  5.14300849]\n",
      "(3, 224) [87.4132963  16.99663868  5.14297946]\n",
      "(3, 224) [87.41231533 16.99656712  5.14294339]\n",
      "(3, 224) [87.41168321 16.99648797  5.14293012]\n",
      "(3, 224) [87.41097792 16.99642527  5.14290758]\n",
      "(3, 224) [87.41031463 16.99634062  5.14289415]\n",
      "(3, 224) [87.40967194 16.99626228  5.14288002]\n",
      "(3, 224) [87.40926133 16.99621297  5.14287078]\n",
      "(3, 224) [87.40872815 16.99617355  5.14285134]\n",
      "(3, 224) [87.40855902 16.99612512  5.14285602]\n",
      "(3, 224) [87.40818412 16.99609686  5.14284251]\n",
      "(3, 224) [87.40759434 16.99603186  5.14282747]\n",
      "(3, 224) [87.40712445 16.99597075  5.14281831]\n",
      "(3, 224) [87.40663785 16.99592006  5.14280501]\n",
      "(3, 224) [87.40587001 16.99585417  5.14277976]\n",
      "(3, 224) [87.40509389 16.99574099  5.14276832]\n",
      "(3, 224) [87.40421019 16.9956036   5.14275785]\n",
      "(3, 224) [87.40326191 16.99544775  5.1427492 ]\n",
      "(3, 224) [87.40228356 16.99527636  5.14274347]\n",
      "(3, 224) [87.40131944 16.99511085  5.14273681]\n",
      "(3, 224) [87.40029205 16.99493547  5.14272939]\n",
      "(3, 224) [87.39932172 16.99475425  5.14272711]\n",
      "(3, 224) [87.39831438 16.99458465  5.14271913]\n",
      "(3, 224) [87.39721779 16.99442768  5.14270209]\n",
      "(3, 224) [87.39630771 16.99423271  5.14270752]\n",
      "(3, 224) [87.3950906  16.99401795  5.14270089]\n",
      "(3, 224) [87.39393094 16.99383536  5.1426879 ]\n",
      "(3, 224) [87.39285015 16.99364989  5.14268041]\n",
      "(3, 224) [87.39203647 16.99345263  5.1426922 ]\n",
      "(3, 224) [87.3911128  16.99331891  5.14267831]\n",
      "(3, 224) [87.39052331 16.99318552  5.14268397]\n",
      "(3, 224) [87.38984942 16.99304191  5.14268776]\n",
      "(3, 224) [87.38913923 16.9929658   5.14266899]\n",
      "(3, 224) [87.38862372 16.99285424  5.14267242]\n",
      "(3, 224) [87.38825778 16.99272198  5.1426909 ]\n",
      "(3, 224) [87.38760627 16.99259352  5.14269143]\n",
      "(3, 224) [87.38727644 16.99245958  5.14271256]\n",
      "(3, 224) [87.3868006  16.99233071  5.14272355]\n",
      "(3, 224) [87.38636234 16.99220914  5.14273453]\n",
      "(3, 224) [87.38583668 16.99210428  5.14273533]\n",
      "(3, 224) [87.38577943 16.99200576  5.14276177]\n",
      "(3, 224) [87.38555281 16.99189626  5.14278157]\n",
      "(3, 224) [87.3849713  16.99179751  5.14277724]\n",
      "(3, 224) [87.38463179 16.99172114  5.14278038]\n",
      "(3, 224) [87.38421505 16.99165327  5.1427764 ]\n",
      "(3, 224) [87.3837434  16.99159868  5.14276516]\n",
      "(3, 224) [87.38333051 16.99151217  5.14276702]\n",
      "(3, 224) [87.38279041 16.99146622  5.14274914]\n",
      "(3, 224) [87.38205852 16.9913972   5.14272695]\n",
      "(3, 224) [87.3816069  16.99135438  5.14271333]\n",
      "(3, 224) [87.38093709 16.99127898  5.14269671]\n",
      "(3, 224) [87.37999138 16.99117639  5.14267209]\n",
      "(3, 224) [87.37899483 16.99107776  5.14264328]\n",
      "(3, 224) [87.37798665 16.99099706  5.14260837]\n",
      "(3, 224) [87.3769105 16.9909248  5.1425669]\n",
      "(3, 224) [87.37607335 16.99085823  5.14253778]\n",
      "(3, 224) [87.37520552 16.99079496  5.14250585]\n",
      "(3, 224) [87.37447371 16.99070065  5.14249133]\n",
      "(3, 224) [87.37362131 16.99063477  5.1424611 ]\n",
      "(3, 224) [87.37287259 16.99055134  5.14244227]\n",
      "(3, 224) [87.37236899 16.99049178  5.14243066]\n",
      "(3, 224) [87.37185534 16.9904455   5.14241442]\n",
      "(3, 224) [87.37146268 16.99041342  5.14240102]\n",
      "(3, 224) [87.37054741 16.99039451  5.14235288]\n",
      "(3, 224) [87.36951416 16.99040155  5.14228993]\n",
      "(3, 224) [87.36843745 16.99044277  5.1422141 ]\n",
      "(3, 224) [87.36769539 16.99051096  5.14214979]\n",
      "(3, 224) [87.3667151  16.99063778  5.1420537 ]\n",
      "(3, 224) [87.36598327 16.99076234  5.14197289]\n",
      "(3, 224) [87.36538668 16.99088983  5.14189919]\n",
      "(3, 224) [87.36480191 16.99100737  5.14182917]\n",
      "(3, 224) [87.36431254 16.99112005  5.14176623]\n",
      "(3, 224) [87.3640602  16.99126662  5.14170699]\n",
      "(3, 224) [87.36341811 16.9914586   5.14161103]\n",
      "(3, 224) [87.36282411 16.99164746  5.14151884]\n",
      "(3, 224) [87.36228867 16.99181432  5.14143681]\n",
      "(3, 224) [87.36164847 16.99199794  5.14134349]\n",
      "(3, 224) [87.36090264 16.99218711  5.14124231]\n",
      "(3, 224) [87.36049837 16.99242037  5.14114792]\n",
      "(3, 224) [87.36004099 16.99266055  5.14104829]\n",
      "(3, 224) [87.35968624 16.99291573  5.14095017]\n",
      "(3, 224) [87.35908529 16.99317193  5.1408372 ]\n",
      "(3, 224) [87.35870171 16.99341818  5.14074007]\n",
      "(3, 224) [87.35868589 16.99366486  5.1406644 ]\n",
      "(3, 224) [87.35811072 16.99391246  5.14055557]\n",
      "(3, 224) [87.35782947 16.99417586  5.14045927]\n",
      "(3, 224) [87.35719036 16.99441449  5.1403494 ]\n",
      "(3, 224) [87.35650473 16.99462211  5.14024617]\n",
      "(3, 224) [87.35590204 16.99482025  5.1401507 ]\n",
      "(3, 224) [87.35570623 16.99501296  5.14008081]\n",
      "(3, 224) [87.35540421 16.99522274  5.1399995 ]\n",
      "(3, 224) [87.35523589 16.99539452  5.13993757]\n",
      "(3, 224) [87.35528528 16.99558048  5.13988417]\n",
      "(3, 224) [87.35534752 16.99576925  5.13983068]\n",
      "(3, 224) [87.35539838 16.99598405  5.13976867]\n",
      "(3, 224) [87.35550609 16.99618463  5.13971432]\n",
      "(3, 224) [87.35539933 16.99637834  5.13964941]\n",
      "(3, 224) [87.35515705 16.99657789  5.13957476]\n",
      "(3, 224) [87.35499088 16.99676933  5.13950704]\n",
      "(3, 224) [87.35480791 16.99694518  5.13944306]\n",
      "(3, 224) [87.35460763 16.99711657  5.13937939]\n",
      "(3, 224) [87.35435957 16.99730136  5.13930886]\n",
      "(3, 224) [87.35405438 16.99747689  5.13923778]\n",
      "(3, 224) [87.35374957 16.99764302  5.1391696 ]\n",
      "(3, 224) [87.35361768 16.99780357  5.13911327]\n",
      "(3, 224) [87.35363201 16.99795738  5.13906761]\n",
      "(3, 224) [87.35350342 16.99812383  5.1390097 ]\n",
      "(3, 224) [87.35336742 16.99826098  5.13896022]\n",
      "(3, 224) [87.3534138  16.99837062  5.13892982]\n",
      "(3, 224) [87.35334808 16.9984932   5.13888895]\n",
      "(3, 224) [87.35327733 16.99860075  5.13885233]\n",
      "(3, 224) [87.35332538 16.99870598  5.13882338]\n",
      "(3, 224) [87.35315933 16.99880611  5.13878338]\n",
      "(3, 224) [87.35292052 16.99890839  5.13873845]\n",
      "(3, 224) [87.35279702 16.99898474  5.13870813]\n",
      "(3, 224) [87.3527173  16.99904764  5.13868445]\n",
      "(3, 224) [87.35274392 16.99913687  5.13865907]\n",
      "(3, 224) [87.35276739 16.99919498  5.13864289]\n",
      "(3, 224) [87.35255649 16.99926237  5.13861014]\n",
      "(3, 224) [87.35230497 16.99931346  5.13857993]\n",
      "(3, 224) [87.35208954 16.99934462  5.13855785]\n",
      "(3, 224) [87.35169211 16.99935555  5.13853119]\n",
      "(3, 224) [87.35132204 16.99936634  5.1385062 ]\n",
      "(3, 224) [87.35102748 16.99940284  5.13847788]\n",
      "(3, 224) [87.35067801 16.99945727  5.13844094]\n",
      "(3, 224) [87.3501935  16.9995178   5.13839422]\n",
      "(3, 224) [87.34983999 16.99956949  5.13835786]\n",
      "(3, 224) [87.34969704 16.99960507  5.13833873]\n",
      "(3, 224) [87.34939679 16.9996126   5.13831882]\n",
      "(3, 224) [87.34918194 16.99970995  5.13827682]\n",
      "(3, 224) [87.34886375 16.99979855  5.13823139]\n",
      "(3, 224) [87.34863978 16.99988559  5.13819196]\n",
      "(3, 224) [87.34848842 17.00001157  5.13814507]\n",
      "(3, 224) [87.34852132 17.0001464   5.13810631]\n",
      "(3, 224) [87.34837503 17.00031093  5.13804805]\n",
      "(3, 224) [87.34829877 17.00051755  5.13798119]\n",
      "(3, 224) [87.34865094 17.00070157  5.13794631]\n",
      "(3, 224) [87.34896056 17.00090784  5.13790223]\n",
      "(3, 224) [87.34928382 17.00114987  5.13784819]\n",
      "(3, 224) [87.34974294 17.00134945  5.13781495]\n",
      "(3, 224) [87.34989048 17.00155283  5.13776226]\n",
      "(3, 224) [87.34985747 17.00173631  5.13770499]\n",
      "(3, 224) [87.3498405  17.00194623  5.13764067]\n",
      "(3, 224) [87.35006222 17.00215008  5.13759222]\n",
      "(3, 224) [87.35023106 17.00236879  5.1375362 ]\n",
      "(3, 224) [87.35029765 17.0025801   5.13747637]\n",
      "(3, 224) [87.35017044 17.00282084  5.13739629]\n",
      "(3, 224) [87.35029801 17.00305853  5.13733209]\n",
      "(3, 224) [87.35020448 17.00331189  5.13725015]\n",
      "(3, 224) [87.35025111 17.00356692  5.13717596]\n",
      "(3, 224) [87.35029661 17.00381283  5.1371044 ]\n",
      "(3, 224) [87.35029522 17.00405351  5.13703167]\n",
      "(3, 224) [87.35009653 17.00429455  5.13694724]\n",
      "(3, 224) [87.34975651 17.00452546  5.13685757]\n",
      "(3, 224) [87.34968096 17.00474874  5.13678577]\n",
      "(3, 224) [87.34959821 17.00497612  5.1367123 ]\n",
      "(3, 224) [87.3494369  17.00516872  5.13664473]\n",
      "(3, 224) [87.34905178 17.00539665  5.13655335]\n",
      "(3, 224) [87.3490213  17.00570289  5.13645929]\n",
      "(3, 224) [87.34897179 17.00601133  5.13636339]\n",
      "(3, 224) [87.34891043 17.00634622  5.1362589 ]\n",
      "(3, 224) [87.34892848 17.00667099  5.1361621 ]\n",
      "(3, 224) [87.34876162 17.00699705  5.13605406]\n",
      "(3, 224) [87.34864802 17.00733325  5.13594609]\n",
      "(3, 224) [87.34828504 17.00768474  5.13581892]\n",
      "(3, 224) [87.34823703 17.0080827   5.1356962 ]\n",
      "(3, 224) [87.34780474 17.00850022  5.13554517]\n",
      "(3, 224) [87.34750751 17.00889194  5.13540987]\n",
      "(3, 224) [87.34735068 17.00928912  5.13528117]\n",
      "(3, 224) [87.34717023 17.00970434  5.13514556]\n",
      "(3, 224) [87.34702045 17.01007398  5.13502544]\n",
      "(3, 224) [87.34702426 17.01044111  5.13491513]\n",
      "(3, 224) [87.34717465 17.01085761  5.13479863]\n",
      "(3, 224) [87.34707652 17.01128525  5.13466422]\n",
      "(3, 224) [87.34707272 17.01172036  5.13453321]\n",
      "(3, 224) [87.34679203 17.0122175   5.1343674 ]\n",
      "(3, 224) [87.3468514  17.01274917  5.13421122]\n",
      "(3, 224) [87.34692952 17.01327118  5.13405896]\n",
      "(3, 224) [87.3468752  17.01381811  5.13389165]\n",
      "(3, 224) [87.34672997 17.01436041  5.13372034]\n",
      "(3, 224) [87.3468597  17.0148854   5.13357029]\n",
      "(3, 224) [87.34706459 17.01542205  5.13342121]\n",
      "(3, 224) [87.34731563 17.01595239  5.13327674]\n",
      "(3, 224) [87.347387   17.01648536  5.13312095]\n",
      "(3, 224) [87.34771736 17.01702113  5.13297945]\n",
      "(3, 224) [87.34794641 17.01755781  5.13283175]\n",
      "(3, 224) [87.34816368 17.01811216  5.13267804]\n",
      "(3, 224) [87.34863092 17.01868049  5.13253483]\n",
      "(3, 224) [87.34940208 17.0192575   5.13240682]\n",
      "(3, 224) [87.35023172 17.01986179  5.13227411]\n",
      "(3, 224) [87.35126934 17.02044875  5.13215874]\n",
      "(3, 224) [87.35214333 17.0210118   5.13204105]\n",
      "(3, 224) [87.35296179 17.02156809  5.1319222 ]\n",
      "(3, 224) [87.35387742 17.02212054  5.13181015]\n",
      "(3, 224) [87.3543654  17.02265811  5.13167745]\n",
      "(3, 224) [87.35496156 17.02323232  5.13154006]\n",
      "(3, 224) [87.35531161 17.02376854  5.13139954]\n",
      "(3, 224) [87.35551881 17.02436823  5.13123173]\n",
      "(3, 224) [87.35594262 17.02498509  5.13107155]\n",
      "(3, 224) [87.35624245 17.0256391   5.13089308]\n",
      "(3, 224) [87.35674081 17.0262857   5.13072854]\n",
      "(3, 224) [87.35711995 17.0269822   5.13054215]\n",
      "(3, 224) [87.35720614 17.02762818  5.13035366]\n",
      "(3, 224) [87.35784369 17.02828448  5.13019429]\n",
      "(3, 224) [87.35839546 17.02891426  5.13003786]\n",
      "(3, 224) [87.35905436 17.0295017   5.12990031]\n",
      "(3, 224) [87.35966011 17.03010241  5.12975562]\n",
      "(3, 224) [87.36012859 17.03069542  5.12960522]\n",
      "(3, 224) [87.36083775 17.03129348  5.12946732]\n",
      "(3, 224) [87.36165407 17.03189237  5.12933545]\n",
      "(3, 224) [87.36245715 17.03250778  5.12919788]\n",
      "(3, 224) [87.36344917 17.03313463  5.12906785]\n",
      "(3, 224) [87.36461443 17.033798    5.12893693]\n",
      "(3, 224) [87.36601431 17.03450442  5.12880695]\n",
      "(3, 224) [87.36759327 17.03520036  5.12869058]\n",
      "(3, 224) [87.36910253 17.03588555  5.12857329]\n",
      "(3, 224) [87.37042669 17.03655659  5.12844937]\n",
      "(3, 224) [87.37157579 17.03727157  5.12830207]\n",
      "(3, 224) [87.37278356 17.03796011  5.12816612]\n",
      "(3, 224) [87.37392353 17.03868755  5.12801455]\n",
      "(3, 224) [87.37509191 17.03942459  5.12786182]\n",
      "(3, 224) [87.37662819 17.04013351  5.12773893]\n",
      "(3, 224) [87.37744359 17.04073306  5.12760675]\n",
      "(3, 224) [87.37767797 17.04131673  5.12744529]\n",
      "(3, 224) [87.37851954 17.04191574  5.12731493]\n",
      "(3, 224) [87.3789999  17.04248331  5.1271729 ]\n",
      "(3, 224) [87.38003626 17.043111    5.12704533]\n",
      "(3, 224) [87.38099944 17.04373003  5.12691603]\n",
      "(3, 224) [87.38189553 17.04430655  5.1267956 ]\n",
      "(3, 224) [87.38285956 17.04489444  5.12667559]\n",
      "(3, 224) [87.3835304  17.04548163  5.12653865]\n",
      "(3, 224) [87.38418006 17.04605834  5.1264036 ]\n",
      "(3, 224) [87.38470007 17.04665917  5.12625382]\n",
      "(3, 224) [87.38546922 17.04725019  5.12612146]\n",
      "(3, 224) [87.38650797 17.04782942  5.12600846]\n",
      "(3, 224) [87.38734282 17.04842487  5.12587855]\n",
      "(3, 224) [87.38833541 17.04901531  5.12575939]\n",
      "(3, 224) [87.38929466 17.04959886  5.12564037]\n",
      "(3, 224) [87.39039723 17.05019942  5.12552465]\n",
      "(3, 224) [87.39143958 17.05086284  5.12538659]\n",
      "(3, 224) [87.39249678 17.05151773  5.12525189]\n",
      "(3, 224) [87.39363018 17.0521898   5.12511635]\n",
      "(3, 224) [87.39478719 17.05285813  5.12498334]\n",
      "(3, 224) [87.39598722 17.05351767  5.12485543]\n",
      "(3, 224) [87.39711678 17.05416671  5.12472659]\n",
      "(3, 224) [87.39815661 17.05481652  5.12459225]\n",
      "(3, 224) [87.39924738 17.05548685  5.12445475]\n",
      "(3, 224) [87.40041312 17.05614358  5.12432574]\n",
      "(3, 224) [87.40171194 17.05685311  5.12418861]\n",
      "(3, 224) [87.40306253 17.05758402  5.12404808]\n",
      "(3, 224) [87.40443748 17.05831989  5.12390757]\n",
      "(3, 224) [87.40574768 17.05905603  5.1237632 ]\n",
      "(3, 224) [87.40710382 17.05981018  5.12361604]\n",
      "(3, 224) [87.40813247 17.06047818  5.12347559]\n",
      "(3, 224) [87.40926333 17.06113191  5.12334537]\n",
      "(3, 224) [87.41024723 17.06180703  5.12320018]\n",
      "(3, 224) [87.41118487 17.06246362  5.12305797]\n",
      "(3, 224) [87.41193519 17.06313369  5.12290056]\n",
      "(3, 224) [87.41283551 17.06379831  5.12275354]\n",
      "(3, 224) [87.41378002 17.06446399  5.12260882]\n",
      "(3, 224) [87.41429968 17.06512302  5.12244118]\n",
      "(3, 224) [87.41508784 17.06575401  5.12229768]\n",
      "(3, 224) [87.41579171 17.06639089  5.12214755]\n",
      "(3, 224) [87.41668608 17.06704594  5.12200311]\n",
      "(3, 224) [87.41730065 17.06770526  5.12184095]\n",
      "(3, 224) [87.41819046 17.06836587  5.1216945 ]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  7%|█████▎                                                                     | 5456/76339 [00:02<00:29, 2399.70it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "(3, 224) [87.41913219 17.06901154  5.12155563]\n",
      "(3, 224) [87.41988444 17.06965732  5.12140561]\n",
      "(3, 224) [87.42074109 17.07029911  5.12126291]\n",
      "(3, 224) [87.42190599 17.07091011  5.12114762]\n",
      "(3, 224) [87.42316273 17.07153002  5.121035  ]\n",
      "(3, 224) [87.42406597 17.07209421  5.12091848]\n",
      "(3, 224) [87.425288   17.07260653  5.12083608]\n",
      "(3, 224) [87.42632525 17.073078    5.12075513]\n",
      "(3, 224) [87.42751607 17.07355228  5.12068228]\n",
      "(3, 224) [87.4286869  17.07410112  5.12058593]\n",
      "(3, 224) [87.42998186 17.07464004  5.12049981]\n",
      "(3, 224) [87.43114133 17.0751861   5.12040362]\n",
      "(3, 224) [87.43225454 17.07571986  5.12030841]\n",
      "(3, 224) [87.43324929 17.07625168  5.12020676]\n",
      "(3, 224) [87.43413593 17.07679629  5.12009497]\n",
      "(3, 224) [87.43487454 17.07737226  5.11996502]\n",
      "(3, 224) [87.43581669 17.07798043  5.11983741]\n",
      "(3, 224) [87.437109   17.07861091  5.11972363]\n",
      "(3, 224) [87.43804028 17.0792294   5.11959227]\n",
      "(3, 224) [87.43919779 17.07980681  5.11948645]\n",
      "(3, 224) [87.44016544 17.08035365  5.11937873]\n",
      "(3, 224) [87.44123031 17.08086642  5.11928695]\n",
      "(3, 224) [87.44245586 17.08135378  5.11921229]\n",
      "(3, 224) [87.44351422 17.08182294  5.11913334]\n",
      "(3, 224) [87.44448426 17.08228115  5.11905244]\n",
      "(3, 224) [87.44548748 17.08272632  5.1189775 ]\n",
      "(3, 224) [87.44626922 17.0831808   5.11888671]\n",
      "(3, 224) [87.4473539  17.08360951  5.11882143]\n",
      "(3, 224) [87.4480184  17.08405656  5.118726  ]\n",
      "(3, 224) [87.44868789 17.08452727  5.11862376]\n",
      "(3, 224) [87.44933683 17.08498065  5.11852552]\n",
      "(3, 224) [87.45011249 17.08541264  5.11844119]\n",
      "(3, 224) [87.45082664 17.08585499  5.11835012]\n",
      "(3, 224) [87.45161466 17.08631957  5.11825678]\n",
      "(3, 224) [87.45224647 17.08678041  5.11815538]\n",
      "(3, 224) [87.45308697 17.08723691  5.11806756]\n",
      "(3, 224) [87.45386799 17.08764488  5.11799082]\n",
      "(3, 224) [87.45440697 17.08805288  5.11789993]\n",
      "(3, 224) [87.45497202 17.08843392  5.11781862]\n",
      "(3, 224) [87.45558048 17.08884213  5.11773172]\n",
      "(3, 224) [87.4560579  17.08923721  5.11764106]\n",
      "(3, 224) [87.456534   17.089685    5.11753445]\n",
      "(3, 224) [87.45692124 17.09010847  5.11743004]\n",
      "(3, 224) [87.45729449 17.09048581  5.11733862]\n",
      "(3, 224) [87.45778866 17.09085784  5.11725586]\n",
      "(3, 224) [87.45822521 17.09124045  5.11716652]\n",
      "(3, 224) [87.45858075 17.09162485  5.11707189]\n",
      "(3, 224) [87.45857088 17.09199989  5.1169586 ]\n",
      "(3, 224) [87.45861399 17.09238927  5.11684415]\n",
      "(3, 224) [87.45861433 17.09280087  5.11672051]\n",
      "(3, 224) [87.45853619 17.09320978  5.11659309]\n",
      "(3, 224) [87.45850791 17.09365347  5.1164582 ]\n",
      "(3, 224) [87.45841203 17.09405008  5.11633353]\n",
      "(3, 224) [87.45858317 17.09443837  5.11622694]\n",
      "(3, 224) [87.45876461 17.09483939  5.11611713]\n",
      "(3, 224) [87.45898078 17.09525744  5.1160043 ]\n",
      "(3, 224) [87.45898237 17.09567938  5.11587774]\n",
      "(3, 224) [87.45906347 17.0961143   5.11575195]\n",
      "(3, 224) [87.45904014 17.09656943  5.11561398]\n",
      "(3, 224) [87.45918392 17.09699328  5.11549515]\n",
      "(3, 224) [87.45914893 17.09742564  5.11536334]\n",
      "(3, 224) [87.45939013 17.09787047  5.115244  ]\n",
      "(3, 224) [87.45958071 17.09829344  5.11512819]\n",
      "(3, 224) [87.4595123  17.09872769  5.11499391]\n",
      "(3, 224) [87.45938766 17.0991888   5.11484833]\n",
      "(3, 224) [87.45961551 17.09966823  5.11471783]\n",
      "(3, 224) [87.45975692 17.10012396  5.11458939]\n",
      "(3, 224) [87.45992838 17.10054597  5.11447292]\n",
      "(3, 224) [87.46005615 17.10097066  5.11435308]\n",
      "(3, 224) [87.46037088 17.10141536  5.11423815]\n",
      "(3, 224) [87.46073974 17.10187201  5.11412283]\n",
      "(3, 224) [87.46093204 17.1023332   5.11399584]\n",
      "(3, 224) [87.46122487 17.10281697  5.11386793]\n",
      "(3, 224) [87.46175992 17.1033183   5.11374888]\n",
      "(3, 224) [87.46222518 17.10379293  5.11363378]\n",
      "(3, 224) [87.4625331  17.10430267  5.11349889]\n",
      "(3, 224) [87.46304494 17.10479454  5.11338134]\n",
      "(3, 224) [87.46357097 17.10529308  5.11326264]\n",
      "(3, 224) [87.46383495 17.10578881  5.11312942]\n",
      "(3, 224) [87.46431074 17.10630852  5.11300144]\n",
      "(3, 224) [87.46470014 17.10681377  5.11287283]\n",
      "(3, 224) [87.46528846 17.10729252  5.1127638 ]\n",
      "(3, 224) [87.46571462 17.10775116  5.11265132]\n",
      "(3, 224) [87.46613245 17.10820529  5.11253975]\n",
      "(3, 224) [87.46658679 17.10867673  5.11242507]\n",
      "(3, 224) [87.46685293 17.10914294  5.11230096]\n",
      "(3, 224) [87.46737066 17.10964692  5.11218015]\n",
      "(3, 224) [87.46784706 17.11010399  5.11207109]\n",
      "(3, 224) [87.46796813 17.11056774  5.11193926]\n",
      "(3, 224) [87.46803042 17.11104514  5.11179992]\n",
      "(3, 224) [87.46810673 17.11150071  5.11166802]\n",
      "(3, 224) [87.4678883  17.11198381  5.11151066]\n",
      "(3, 224) [87.46801871 17.11246399  5.11137457]\n",
      "(3, 224) [87.4681579  17.11294268  5.11123947]\n",
      "(3, 224) [87.46805947 17.11344495  5.11108333]\n",
      "(3, 224) [87.46779997 17.11391479  5.11092754]\n",
      "(3, 224) [87.46740563 17.11435363  5.11077324]\n",
      "(3, 224) [87.46703446 17.11480437  5.11061669]\n",
      "(3, 224) [87.46674725 17.11527103  5.11046036]\n",
      "(3, 224) [87.46642491 17.11572718  5.11030516]\n",
      "(3, 224) [87.46608457 17.11617667  5.11015089]\n",
      "(3, 224) [87.46554348 17.11664078  5.10998056]\n",
      "(3, 224) [87.46532264 17.1171242   5.10982325]\n",
      "(3, 224) [87.46473941 17.11760845  5.1096445 ]\n",
      "(3, 224) [87.46452144 17.11806406  5.10949565]\n",
      "(3, 224) [87.46403768 17.1185149   5.10933266]\n",
      "(3, 224) [87.46380989 17.11896776  5.10918401]\n",
      "(3, 224) [87.46367992 17.1194272   5.10903912]\n",
      "(3, 224) [87.46331928 17.11986581  5.10888687]\n",
      "(3, 224) [87.46279351 17.12030975  5.10872339]\n",
      "(3, 224) [87.46275792 17.12076196  5.1085861 ]\n",
      "(3, 224) [87.46264657 17.12120057  5.10844844]\n",
      "(3, 224) [87.46242213 17.12161256  5.1083121 ]\n",
      "(3, 224) [87.46245979 17.1220493   5.10818367]\n",
      "(3, 224) [87.46235038 17.12248128  5.10804808]\n",
      "(3, 224) [87.46236599 17.12288751  5.10792753]\n",
      "(3, 224) [87.46234578 17.1232175   5.10782775]\n",
      "(3, 224) [87.46212865 17.12355165  5.10771519]\n",
      "(3, 224) [87.46221911 17.12388333  5.10762143]\n",
      "(3, 224) [87.46228916 17.12422857  5.1075224 ]\n",
      "(3, 224) [87.46258227 17.12457082  5.10743729]\n",
      "(3, 224) [87.46287975 17.12491271  5.10735256]\n",
      "(3, 224) [87.463222   17.12523095  5.10727755]\n",
      "(3, 224) [87.46336488 17.12552849  5.10719707]\n",
      "(3, 224) [87.46365616 17.12581579  5.10712843]\n",
      "(3, 224) [87.46396172 17.1261147   5.10705715]\n",
      "(3, 224) [87.46421764 17.12638553  5.10699132]\n",
      "(3, 224) [87.4643336  17.12666929  5.10691345]\n",
      "(3, 224) [87.46450215 17.12697496  5.10683205]\n",
      "(3, 224) [87.46462197 17.12727301  5.10675008]\n",
      "(3, 224) [87.46453665 17.12752048  5.10667127]\n",
      "(3, 224) [87.46464775 17.12774906  5.10660959]\n",
      "(3, 224) [87.46479402 17.12794488  5.10655974]\n",
      "(3, 224) [87.4649505  17.12807851  5.10652907]\n",
      "(3, 224) [87.46519043 17.12817161  5.10651534]\n",
      "(3, 224) [87.46510139 17.12828682  5.10647582]\n",
      "(3, 224) [87.46553879 17.12838839  5.10647111]\n",
      "(3, 224) [87.46574213 17.12847123  5.10645831]\n",
      "(3, 224) [87.46565303 17.12856878  5.10642405]\n",
      "(3, 224) [87.46602902 17.12864997  5.10642181]\n",
      "(3, 224) [87.46623705 17.12872293  5.10641222]\n",
      "(3, 224) [87.46639834 17.12881076  5.10639548]\n",
      "(3, 224) [87.46652302 17.12888316  5.10638118]\n",
      "(3, 224) [87.46672431 17.12892951  5.10637912]\n",
      "(3, 224) [87.46682165 17.1289694   5.10637291]\n",
      "(3, 224) [87.46689    17.12902194  5.10636125]\n",
      "(3, 224) [87.46699391 17.12907507  5.10635148]\n",
      "(3, 224) [87.46699532 17.12910377  5.10634301]\n",
      "(3, 224) [87.46672871 17.1291123   5.1063249 ]\n",
      "(3, 224) [87.46634276 17.12909821  5.10630657]\n",
      "(3, 224) [87.46596946 17.12906756  5.10629391]\n",
      "(3, 224) [87.46582689 17.12903914  5.10629406]\n",
      "(3, 224) [87.46562818 17.12902756  5.10628592]\n",
      "(3, 224) [87.46519757 17.12898768  5.10627266]\n",
      "(3, 224) [87.46490933 17.12900672  5.10625016]\n",
      "(3, 224) [87.46500776 17.12899325  5.10625992]\n",
      "(3, 224) [87.46467193 17.12892822  5.10625968]\n",
      "(3, 224) [87.46458486 17.12882135  5.10628642]\n",
      "(3, 224) [87.46455919 17.12868416  5.10632577]\n",
      "(3, 224) [87.46435247 17.12849166  5.10637099]\n",
      "(3, 224) [87.4642417  17.12833958  5.1064098 ]\n",
      "(3, 224) [87.46377318 17.12819294  5.10642612]\n",
      "(3, 224) [87.46337289 17.12806786  5.10644001]\n",
      "(3, 224) [87.46303472 17.12799678  5.10644146]\n",
      "(3, 224) [87.46228957 17.12789978  5.10642687]\n",
      "(3, 224) [87.46188469 17.12781116  5.10642964]\n",
      "(3, 224) [87.46111614 17.12773933  5.10640618]\n",
      "(3, 224) [87.46050805 17.12765478  5.10639589]\n",
      "(3, 224) [87.45958399 17.12750949  5.10638525]\n",
      "(3, 224) [87.45864477 17.12741707  5.10635798]\n",
      "(3, 224) [87.45767292 17.12733791  5.10632487]\n",
      "(3, 224) [87.45670348 17.1272224   5.10630272]\n",
      "(3, 224) [87.45567454 17.12715217  5.10626361]\n",
      "(3, 224) [87.45501809 17.12712829  5.10623243]\n",
      "(3, 224) [87.45420266 17.12711315  5.10618936]\n",
      "(3, 224) [87.45355657 17.12705958  5.10616762]\n",
      "(3, 224) [87.45305736 17.12700629  5.10615437]\n",
      "(3, 224) [87.45246205 17.12695123  5.10613603]\n",
      "(3, 224) [87.45168469 17.12687817  5.10611242]\n",
      "(3, 224) [87.45065334 17.12682355  5.10606853]\n",
      "(3, 224) [87.45045467 17.12685129  5.10604866]\n",
      "(3, 224) [87.45090743 17.1268661   5.10607069]\n",
      "(3, 224) [87.45085349 17.12683234  5.1060776 ]\n",
      "(3, 224) [87.45107573 17.12680955  5.10609737]\n",
      "(3, 224) [87.45076504 17.12677042  5.10609089]\n",
      "(3, 224) [87.45044456 17.12672125  5.10608683]\n",
      "(3, 224) [87.45041156 17.12669287  5.10609337]\n",
      "(3, 224) [87.45027778 17.12666645  5.10609344]\n",
      "(3, 224) [87.45006146 17.12663506  5.10609017]\n",
      "(3, 224) [87.44976675 17.12659211  5.10608576]\n",
      "(3, 224) [87.44968266 17.1265265   5.10610041]\n",
      "(3, 224) [87.44917799 17.12646916  5.10608804]\n",
      "(3, 224) [87.44873927 17.12640893  5.10608039]\n",
      "(3, 224) [87.44844201 17.12637315  5.1060737 ]\n",
      "(3, 224) [87.44781607 17.12630352  5.10605792]\n",
      "(3, 224) [87.447292   17.12625371  5.10604218]\n",
      "(3, 224) [87.44680548 17.12617664  5.10603676]\n",
      "(3, 224) [87.4464159  17.12607789  5.10604346]\n",
      "(3, 224) [87.44600625 17.12602638  5.1060349 ]\n",
      "(3, 224) [87.44564807 17.12599394  5.10602365]\n",
      "(3, 224) [87.4451575  17.12595014  5.10600807]\n",
      "(3, 224) [87.44461599 17.12591794  5.10598604]\n",
      "(3, 224) [87.44428542 17.12590671  5.10597009]\n",
      "(3, 224) [87.44396532 17.12588865  5.10595678]\n",
      "(3, 224) [87.44372621 17.12585422  5.10595308]\n",
      "(3, 224) [87.44319529 17.12579748  5.105939  ]\n",
      "(3, 224) [87.44266992 17.12570532  5.10593583]\n",
      "(3, 224) [87.44206749 17.1256075   5.10592983]\n",
      "(3, 224) [87.44142932 17.12549623  5.10592576]\n",
      "(3, 224) [87.44079977 17.1253847   5.10592226]\n",
      "(3, 224) [87.44007761 17.12527278  5.10591347]\n",
      "(3, 224) [87.43966635 17.12519706  5.10591205]\n",
      "(3, 224) [87.4390497  17.12511729  5.10589984]\n",
      "(3, 224) [87.43840964 17.12499316  5.1058995 ]\n",
      "(3, 224) [87.43810126 17.12486308  5.10592031]\n",
      "(3, 224) [87.4375727  17.12474748  5.10592393]\n",
      "(3, 224) [87.43683279 17.12465242  5.10590907]\n",
      "(3, 224) [87.43637558 17.12458165  5.10590349]\n",
      "(3, 224) [87.43587452 17.12450278  5.10589775]\n",
      "(3, 224) [87.43531622 17.12444936  5.10588107]\n",
      "(3, 224) [87.43504275 17.1243821   5.10588517]\n",
      "(3, 224) [87.43421021 17.12429145  5.10586358]\n",
      "(3, 224) [87.43344463 17.12421703  5.10584107]\n",
      "(3, 224) [87.43253032 17.12414641  5.10580873]\n",
      "(3, 224) [87.43193652 17.12407849  5.10579432]\n",
      "(3, 224) [87.43100872 17.12399193  5.10576595]\n",
      "(3, 224) [87.43000847 17.12388426  5.10573965]\n",
      "(3, 224) [87.42922447 17.12378736  5.10572278]\n",
      "(3, 224) [87.42837357 17.12368879  5.1057025 ]\n",
      "(3, 224) [87.4276429  17.12361346  5.1056823 ]\n",
      "(3, 224) [87.42691001 17.12360394  5.10564229]\n",
      "(3, 224) [87.42615923 17.12360162  5.10559909]\n",
      "(3, 224) [87.42563944 17.12364313  5.10555627]\n",
      "(3, 224) [87.42516132 17.12361586  5.10553647]\n",
      "(3, 224) [87.42470135 17.12360975  5.10551141]\n",
      "(3, 224) [87.42442269 17.1236125   5.10549429]\n",
      "(3, 224) [87.42388635 17.12362754  5.10545844]\n",
      "(3, 224) [87.42351797 17.12364768  5.10543089]\n",
      "(3, 224) [87.42314967 17.12364267  5.10541085]\n",
      "(3, 224) [87.42305405 17.12361514  5.10541349]\n",
      "(3, 224) [87.42281425 17.12354442  5.10542061]\n",
      "(3, 224) [87.42233539 17.12346301  5.10541695]\n",
      "(3, 224) [87.42220941 17.12338481  5.10543296]\n",
      "(3, 224) [87.42189341 17.12336162  5.10542143]\n",
      "(3, 224) [87.42149442 17.12334992  5.1054016 ]\n",
      "(3, 224) [87.42119486 17.12338783  5.10537276]\n",
      "(3, 224) [87.42103233 17.12347699  5.10533661]\n",
      "(3, 224) [87.42080065 17.12353315  5.10530629]\n",
      "(3, 224) [87.42064954 17.12359347  5.10527942]\n",
      "(3, 224) [87.42053495 17.1236205   5.10526464]\n",
      "(3, 224) [87.42045488 17.12364669  5.10525213]\n",
      "(3, 224) [87.42004087 17.123708    5.1052096 ]\n",
      "(3, 224) [87.42008905 17.12378141  5.10519048]\n",
      "(3, 224) [87.42024668 17.12385676  5.10517717]\n",
      "(3, 224) [87.42014886 17.12391052  5.10515539]\n",
      "(3, 224) [87.42011567 17.12397944  5.10513286]\n",
      "(3, 224) [87.42011608 17.12405315  5.10511086]\n",
      "(3, 224) [87.42017921 17.12411157  5.1050971 ]\n",
      "(3, 224) [87.42035446 17.12414963  5.10509597]\n",
      "(3, 224) [87.42061245 17.12420197  5.10509541]\n",
      "(3, 224) [87.4207628  17.12419502  5.10510627]\n",
      "(3, 224) [87.4213008  17.12424303  5.10512336]\n",
      "(3, 224) [87.42158383 17.12428281  5.10512801]\n",
      "(3, 224) [87.42192298 17.12430961  5.10513981]\n",
      "(3, 224) [87.42215361 17.12436073  5.10513802]\n",
      "(3, 224) [87.42197819 17.12439984  5.10511609]\n",
      "(3, 224) [87.42219643 17.12446098  5.10511059]\n",
      "(3, 224) [87.42248947 17.12457136  5.10509475]\n",
      "(3, 224) [87.42261612 17.12473253  5.10505405]\n",
      "(3, 224) [87.42305531 17.12490052  5.10502954]\n",
      "(3, 224) [87.4235345  17.12505607  5.10501109]\n",
      "(3, 224) [87.42390033 17.1252242   5.10498227]\n",
      "(3, 224) [87.42424023 17.12538281  5.10495479]\n",
      "(3, 224) [87.42451458 17.12551227  5.10493219]\n",
      "(3, 224) [87.42499743 17.12564202  5.10492166]\n",
      "(3, 224) [87.42556967 17.12574009  5.10492582]\n",
      "(3, 224) [87.42633996 17.12585482  5.10493657]\n",
      "(3, 224) [87.42674712 17.12596733  5.10492676]\n",
      "(3, 224) [87.42725152 17.12607041  5.10492544]\n",
      "(3, 224) [87.42789613 17.12615113  5.10493899]\n",
      "(3, 224) [87.42835063 17.12620926  5.10494819]\n",
      "(3, 224) [87.42914428 17.12627759  5.10497415]\n",
      "(3, 224) [87.42983963 17.12635196  5.10499258]\n",
      "(3, 224) [87.43037419 17.1264321   5.10499988]\n",
      "(3, 224) [87.43101597 17.12650352  5.10501605]\n",
      "(3, 224) [87.43167831 17.12654801  5.10504146]\n",
      "(3, 224) [87.43227454 17.12662183  5.10505424]\n",
      "(3, 224) [87.4328704  17.12667855  5.10507212]\n",
      "(3, 224) [87.43359603 17.12669623  5.10510922]\n",
      "(3, 224) [87.43393715 17.1267334   5.10511805]\n",
      "(3, 224) [87.43430439 17.12674862  5.10513496]\n",
      "(3, 224) [87.43503407 17.12680187  5.10516168]\n",
      "(3, 224) [87.43579274 17.12686078  5.10518841]\n",
      "(3, 224) [87.43637592 17.12690431  5.10520947]\n",
      "(3, 224) [87.43698904 17.12693981  5.10523468]\n",
      "(3, 224) [87.4376828  17.12697084  5.10526593]\n",
      "(3, 224) [87.43827716 17.12699315  5.10529398]\n",
      "(3, 224) [87.43866356 17.12701267  5.10531071]\n",
      "(3, 224) [87.43909799 17.12702329  5.1053329 ]\n",
      "(3, 224) [87.43943944 17.12701634  5.10535491]\n",
      "(3, 224) [87.43980566 17.12702049  5.10537506]\n",
      "(3, 224) [87.43995962 17.12702664  5.10538221]\n",
      "(3, 224) [87.44024249 17.12703659  5.10539576]\n",
      "(3, 224) [87.44045292 17.12703544  5.10540839]\n",
      "(3, 224) [87.44078656 17.12701991  5.10543249]\n",
      "(3, 224) [87.44100416 17.12699947  5.10545128]\n",
      "(3, 224) [87.44102117 17.1269638   5.10546291]\n",
      "(3, 224) [87.44117315 17.12693997  5.10547889]\n",
      "(3, 224) [87.44108159 17.12689435  5.10548714]\n",
      "(3, 224) [87.44138291 17.12685488  5.1055165 ]\n",
      "(3, 224) [87.44128045 17.12682355  5.10551986]\n",
      "(3, 224) [87.44128553 17.12677153  5.10553567]\n",
      "(3, 224) [87.44171408 17.12670586  5.10558028]\n",
      "(3, 224) [87.44186983 17.12663853  5.10560944]\n",
      "(3, 224) [87.4419734  17.12654077  5.10564462]\n",
      "(3, 224) [87.44229877 17.12642575  5.10569787]\n",
      "(3, 224) [87.44230497 17.12630321  5.10573474]\n",
      "(3, 224) [87.44229614 17.12616698  5.10577482]\n",
      "(3, 224) [87.44223819 17.12603941  5.10580944]\n",
      "(3, 224) [87.44257565 17.12591536  5.1058661 ]\n",
      "(3, 224) [87.44309333 17.125773    5.10593873]\n",
      "(3, 224) [87.4434145  17.12563952  5.10599724]\n",
      "(3, 224) [87.44389537 17.12548615  5.10607099]\n",
      "(3, 224) [87.44432067 17.1253288   5.10614267]\n",
      "(3, 224) [87.44494576 17.12518411  5.10622226]\n",
      "(3, 224) [87.44561933 17.12502539  5.10630881]\n",
      "(3, 224) [87.44617129 17.12483962  5.10639632]\n",
      "(3, 224) [87.44695296 17.12466407  5.10649418]\n",
      "(3, 224) [87.44756461 17.1245109   5.10657548]\n",
      "(3, 224) [87.44831846 17.12436226  5.10666372]\n",
      "(3, 224) [87.44909311 17.12420761  5.10675501]\n",
      "(3, 224) [87.44984812 17.12404407  5.10684779]\n",
      "(3, 224) [87.45049569 17.12390575  5.10692681]\n",
      "(3, 224) [87.4513821  17.12377378  5.10701786]\n",
      "(3, 224) [87.45194489 17.1236334   5.10709255]\n",
      "(3, 224) [87.45255989 17.12350084  5.10716796]\n",
      "(3, 224) [87.45330967 17.12336951  5.1072509 ]\n",
      "(3, 224) [87.45377344 17.12321005  5.10732554]\n",
      "(3, 224) [87.45446581 17.12303989  5.10741672]\n",
      "(3, 224) [87.45518121 17.12289696  5.10750114]\n",
      "(3, 224) [87.45589162 17.12276881  5.10758084]\n",
      "(3, 224) [87.45666089 17.12264774  5.10766187]\n",
      "(3, 224) [87.45722135 17.12250843  5.10773612]\n",
      "(3, 224) [87.45768101 17.12236764  5.10780493]\n",
      "(3, 224) [87.45800912 17.12222702  5.10786601]\n",
      "(3, 224) [87.45837439 17.12208044  5.10793105]\n",
      "(3, 224) [87.45902513 17.12193732  5.10801172]\n",
      "(3, 224) [87.45951008 17.12179337  5.10808296]\n",
      "(3, 224) [87.46018853 17.1216184   5.10817472]\n",
      "(3, 224) [87.4609435  17.12144076  5.10827175]\n",
      "(3, 224) [87.4613196  17.12127098  5.10834432]\n",
      "(3, 224) [87.46190093 17.12111853  5.1084237 ]\n",
      "(3, 224) [87.46243771 17.12097953  5.10849648]\n",
      "(3, 224) [87.46268801 17.12083805  5.10855326]\n",
      "(3, 224) [87.46323217 17.12070357  5.10862511]\n",
      "(3, 224) [87.46378488 17.12058217  5.10869357]\n",
      "(3, 224) [87.46411951 17.12046794  5.10874715]\n",
      "(3, 224) [87.4646115  17.12035489  5.10880957]\n",
      "(3, 224) [87.46508744 17.12026093  5.10886538]\n",
      "(3, 224) [87.46570758 17.12014287  5.10893679]\n",
      "(3, 224) [87.466167   17.11994642  5.10902225]\n",
      "(3, 224) [87.46660843 17.11977031  5.10910058]\n",
      "(3, 224) [87.46733675 17.11955659  5.10920694]\n",
      "(3, 224) [87.4677035  17.11936931  5.10928431]\n",
      "(3, 224) [87.46797205 17.11918731  5.10935433]\n",
      "(3, 224) [87.46841101 17.11898556  5.1094402 ]\n",
      "(3, 224) [87.46881319 17.11877879  5.10952547]\n",
      "(3, 224) [87.46901169 17.11858589  5.10959472]\n",
      "(3, 224) [87.46939893 17.11840404  5.10967169]\n",
      "(3, 224) [87.46978207 17.11820244  5.1097543 ]\n",
      "(3, 224) [87.46992109 17.11798656  5.10982693]\n",
      "(3, 224) [87.47012838 17.11776635  5.10990483]\n",
      "(3, 224) [87.47042431 17.1175287   5.10999319]\n",
      "(3, 224) [87.47066421 17.11727993  5.11008159]\n",
      "(3, 224) [87.47102858 17.11699423  5.11018838]\n",
      "(3, 224) [87.47134021 17.1167474   5.11028048]\n",
      "(3, 224) [87.47163269 17.11647165  5.11038011]\n",
      "(3, 224) [87.47224218 17.11620371  5.11049595]\n",
      "(3, 224) [87.47269008 17.11590564  5.11061137]\n",
      "(3, 224) [87.47301086 17.11562904  5.11071288]\n",
      "(3, 224) [87.47353507 17.11533386  5.11083188]\n",
      "(3, 224) [87.47419978 17.11502077  5.11096454]\n",
      "(3, 224) [87.47455964 17.11472933  5.1110729 ]\n",
      "(3, 224) [87.47533144 17.1144575   5.1111995 ]\n",
      "(3, 224) [87.47604621 17.1141284   5.11133999]\n",
      "(3, 224) [87.47666176 17.11383726  5.11146322]\n",
      "(3, 224) [87.47739039 17.11351983  5.11160095]\n",
      "(3, 224) [87.4780677  17.11323043  5.11172724]\n",
      "(3, 224) [87.47856889 17.1129348   5.11184505]\n",
      "(3, 224) [87.47906811 17.11263446  5.11196421]\n",
      "(3, 224) [87.47967358 17.11231041  5.11209667]\n",
      "(3, 224) [87.48025631 17.1119743   5.11223151]\n",
      "(3, 224) [87.48128722 17.11167632  5.11238123]\n",
      "(3, 224) [87.48193682 17.11133671  5.11252099]\n",
      "(3, 224) [87.48256312 17.11099687  5.11265944]\n",
      "(3, 224) [87.48309403 17.11060177  5.11280894]\n",
      "(3, 224) [87.4837172  17.11015259  5.11298005]\n",
      "(3, 224) [87.48431674 17.10970383  5.11314969]\n",
      "(3, 224) [87.48490597 17.10924915  5.11332043]\n",
      "(3, 224) [87.48562681 17.10879886  5.11349762]\n",
      "(3, 224) [87.48614547 17.10838353  5.11365252]\n",
      "(3, 224) [87.48678207 17.1079395   5.11382288]\n",
      "(3, 224) [87.48767718 17.10749694  5.11400792]\n",
      "(3, 224) [87.48830024 17.10705155  5.1141779 ]\n",
      "(3, 224) [87.48908537 17.10655752  5.1143721 ]\n",
      "(3, 224) [87.48980465 17.10601868  5.11457622]\n",
      "(3, 224) [87.49061652 17.10541541  5.11480532]\n",
      "(3, 224) [87.49111995 17.10484863  5.11500517]\n",
      "(3, 224) [87.49183436 17.10426027  5.11522391]\n",
      "(3, 224) [87.49245542 17.10359768  5.11545976]\n",
      "(3, 224) [87.49291109 17.1029831   5.11567137]\n",
      "(3, 224) [87.49312544 17.10227922  5.11589602]\n",
      "(3, 224) [87.49356043 17.10157541  5.1161335 ]\n",
      "(3, 224) [87.49395803 17.10094161  5.11634755]\n",
      "(3, 224) [87.49476472 17.10028792  5.11659175]\n",
      "(3, 224) [87.49563935 17.09956946  5.11685964]\n",
      "(3, 224) [87.49607465 17.0989014   5.11708641]\n",
      "(3, 224) [87.49682249 17.09822481  5.11733419]\n",
      "(3, 224) [87.49751629 17.09754525  5.11757974]\n",
      "(3, 224) [87.49803115 17.09683841  5.11782297]\n",
      "(3, 224) [87.49840422 17.0961424   5.11805469]\n",
      "(3, 224) [87.49888077 17.09551398  5.1182719 ]\n",
      "(3, 224) [87.49932263 17.09488092  5.11848834]\n",
      "(3, 224) [87.49957812 17.09420159  5.11870789]\n",
      "(3, 224) [87.50021672 17.09349797  5.11895742]\n",
      "(3, 224) [87.50078014 17.09283146  5.11919124]\n",
      "(3, 224) [87.50128669 17.09219137  5.11941365]\n",
      "(3, 224) [87.50186945 17.09154983  5.119641  ]\n",
      "(3, 224) [87.50216401 17.09092882  5.1198452 ]\n",
      "(3, 224) [87.50288485 17.09027218  5.12008536]\n",
      "(3, 224) [87.50344283 17.08962717  5.12031253]\n",
      "(3, 224) [87.50400831 17.08897288  5.1205429 ]\n",
      "(3, 224) [87.50464608 17.08833615  5.12077217]\n",
      "(3, 224) [87.50520364 17.0876763   5.12100371]\n",
      "(3, 224) [87.50563398 17.08694925  5.12124819]\n",
      "(3, 224) [87.50612182 17.08623308  5.12149285]\n",
      "(3, 224) [87.50674274 17.08552708  5.12174231]\n",
      "(3, 224) [87.50759551 17.08482283  5.12200495]\n",
      "(3, 224) [87.50828571 17.08411909  5.12225797]\n",
      "(3, 224) [87.50918102 17.0834272   5.12251936]\n",
      "(3, 224) [87.51018065 17.08275862  5.12277969]\n",
      "(3, 224) [87.51107497 17.08207804  5.12303746]\n",
      "(3, 224) [87.51204968 17.08141404  5.12329483]\n",
      "(3, 224) [87.51296039 17.08072831  5.12355508]\n",
      "(3, 224) [87.51343314 17.08001348  5.12379846]\n",
      "(3, 224) [87.51442436 17.07930322  5.12407086]\n",
      "(3, 224) [87.51530609 17.07856763  5.1243444 ]\n",
      "(3, 224) [87.51588912 17.07783605  5.1245991 ]\n",
      "(3, 224) [87.51628075 17.07712006  5.12483795]\n",
      "(3, 224) [87.5169568  17.07642948  5.12508572]\n",
      "(3, 224) [87.51772718 17.07573906  5.12533911]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  8%|█████▊                                                                     | 5934/76339 [00:02<00:30, 2299.50it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.5181011  17.07507039  5.12556263]\n",
      "(3, 224) [87.51853115 17.07440189  5.12578943]\n",
      "(3, 224) [87.51925981 17.07374323  5.12603073]\n",
      "(3, 224) [87.51983561 17.0731246   5.12625098]\n",
      "(3, 224) [87.52040637 17.07251551  5.12646804]\n",
      "(3, 224) [87.52074097 17.07191519  5.12666855]\n",
      "(3, 224) [87.52120211 17.07126412  5.12689199]\n",
      "(3, 224) [87.52139954 17.07060266  5.12710303]\n",
      "(3, 224) [87.52156394 17.06992175  5.12731799]\n",
      "(3, 224) [87.52209241 17.06926053  5.12754828]\n",
      "(3, 224) [87.52231804 17.06856834  5.12777026]\n",
      "(3, 224) [87.52273876 17.06792594  5.12798861]\n",
      "(3, 224) [87.52293411 17.06727471  5.12819653]\n",
      "(3, 224) [87.52310839 17.06662002  5.12840428]\n",
      "(3, 224) [87.52347613 17.06597985  5.12861899]\n",
      "(3, 224) [87.52353883 17.065333    5.12881785]\n",
      "(3, 224) [87.52344409 17.06468558  5.12900748]\n",
      "(3, 224) [87.5233666  17.06401987  5.12920357]\n",
      "(3, 224) [87.52335253 17.06334213  5.12940698]\n",
      "(3, 224) [87.52320491 17.0626188   5.12961622]\n",
      "(3, 224) [87.52319887 17.06190786  5.12983008]\n",
      "(3, 224) [87.52309096 17.06121611  5.13003223]\n",
      "(3, 224) [87.52305506 17.06052328  5.13023904]\n",
      "(3, 224) [87.52304924 17.05983976  5.13044482]\n",
      "(3, 224) [87.52294034 17.05911898  5.13065566]\n",
      "(3, 224) [87.52265421 17.05837873  5.13086196]\n",
      "(3, 224) [87.5224133  17.05761888  5.1310769 ]\n",
      "(3, 224) [87.52217941 17.05687942  5.13128604]\n",
      "(3, 224) [87.52195042 17.05611646  5.1315026 ]\n",
      "(3, 224) [87.52164961 17.05534685  5.13171691]\n",
      "(3, 224) [87.52146117 17.05455432  5.13194475]\n",
      "(3, 224) [87.52111084 17.05378247  5.13215696]\n",
      "(3, 224) [87.52085002 17.05301021  5.13237453]\n",
      "(3, 224) [87.52080033 17.0523136   5.1325819 ]\n",
      "(3, 224) [87.52046586 17.05156068  5.1327894 ]\n",
      "(3, 224) [87.52037437 17.05085058  5.13299826]\n",
      "(3, 224) [87.5202781  17.05014079  5.13320673]\n",
      "(3, 224) [87.5203682  17.04942436  5.13342806]\n",
      "(3, 224) [87.52040647 17.04868171  5.13365407]\n",
      "(3, 224) [87.52035757 17.04796101  5.13386821]\n",
      "(3, 224) [87.52049755 17.04720437  5.1341044 ]\n",
      "(3, 224) [87.52085057 17.04643748  5.13435598]\n",
      "(3, 224) [87.52074578 17.04568223  5.13457717]\n",
      "(3, 224) [87.52073624 17.04496264  5.13479321]\n",
      "(3, 224) [87.52111708 17.04423939  5.13503325]\n",
      "(3, 224) [87.5212917  17.04348431  5.13527074]\n",
      "(3, 224) [87.5215656  17.0427586   5.13550522]\n",
      "(3, 224) [87.52168687 17.04202655  5.13573272]\n",
      "(3, 224) [87.52190715 17.04130611  5.13596257]\n",
      "(3, 224) [87.5219145  17.04059509  5.13617708]\n",
      "(3, 224) [87.52201433 17.03990033  5.1363921 ]\n",
      "(3, 224) [87.52212864 17.03919757  5.13661049]\n",
      "(3, 224) [87.52229042 17.0385006   5.13682999]\n",
      "(3, 224) [87.52271462 17.03787572  5.13704297]\n",
      "(3, 224) [87.52290701 17.0372184   5.13725225]\n",
      "(3, 224) [87.52334707 17.03655922  5.13747649]\n",
      "(3, 224) [87.52391334 17.03588364  5.13771324]\n",
      "(3, 224) [87.5244718  17.0352003   5.13795185]\n",
      "(3, 224) [87.52471934 17.03454114  5.13816494]\n",
      "(3, 224) [87.52494291 17.03385305  5.13838536]\n",
      "(3, 224) [87.52544543 17.03318156  5.13861703]\n",
      "(3, 224) [87.52596498 17.03250704  5.13885072]\n",
      "(3, 224) [87.52655781 17.03181579  5.13909367]\n",
      "(3, 224) [87.5270771  17.03116083  5.1393214 ]\n",
      "(3, 224) [87.52748578 17.03047438  5.13955212]\n",
      "(3, 224) [87.52776461 17.02978558  5.13977589]\n",
      "(3, 224) [87.52803233 17.02909171  5.14000059]\n",
      "(3, 224) [87.52832804 17.02840388  5.1402251 ]\n",
      "(3, 224) [87.52868593 17.02769712  5.14045901]\n",
      "(3, 224) [87.5289225  17.02704412  5.14066944]\n",
      "(3, 224) [87.52900271 17.02640561  5.14086626]\n",
      "(3, 224) [87.52927871 17.0257955   5.14106608]\n",
      "(3, 224) [87.52978187 17.02517794  5.1412815 ]\n",
      "(3, 224) [87.53018396 17.02456662  5.14148909]\n",
      "(3, 224) [87.53094861 17.02394471  5.14172107]\n",
      "(3, 224) [87.53186327 17.02330434  5.14196752]\n",
      "(3, 224) [87.53243636 17.02264787  5.1421987 ]\n",
      "(3, 224) [87.53293938 17.02196536  5.1424337 ]\n",
      "(3, 224) [87.53333966 17.02129111  5.14266024]\n",
      "(3, 224) [87.53397331 17.02065314  5.14288946]\n",
      "(3, 224) [87.53459173 17.02000273  5.1431215 ]\n",
      "(3, 224) [87.53535051 17.01940163  5.14334689]\n",
      "(3, 224) [87.53602793 17.01877592  5.14357505]\n",
      "(3, 224) [87.53668949 17.0181445   5.14380391]\n",
      "(3, 224) [87.53737423 17.01751274  5.14403433]\n",
      "(3, 224) [87.53775823 17.01690414  5.14424014]\n",
      "(3, 224) [87.53851903 17.01629174  5.14446911]\n",
      "(3, 224) [87.53925113 17.01569564  5.14469149]\n",
      "(3, 224) [87.53983909 17.01510475  5.14490382]\n",
      "(3, 224) [87.54079656 17.01450235  5.14514141]\n",
      "(3, 224) [87.54143245 17.01388662  5.14536414]\n",
      "(3, 224) [87.54214246 17.01326174  5.14559394]\n",
      "(3, 224) [87.54274951 17.01265047  5.14581366]\n",
      "(3, 224) [87.54318152 17.01204545  5.14602126]\n",
      "(3, 224) [87.54396321 17.01144784  5.1462471 ]\n",
      "(3, 224) [87.54455442 17.0108549   5.14646036]\n",
      "(3, 224) [87.54557106 17.01026485  5.14669777]\n",
      "(3, 224) [87.54630394 17.00967409  5.14691873]\n",
      "(3, 224) [87.5470516  17.00908101  5.14714119]\n",
      "(3, 224) [87.54779519 17.00850214  5.14735915]\n",
      "(3, 224) [87.54878641 17.00790956  5.14759581]\n",
      "(3, 224) [87.54960991 17.00730894  5.14782503]\n",
      "(3, 224) [87.55058799 17.00670397  5.14806468]\n",
      "(3, 224) [87.55121662 17.00610147  5.14828315]\n",
      "(3, 224) [87.55165075 17.00551697  5.14848472]\n",
      "(3, 224) [87.55214332 17.00493513  5.14868887]\n",
      "(3, 224) [87.55277385 17.00434849  5.1489026 ]\n",
      "(3, 224) [87.55368433 17.00377432  5.14912903]\n",
      "(3, 224) [87.55447979 17.00318502  5.1493533 ]\n",
      "(3, 224) [87.55546556 17.00260617  5.14958573]\n",
      "(3, 224) [87.55631882 17.00203424  5.14980829]\n",
      "(3, 224) [87.55724918 17.00148499  5.1500286 ]\n",
      "(3, 224) [87.55797159 17.00090392  5.15024628]\n",
      "(3, 224) [87.55849211 17.00031263  5.15045513]\n",
      "(3, 224) [87.55902101 16.99971424  5.15066661]\n",
      "(3, 224) [87.55970059 16.99909792  5.15089237]\n",
      "(3, 224) [87.56031847 16.99847624  5.15111607]\n",
      "(3, 224) [87.5606892  16.99784847  5.15132707]\n",
      "(3, 224) [87.56109227 16.99723391  5.151536  ]\n",
      "(3, 224) [87.56148579 16.99664223  5.1517375 ]\n",
      "(3, 224) [87.56205236 16.99605908  5.15194654]\n",
      "(3, 224) [87.56260349 16.99548295  5.15215258]\n",
      "(3, 224) [87.56296192 16.99489556  5.15235073]\n",
      "(3, 224) [87.56374694 16.99432834  5.15256778]\n",
      "(3, 224) [87.56447592 16.9937397   5.15278801]\n",
      "(3, 224) [87.5649797  16.99314434  5.15299703]\n",
      "(3, 224) [87.56603007 16.99257443  5.15323037]\n",
      "(3, 224) [87.56690979 16.99198166  5.15346067]\n",
      "(3, 224) [87.56761356 16.99140982  5.15367425]\n",
      "(3, 224) [87.56831877 16.9908378   5.15388786]\n",
      "(3, 224) [87.56907404 16.99027217  5.15410253]\n",
      "(3, 224) [87.56968566 16.98970758  5.15430847]\n",
      "(3, 224) [87.57053898 16.98917096  5.15452019]\n",
      "(3, 224) [87.57128914 16.98867804  5.15471286]\n",
      "(3, 224) [87.57225456 16.98824738  5.15489923]\n",
      "(3, 224) [87.57304779 16.98785378  5.15506446]\n",
      "(3, 224) [87.57364227 16.98744938  5.1552212 ]\n",
      "(3, 224) [87.57455861 16.98701031  5.15540732]\n",
      "(3, 224) [87.57510419 16.98657529  5.15557043]\n",
      "(3, 224) [87.57576039 16.98619984  5.15572211]\n",
      "(3, 224) [87.57678364 16.98584639  5.15588868]\n",
      "(3, 224) [87.57769782 16.98546183  5.15605826]\n",
      "(3, 224) [87.57840012 16.98509426  5.15621023]\n",
      "(3, 224) [87.57910248 16.98473422  5.15635995]\n",
      "(3, 224) [87.57977039 16.98437215  5.15650825]\n",
      "(3, 224) [87.58048088 16.98405277  5.15664627]\n",
      "(3, 224) [87.58135945 16.98372316  5.15679726]\n",
      "(3, 224) [87.58212732 16.983442    5.15692721]\n",
      "(3, 224) [87.58297861 16.98314179  5.15706781]\n",
      "(3, 224) [87.58405364 16.98291943  5.15719799]\n",
      "(3, 224) [87.58455022 16.98264603  5.15730967]\n",
      "(3, 224) [87.58527476 16.98238015  5.1574325 ]\n",
      "(3, 224) [87.58602772 16.98207489  5.15756886]\n",
      "(3, 224) [87.58680422 16.98180415  5.1576962 ]\n",
      "(3, 224) [87.58714597 16.98152971  5.15779922]\n",
      "(3, 224) [87.58782392 16.98126565  5.15791882]\n",
      "(3, 224) [87.58835301 16.98098725  5.15803404]\n",
      "(3, 224) [87.58883909 16.98074542  5.15813575]\n",
      "(3, 224) [87.58937548 16.98042758  5.15826337]\n",
      "(3, 224) [87.58984134 16.98012367  5.15838268]\n",
      "(3, 224) [87.59029917 16.97981338  5.15850336]\n",
      "(3, 224) [87.59114202 16.97951679  5.15864249]\n",
      "(3, 224) [87.59179366 16.97925218  5.15876071]\n",
      "(3, 224) [87.59245746 16.97902578  5.15886809]\n",
      "(3, 224) [87.59296938 16.97881893  5.15896069]\n",
      "(3, 224) [87.5932955  16.97862611  5.15903814]\n",
      "(3, 224) [87.59375181 16.9784113   5.15912986]\n",
      "(3, 224) [87.59429322 16.97818715  5.1592294 ]\n",
      "(3, 224) [87.59486321 16.97802743  5.15931118]\n",
      "(3, 224) [87.59546658 16.97787551  5.1593926 ]\n",
      "(3, 224) [87.59587531 16.97772515  5.15946212]\n",
      "(3, 224) [87.59657875 16.97758357  5.15954628]\n",
      "(3, 224) [87.59713812 16.97743726  5.15962343]\n",
      "(3, 224) [87.59786809 16.97728657  5.15971192]\n",
      "(3, 224) [87.59844944 16.9771496   5.15978751]\n",
      "(3, 224) [87.59900066 16.97703187  5.15985551]\n",
      "(3, 224) [87.59944518 16.97690495  5.15992001]\n",
      "(3, 224) [87.5999311  16.97685529  5.1599636 ]\n",
      "(3, 224) [87.59995539 16.97687853  5.15995799]\n",
      "(3, 224) [87.60022403 16.97701066  5.15993374]\n",
      "(3, 224) [87.600761   16.97711212  5.15993459]\n",
      "(3, 224) [87.60128486 16.97724102  5.15992634]\n",
      "(3, 224) [87.60186946 16.97744862  5.15989778]\n",
      "(3, 224) [87.6024698  16.97761797  5.15988177]\n",
      "(3, 224) [87.60332182 16.97788176  5.15985187]\n",
      "(3, 224) [87.60401353 16.97814034  5.15981414]\n",
      "(3, 224) [87.60471621 16.97831956  5.15980115]\n",
      "(3, 224) [87.60513181 16.97852707  5.15976264]\n",
      "(3, 224) [87.6055622  16.978811    5.15970176]\n",
      "(3, 224) [87.60625877 16.97905106  5.15966992]\n",
      "(3, 224) [87.60665857 16.9792977   5.15961859]\n",
      "(3, 224) [87.60708882 16.97957053  5.15956112]\n",
      "(3, 224) [87.6077879  16.97985523  5.15951587]\n",
      "(3, 224) [87.6085208  16.98014957  5.15946968]\n",
      "(3, 224) [87.609335   16.98034392  5.15945863]\n",
      "(3, 224) [87.6102132  16.98052122  5.15945654]\n",
      "(3, 224) [87.6110408  16.98076447  5.15943148]\n",
      "(3, 224) [87.61154575 16.98104156  5.1593771 ]\n",
      "(3, 224) [87.61240027 16.981286    5.15935322]\n",
      "(3, 224) [87.61315812 16.98150519  5.15933135]\n",
      "(3, 224) [87.61369041 16.98170594  5.15930178]\n",
      "(3, 224) [87.61435679 16.98190114  5.15928183]\n",
      "(3, 224) [87.61498391 16.98213722  5.15924708]\n",
      "(3, 224) [87.61554214 16.98238914  5.1592035 ]\n",
      "(3, 224) [87.61614373 16.98264331  5.15916178]\n",
      "(3, 224) [87.61663478 16.98288518  5.15911732]\n",
      "(3, 224) [87.61727475 16.98314912  5.15907492]\n",
      "(3, 224) [87.6182415  16.98347265  5.1590336 ]\n",
      "(3, 224) [87.61898024 16.98374911  5.15899311]\n",
      "(3, 224) [87.61946069 16.98401665  5.15894011]\n",
      "(3, 224) [87.61983744 16.98432474  5.15886868]\n",
      "(3, 224) [87.62018199 16.98462156  5.15879876]\n",
      "(3, 224) [87.62051187 16.98489784  5.15873422]\n",
      "(3, 224) [87.62085826 16.98514791  5.15867865]\n",
      "(3, 224) [87.62110143 16.98538698  5.15862034]\n",
      "(3, 224) [87.62142241 16.98559092  5.15857729]\n",
      "(3, 224) [87.62195162 16.98581768  5.15853954]\n",
      "(3, 224) [87.62279057 16.98608686  5.15850714]\n",
      "(3, 224) [87.62338522 16.9863495   5.15846233]\n",
      "(3, 224) [87.6242504  16.98663925  5.15842521]\n",
      "(3, 224) [87.62533538 16.98691282  5.15840599]\n",
      "(3, 224) [87.62632407 16.98717018  5.15838602]\n",
      "(3, 224) [87.62737482 16.98740938  5.15837523]\n",
      "(3, 224) [87.62830726 16.98768317  5.15834696]\n",
      "(3, 224) [87.62930755 16.98792337  5.15833292]\n",
      "(3, 224) [87.63021721 16.98816485  5.15831315]\n",
      "(3, 224) [87.63111614 16.98839241  5.15829695]\n",
      "(3, 224) [87.63200711 16.98858641  5.1582905 ]\n",
      "(3, 224) [87.6331206  16.98877776  5.15829794]\n",
      "(3, 224) [87.63416392 16.98895008  5.15830705]\n",
      "(3, 224) [87.63536198 16.98918096  5.15830744]\n",
      "(3, 224) [87.63673426 16.98939811  5.15832226]\n",
      "(3, 224) [87.63782699 16.9896481   5.15831068]\n",
      "(3, 224) [87.63903959 16.98987204  5.15831404]\n",
      "(3, 224) [87.64032358 16.99011717  5.15831517]\n",
      "(3, 224) [87.64138795 16.99033449  5.15831184]\n",
      "(3, 224) [87.64237387 16.9905672   5.15829921]\n",
      "(3, 224) [87.6436008  16.99080781  5.15829834]\n",
      "(3, 224) [87.6446892  16.99102771  5.15829561]\n",
      "(3, 224) [87.64590995 16.99124793  5.15830058]\n",
      "(3, 224) [87.64729716 16.99144588  5.15832213]\n",
      "(3, 224) [87.64844356 16.99167382  5.15832044]\n",
      "(3, 224) [87.64957908 16.99190293  5.15831774]\n",
      "(3, 224) [87.65090255 16.99210921  5.15833302]\n",
      "(3, 224) [87.65201332 16.99231456  5.15833606]\n",
      "(3, 224) [87.65306777 16.99251457  5.15833741]\n",
      "(3, 224) [87.65401572 16.99272413  5.15832957]\n",
      "(3, 224) [87.6549015  16.99294181  5.15831561]\n",
      "(3, 224) [87.65617834 16.99317032  5.1583214 ]\n",
      "(3, 224) [87.65732053 16.99340843  5.15831635]\n",
      "(3, 224) [87.65842583 16.99364164  5.15831059]\n",
      "(3, 224) [87.65972539 16.99385754  5.15832153]\n",
      "(3, 224) [87.66078682 16.99409105  5.1583131 ]\n",
      "(3, 224) [87.66205375 16.99432443  5.1583168 ]\n",
      "(3, 224) [87.66300559 16.99456256  5.1583005 ]\n",
      "(3, 224) [87.6640737  16.99478757  5.15829502]\n",
      "(3, 224) [87.66485148 16.99501049  5.15827309]\n",
      "(3, 224) [87.66551782 16.99520565  5.15825299]\n",
      "(3, 224) [87.66630998 16.99540573  5.15823882]\n",
      "(3, 224) [87.66689766 16.99557028  5.15822341]\n",
      "(3, 224) [87.66759578 16.99576119  5.15820649]\n",
      "(3, 224) [87.6684336  16.99593791  5.1582021 ]\n",
      "(3, 224) [87.66927173 16.99611591  5.15819737]\n",
      "(3, 224) [87.67028137 16.99626231  5.15821235]\n",
      "(3, 224) [87.6708795  16.99642663  5.15819763]\n",
      "(3, 224) [87.67141131 16.99659157  5.15817884]\n",
      "(3, 224) [87.6720992  16.99673704  5.15817517]\n",
      "(3, 224) [87.67261883 16.99686266  5.15816762]\n",
      "(3, 224) [87.67310921 16.99698184  5.15816029]\n",
      "(3, 224) [87.67373772 16.99712538  5.1581537 ]\n",
      "(3, 224) [87.67422433 16.99725197  5.15814391]\n",
      "(3, 224) [87.67469454 16.99738179  5.15813217]\n",
      "(3, 224) [87.67496884 16.99752231  5.15810565]\n",
      "(3, 224) [87.67552448 16.99767337  5.1580925 ]\n",
      "(3, 224) [87.67610671 16.99780887  5.15808564]\n",
      "(3, 224) [87.67662007 16.99797122  5.15806656]\n",
      "(3, 224) [87.6769352  16.99813536  5.15803527]\n",
      "(3, 224) [87.67740878 16.99824674  5.15802934]\n",
      "(3, 224) [87.67779832 16.99837121  5.15801447]\n",
      "(3, 224) [87.67814165 16.9984783   5.15800217]\n",
      "(3, 224) [87.6781699  16.99857295  5.15797508]\n",
      "(3, 224) [87.67835277 16.99866807  5.15795693]\n",
      "(3, 224) [87.67879931 16.99874155  5.1579609 ]\n",
      "(3, 224) [87.67901988 16.99882917  5.15794726]\n",
      "(3, 224) [87.67941242 16.99891052  5.15794565]\n",
      "(3, 224) [87.67959687 16.99897847  5.15793586]\n",
      "(3, 224) [87.67971684 16.99903679  5.15792519]\n",
      "(3, 224) [87.67997471 16.99907732  5.15792806]\n",
      "(3, 224) [87.68015631 16.99907009  5.15794095]\n",
      "(3, 224) [87.68033854 16.99901568  5.15796825]\n",
      "(3, 224) [87.68068635 16.99901676  5.1579884 ]\n",
      "(3, 224) [87.68086988 16.99901997  5.15799824]\n",
      "(3, 224) [87.68109601 16.99905141  5.15800199]\n",
      "(3, 224) [87.6814737  16.99903251  5.15802998]\n",
      "(3, 224) [87.68202325 16.99899901  5.15807251]\n",
      "(3, 224) [87.68241138 16.99893983  5.15811334]\n",
      "(3, 224) [87.68261033 16.99889018  5.15814015]\n",
      "(3, 224) [87.68297764 16.99883816  5.15817759]\n",
      "(3, 224) [87.68306276 16.99879239  5.15819651]\n",
      "(3, 224) [87.68323076 16.99876892  5.15821354]\n",
      "(3, 224) [87.68369979 16.99874512  5.1582484 ]\n",
      "(3, 224) [87.68394918 16.99876133  5.15825816]\n",
      "(3, 224) [87.68400063 16.99877884  5.15825586]\n",
      "(3, 224) [87.68424686 16.99877322  5.15827207]\n",
      "(3, 224) [87.68440124 16.99875946  5.15828535]\n",
      "(3, 224) [87.68476517 16.99871938  5.15831896]\n",
      "(3, 224) [87.68513484 16.99870845  5.15834405]\n",
      "(3, 224) [87.68574988 16.99870763  5.15838051]\n",
      "(3, 224) [87.68613611 16.99872889  5.15839679]\n",
      "(3, 224) [87.68657282 16.99875473  5.15841465]\n",
      "(3, 224) [87.6868453  16.99879036  5.15841987]\n",
      "(3, 224) [87.68713525 16.99884729  5.15841965]\n",
      "(3, 224) [87.68758904 16.99886889  5.1584398 ]\n",
      "(3, 224) [87.68777604 16.99891515  5.15843676]\n",
      "(3, 224) [87.68818871 16.99900442  5.15843395]\n",
      "(3, 224) [87.68867229 16.99911053  5.15843019]\n",
      "(3, 224) [87.68893411 16.99918117  5.15842416]\n",
      "(3, 224) [87.68959311 16.9992654   5.15843736]\n",
      "(3, 224) [87.68990612 16.99933755  5.15843388]\n",
      "(3, 224) [87.6902618  16.99940908  5.15843309]\n",
      "(3, 224) [87.69051946 16.99949002  5.15842367]\n",
      "(3, 224) [87.69073607 16.9995593   5.15841538]\n",
      "(3, 224) [87.6911421  16.99961773  5.15842153]\n",
      "(3, 224) [87.69155128 16.99967924  5.15842693]\n",
      "(3, 224) [87.69188048 16.99973367  5.15842977]\n",
      "(3, 224) [87.69215792 16.99979474  5.15842755]\n",
      "(3, 224) [87.69210529 16.99985459  5.15840626]\n",
      "(3, 224) [87.69233755 16.99990567  5.15840441]\n",
      "(3, 224) [87.69269951 16.99993272  5.1584175 ]\n",
      "(3, 224) [87.69296928 16.99996486  5.15842362]\n",
      "(3, 224) [87.69305156 16.99999156  5.15842036]\n",
      "(3, 224) [87.69282526 17.00000766  5.15840214]\n",
      "(3, 224) [87.69278642 17.00002967  5.15839316]\n",
      "(3, 224) [87.69267877 17.00009213  5.15836784]\n",
      "(3, 224) [87.69263083 17.00014325  5.15834948]\n",
      "(3, 224) [87.69262608 17.00018633  5.1583361 ]\n",
      "(3, 224) [87.69257813 17.00024239  5.15831623]\n",
      "(3, 224) [87.69252265 17.00027476  5.15830312]\n",
      "(3, 224) [87.69239155 17.00031841  5.15828214]\n",
      "(3, 224) [87.6922586  17.00038602  5.15825376]\n",
      "(3, 224) [87.69216439 17.0004562   5.15822688]\n",
      "(3, 224) [87.69237707 17.00052927  5.1582172 ]\n",
      "(3, 224) [87.69253873 17.00058814  5.15820883]\n",
      "(3, 224) [87.69242009 17.00062184  5.1581916 ]\n",
      "(3, 224) [87.69245043 17.00065565  5.15818311]\n",
      "(3, 224) [87.69220518 17.00070001  5.1581552 ]\n",
      "(3, 224) [87.69234698 17.00077791  5.15813989]\n",
      "(3, 224) [87.69215913 17.00084892  5.15810727]\n",
      "(3, 224) [87.6920284  17.00092631  5.15807607]\n",
      "(3, 224) [87.69178211 17.00100846  5.15803663]\n",
      "(3, 224) [87.69148598 17.00107028  5.15800043]\n",
      "(3, 224) [87.69108254 17.00116822  5.15794695]\n",
      "(3, 224) [87.69070196 17.00121926  5.15790906]\n",
      "(3, 224) [87.69063932 17.00128923  5.15788415]\n",
      "(3, 224) [87.690368   17.00135348  5.1578487 ]\n",
      "(3, 224) [87.69005198 17.00145032  5.15780074]\n",
      "(3, 224) [87.68951675 17.00153013  5.15774506]\n",
      "(3, 224) [87.68897738 17.00163723  5.15768086]\n",
      "(3, 224) [87.68828089 17.00170994  5.15761791]\n",
      "(3, 224) [87.68777869 17.00180717  5.15755894]\n",
      "(3, 224) [87.68751412 17.00189091  5.15751804]\n",
      "(3, 224) [87.6872277  17.00199213  5.15747052]\n",
      "(3, 224) [87.68715162 17.00210926  5.15743058]\n",
      "(3, 224) [87.68690271 17.002206    5.15738667]\n",
      "(3, 224) [87.68653831 17.00225737  5.15734969]\n",
      "(3, 224) [87.68606172 17.0023344   5.15729834]\n",
      "(3, 224) [87.6857912  17.00240823  5.1572601 ]\n",
      "(3, 224) [87.68578731 17.00247579  5.15723941]\n",
      "(3, 224) [87.68585619 17.00255033  5.15722089]\n",
      "(3, 224) [87.68584794 17.00262169  5.15719879]\n",
      "(3, 224) [87.68570554 17.00269678  5.15716767]\n",
      "(3, 224) [87.68548885 17.00276581  5.15713402]\n",
      "(3, 224) [87.68500965 17.00281404  5.15709123]\n",
      "(3, 224) [87.68424813 17.00281655  5.15704572]\n",
      "(3, 224) [87.68378618 17.0028932   5.15699537]\n",
      "(3, 224) [87.68330283 17.00297224  5.15694302]\n",
      "(3, 224) [87.68286187 17.00304865  5.15689395]\n",
      "(3, 224) [87.68225459 17.00313253  5.15683286]\n",
      "(3, 224) [87.68166728 17.0032093   5.15677506]\n",
      "(3, 224) [87.68107205 17.00324791  5.15672836]\n",
      "(3, 224) [87.68029509 17.00331117  5.1566635 ]\n",
      "(3, 224) [87.67960094 17.00338584  5.15660004]\n",
      "(3, 224) [87.67877503 17.00347022  5.15652586]\n",
      "(3, 224) [87.6779856  17.00352786  5.15646192]\n",
      "(3, 224) [87.67715007 17.00360359  5.15638983]\n",
      "(3, 224) [87.67642517 17.00371549  5.1563133 ]\n",
      "(3, 224) [87.67562551 17.00378623  5.15624485]\n",
      "(3, 224) [87.67489374 17.00384813  5.15618309]\n",
      "(3, 224) [87.67436039 17.00390983  5.15613304]\n",
      "(3, 224) [87.67414844 17.00396026  5.1561053 ]\n",
      "(3, 224) [87.67373285 17.00401431  5.1560645 ]\n",
      "(3, 224) [87.67316854 17.00408583  5.15600967]\n",
      "(3, 224) [87.67289702 17.00413339  5.1559793 ]\n",
      "(3, 224) [87.67224178 17.00421323  5.15591659]\n",
      "(3, 224) [87.67159896 17.00429054  5.15585539]\n",
      "(3, 224) [87.67083201 17.00433477  5.1557969 ]\n",
      "(3, 224) [87.67014805 17.00438115  5.15574264]\n",
      "(3, 224) [87.66939394 17.00445183  5.15567689]\n",
      "(3, 224) [87.66863855 17.0045238   5.1556107 ]\n",
      "(3, 224) [87.66790329 17.00454597  5.15556076]\n",
      "(3, 224) [87.66736573 17.00459288  5.15551496]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  8%|██████▎                                                                    | 6395/76339 [00:02<00:31, 2251.57it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.66677606 17.004616    5.1554733 ]\n",
      "(3, 224) [87.66655242 17.00464     5.15545289]\n",
      "(3, 224) [87.66602633 17.00463012  5.15542496]\n",
      "(3, 224) [87.66540732 17.00462609  5.15538981]\n",
      "(3, 224) [87.6647311  17.00459229  5.1553603 ]\n",
      "(3, 224) [87.66416718 17.004567    5.15533482]\n",
      "(3, 224) [87.66348116 17.00453877  5.15530305]\n",
      "(3, 224) [87.66281281 17.00451404  5.15527126]\n",
      "(3, 224) [87.66235311 17.00450525  5.1552469 ]\n",
      "(3, 224) [87.66175717 17.00448235  5.15521881]\n",
      "(3, 224) [87.66098416 17.00443723  5.15518703]\n",
      "(3, 224) [87.66025218 17.0043777   5.15516203]\n",
      "(3, 224) [87.65945109 17.0043246   5.15513101]\n",
      "(3, 224) [87.65861858 17.0042987   5.15508993]\n",
      "(3, 224) [87.65806354 17.00428258  5.15506219]\n",
      "(3, 224) [87.65737049 17.00425675  5.15502928]\n",
      "(3, 224) [87.65650031 17.00422412  5.15498802]\n",
      "(3, 224) [87.65562873 17.00422571  5.15493631]\n",
      "(3, 224) [87.65514225 17.00422257  5.15490867]\n",
      "(3, 224) [87.65446717 17.00418961  5.15487896]\n",
      "(3, 224) [87.65378776 17.00415513  5.15484947]\n",
      "(3, 224) [87.65302137 17.00411131  5.15481769]\n",
      "(3, 224) [87.65234866 17.00404963  5.15479682]\n",
      "(3, 224) [87.65176433 17.00400602  5.15477567]\n",
      "(3, 224) [87.65122232 17.00394826  5.15476129]\n",
      "(3, 224) [87.65046783 17.0038999   5.15473158]\n",
      "(3, 224) [87.649759   17.00383335  5.15471006]\n",
      "(3, 224) [87.64906602 17.00376834  5.154689  ]\n",
      "(3, 224) [87.64837305 17.00372191  5.15466232]\n",
      "(3, 224) [87.64766409 17.00366864  5.15463677]\n",
      "(3, 224) [87.6469395  17.00361739  5.15460969]\n",
      "(3, 224) [87.6463087  17.00361259  5.15457406]\n",
      "(3, 224) [87.6456445  17.00361832  5.15453328]\n",
      "(3, 224) [87.64508855 17.00359328  5.15450818]\n",
      "(3, 224) [87.64448751 17.00360011  5.15447078]\n",
      "(3, 224) [87.64409623 17.00360518  5.15444625]\n",
      "(3, 224) [87.64352336 17.00359983  5.15441419]\n",
      "(3, 224) [87.64305456 17.0036057   5.15438486]\n",
      "(3, 224) [87.64235895 17.00362493  5.15433814]\n",
      "(3, 224) [87.64152437 17.00364849  5.15428193]\n",
      "(3, 224) [87.6406223  17.00365835  5.15422592]\n",
      "(3, 224) [87.63978095 17.00369742  5.15416464]\n",
      "(3, 224) [87.63876986 17.00370541  5.1541028 ]\n",
      "(3, 224) [87.63779955 17.00372502  5.15403983]\n",
      "(3, 224) [87.63688452 17.00375226  5.1539778 ]\n",
      "(3, 224) [87.63589486 17.0037967   5.15390618]\n",
      "(3, 224) [87.63498959 17.00378856  5.15385543]\n",
      "(3, 224) [87.63423677 17.00379698  5.15380863]\n",
      "(3, 224) [87.6335426  17.00380375  5.15376577]\n",
      "(3, 224) [87.63291775 17.00381685  5.15372507]\n",
      "(3, 224) [87.63216079 17.00383563  5.15367488]\n",
      "(3, 224) [87.6312247  17.00385191  5.15361492]\n",
      "(3, 224) [87.63037132 17.00386252  5.15356154]\n",
      "(3, 224) [87.62940484 17.00389624  5.1534945 ]\n",
      "(3, 224) [87.62854639 17.00393509  5.15343226]\n",
      "(3, 224) [87.62768549 17.00393432  5.15338188]\n",
      "(3, 224) [87.62674477 17.00394946  5.153322  ]\n",
      "(3, 224) [87.62583282 17.00395712  5.15326606]\n",
      "(3, 224) [87.62507318 17.00396083  5.15322027]\n",
      "(3, 224) [87.62425565 17.00397371  5.15316831]\n",
      "(3, 224) [87.62317224 17.00397753  5.15310345]\n",
      "(3, 224) [87.62225202 17.00399165  5.15304506]\n",
      "(3, 224) [87.62112427 17.00401229  5.1529725 ]\n",
      "(3, 224) [87.62021251 17.00404417  5.15290922]\n",
      "(3, 224) [87.6195516  17.00404311  5.15287069]\n",
      "(3, 224) [87.61895723 17.00402553  5.15284107]\n",
      "(3, 224) [87.61801284 17.00401511  5.15278869]\n",
      "(3, 224) [87.61710344 17.00400702  5.15273765]\n",
      "(3, 224) [87.6162267  17.00400591  5.15268643]\n",
      "(3, 224) [87.61548021 17.00402325  5.15263728]\n",
      "(3, 224) [87.61486923 17.00403934  5.15259648]\n",
      "(3, 224) [87.61394903 17.00404166  5.15254166]\n",
      "(3, 224) [87.61316482 17.00405513  5.15249147]\n",
      "(3, 224) [87.61231818 17.00407632  5.15243526]\n",
      "(3, 224) [87.6112218  17.00409644  5.15236468]\n",
      "(3, 224) [87.6103249  17.00411024  5.15230774]\n",
      "(3, 224) [87.60923174 17.00409095  5.15224929]\n",
      "(3, 224) [87.60830744 17.00407367  5.15220015]\n",
      "(3, 224) [87.60745552 17.00406866  5.15215155]\n",
      "(3, 224) [87.60655234 17.00405582  5.15210231]\n",
      "(3, 224) [87.60567743 17.00405294  5.15205171]\n",
      "(3, 224) [87.60478245 17.00406723  5.15199473]\n",
      "(3, 224) [87.60393157 17.00409774  5.15193542]\n",
      "(3, 224) [87.60295037 17.00410797  5.15187461]\n",
      "(3, 224) [87.60183985 17.00413628  5.15180071]\n",
      "(3, 224) [87.60066361 17.00415603  5.15172555]\n",
      "(3, 224) [87.59948563 17.00414856  5.15165852]\n",
      "(3, 224) [87.59866004 17.00415982  5.15160654]\n",
      "(3, 224) [87.59778553 17.00416373  5.15155392]\n",
      "(3, 224) [87.59709718 17.0041545   5.15151622]\n",
      "(3, 224) [87.59643404 17.00413528  5.15148304]\n",
      "(3, 224) [87.59526614 17.00412597  5.15141716]\n",
      "(3, 224) [87.59400186 17.0041143   5.15134632]\n",
      "(3, 224) [87.59296962 17.0041235   5.15128282]\n",
      "(3, 224) [87.59199135 17.00409953  5.15123254]\n",
      "(3, 224) [87.59109971 17.004053    5.15119419]\n",
      "(3, 224) [87.589969   17.00397312  5.15115188]\n",
      "(3, 224) [87.58890486 17.00391365  5.1511073 ]\n",
      "(3, 224) [87.58767861 17.00384589  5.15105571]\n",
      "(3, 224) [87.58650023 17.00377188  5.15100882]\n",
      "(3, 224) [87.58516063 17.00370193  5.15095122]\n",
      "(3, 224) [87.58381598 17.00364467  5.15088947]\n",
      "(3, 224) [87.58262926 17.00358587  5.15083749]\n",
      "(3, 224) [87.58153786 17.00355658  5.15078215]\n",
      "(3, 224) [87.5801871  17.0035526   5.15070389]\n",
      "(3, 224) [87.57879112 17.00354854  5.15062298]\n",
      "(3, 224) [87.57764571 17.00354744  5.15055592]\n",
      "(3, 224) [87.57627269 17.00354226  5.15047671]\n",
      "(3, 224) [87.57499302 17.00355662  5.15039704]\n",
      "(3, 224) [87.57371668 17.00357928  5.15031506]\n",
      "(3, 224) [87.57231624 17.00362121  5.15021994]\n",
      "(3, 224) [87.57101622 17.00370998  5.15011647]\n",
      "(3, 224) [87.56985638 17.00386814  5.15000019]\n",
      "(3, 224) [87.56849757 17.00398844  5.14988372]\n",
      "(3, 224) [87.56727767 17.00411723  5.14977288]\n",
      "(3, 224) [87.56578627 17.00423363  5.14964984]\n",
      "(3, 224) [87.56434732 17.00436062  5.14952669]\n",
      "(3, 224) [87.56285127 17.0044815   5.14940203]\n",
      "(3, 224) [87.56117786 17.00463113  5.14925822]\n",
      "(3, 224) [87.55964453 17.00477964  5.14912299]\n",
      "(3, 224) [87.55784484 17.00490323  5.14897962]\n",
      "(3, 224) [87.55610621 17.00505434  5.14883156]\n",
      "(3, 224) [87.55447561 17.00521811  5.14868601]\n",
      "(3, 224) [87.55291269 17.00537057  5.14854783]\n",
      "(3, 224) [87.55124515 17.0055066   5.14840853]\n",
      "(3, 224) [87.54999854 17.00564908  5.14829203]\n",
      "(3, 224) [87.5486414  17.00579333  5.14816849]\n",
      "(3, 224) [87.54718462 17.00594906  5.14803562]\n",
      "(3, 224) [87.54567425 17.00610707  5.14789888]\n",
      "(3, 224) [87.54375724 17.00627666  5.14773475]\n",
      "(3, 224) [87.54191506 17.00642916  5.14758019]\n",
      "(3, 224) [87.54008977 17.00657764  5.14742788]\n",
      "(3, 224) [87.53860446 17.00668805  5.14730707]\n",
      "(3, 224) [87.53724206 17.00679431  5.14719478]\n",
      "(3, 224) [87.53594269 17.00688255  5.14709168]\n",
      "(3, 224) [87.53454858 17.00699253  5.14697639]\n",
      "(3, 224) [87.53308336 17.00710114  5.14685734]\n",
      "(3, 224) [87.53174964 17.00718268  5.14675424]\n",
      "(3, 224) [87.53038783 17.0072561   5.14665197]\n",
      "(3, 224) [87.52897952 17.00735811  5.1465383 ]\n",
      "(3, 224) [87.52723995 17.0074702   5.14640212]\n",
      "(3, 224) [87.52587494 17.00756614  5.14629283]\n",
      "(3, 224) [87.5246069  17.0076626   5.14618909]\n",
      "(3, 224) [87.52311941 17.00774839  5.14607567]\n",
      "(3, 224) [87.52187239 17.00785266  5.1459708 ]\n",
      "(3, 224) [87.5205279  17.00797018  5.14585619]\n",
      "(3, 224) [87.51893506 17.00805393  5.14573719]\n",
      "(3, 224) [87.51714091 17.00816752  5.14559732]\n",
      "(3, 224) [87.51547373 17.00825956  5.14547143]\n",
      "(3, 224) [87.51420153 17.00834503  5.14537074]\n",
      "(3, 224) [87.51289061 17.00843711  5.14526575]\n",
      "(3, 224) [87.5114643  17.00855676  5.14514563]\n",
      "(3, 224) [87.51012853 17.00865112  5.14503849]\n",
      "(3, 224) [87.50889624 17.0087513   5.14493567]\n",
      "(3, 224) [87.50765348 17.00884969  5.14483278]\n",
      "(3, 224) [87.50640238 17.00894014  5.14473176]\n",
      "(3, 224) [87.50492124 17.00900495  5.14462501]\n",
      "(3, 224) [87.50353614 17.00908861  5.14451818]\n",
      "(3, 224) [87.50183851 17.00915793  5.1443973 ]\n",
      "(3, 224) [87.50028117 17.00924054  5.14428067]\n",
      "(3, 224) [87.49885903 17.00932581  5.14417116]\n",
      "(3, 224) [87.49736949 17.00940918  5.14405828]\n",
      "(3, 224) [87.49606491 17.00948471  5.14395866]\n",
      "(3, 224) [87.49482281 17.00954575  5.1438671 ]\n",
      "(3, 224) [87.49342677 17.0096041   5.14376729]\n",
      "(3, 224) [87.49210254 17.00968693  5.14366429]\n",
      "(3, 224) [87.49067394 17.00976354  5.14355703]\n",
      "(3, 224) [87.48923797 17.00984138  5.14344897]\n",
      "(3, 224) [87.48792128 17.00989892  5.14335409]\n",
      "(3, 224) [87.48634633 17.00993057  5.14325186]\n",
      "(3, 224) [87.48493127 17.0099564   5.14316081]\n",
      "(3, 224) [87.48344786 17.00997363  5.14306833]\n",
      "(3, 224) [87.48232321 17.00996484  5.14300483]\n",
      "(3, 224) [87.48104707 17.00994804  5.14293484]\n",
      "(3, 224) [87.47985656 17.00985029  5.14289439]\n",
      "(3, 224) [87.47870846 17.00975213  5.14285655]\n",
      "(3, 224) [87.47746862 17.00961396  5.14282545]\n",
      "(3, 224) [87.47625241 17.0094677   5.14279819]\n",
      "(3, 224) [87.47497815 17.00930729  5.14277179]\n",
      "(3, 224) [87.47364354 17.00910204  5.14275542]\n",
      "(3, 224) [87.47241877 17.00889086  5.14274731]\n",
      "(3, 224) [87.47152943 17.00865356  5.14276684]\n",
      "(3, 224) [87.47031015 17.00839634  5.142773  ]\n",
      "(3, 224) [87.46895058 17.00814061  5.14277044]\n",
      "(3, 224) [87.46759735 17.00787035  5.1427727 ]\n",
      "(3, 224) [87.46641724 17.00754662  5.14280137]\n",
      "(3, 224) [87.46507543 17.00722313  5.14282042]\n",
      "(3, 224) [87.46369763 17.00699963  5.14280705]\n",
      "(3, 224) [87.4625333  17.0067773   5.14280588]\n",
      "(3, 224) [87.46142866 17.0065643   5.14280537]\n",
      "(3, 224) [87.46006877 17.00632604  5.14279753]\n",
      "(3, 224) [87.45850733 17.00608073  5.14277996]\n",
      "(3, 224) [87.45690318 17.00584596  5.14275668]\n",
      "(3, 224) [87.45535853 17.00561959  5.14273434]\n",
      "(3, 224) [87.45401182 17.00542757  5.14271325]\n",
      "(3, 224) [87.4527478  17.00525969  5.14268971]\n",
      "(3, 224) [87.45148579 17.00505559  5.14267724]\n",
      "(3, 224) [87.45040611 17.00482868  5.1426824 ]\n",
      "(3, 224) [87.44929335 17.00463313  5.14267613]\n",
      "(3, 224) [87.44806485 17.00444885  5.14265964]\n",
      "(3, 224) [87.4467075  17.00425221  5.14263927]\n",
      "(3, 224) [87.44551572 17.00407673  5.14262225]\n",
      "(3, 224) [87.4442657  17.00393465  5.14259171]\n",
      "(3, 224) [87.44309177 17.00377747  5.1425702 ]\n",
      "(3, 224) [87.44198519 17.00361269  5.14255496]\n",
      "(3, 224) [87.44106254 17.00345523  5.14254833]\n",
      "(3, 224) [87.43987858 17.00332563  5.14251789]\n",
      "(3, 224) [87.43892601 17.00314675  5.14251598]\n",
      "(3, 224) [87.43785933 17.00293164  5.14251832]\n",
      "(3, 224) [87.43707592 17.00275274  5.14252637]\n",
      "(3, 224) [87.43612333 17.00256592  5.14252684]\n",
      "(3, 224) [87.43482613 17.00238751  5.14250451]\n",
      "(3, 224) [87.43346617 17.00220957  5.14247836]\n",
      "(3, 224) [87.43211944 17.00200897  5.14245984]\n",
      "(3, 224) [87.43095487 17.00178129  5.14246024]\n",
      "(3, 224) [87.42960845 17.0015536   5.14244998]\n",
      "(3, 224) [87.42854769 17.00131364  5.14246021]\n",
      "(3, 224) [87.42750104 17.00105877  5.14247579]\n",
      "(3, 224) [87.42656769 17.00081968  5.1424933 ]\n",
      "(3, 224) [87.42526219 17.0006237   5.1424758 ]\n",
      "(3, 224) [87.42420078 17.00037163  5.14248968]\n",
      "(3, 224) [87.42331683 17.00010747  5.14251765]\n",
      "(3, 224) [87.42219144 16.99988985  5.14251731]\n",
      "(3, 224) [87.4212019  16.99965168  5.1425312 ]\n",
      "(3, 224) [87.42010866 16.99941324  5.14253908]\n",
      "(3, 224) [87.41908694 16.99918025  5.14254954]\n",
      "(3, 224) [87.41810502 16.99895385  5.14256032]\n",
      "(3, 224) [87.41715154 16.99871111  5.1425777 ]\n",
      "(3, 224) [87.41614949 16.99848626  5.14258681]\n",
      "(3, 224) [87.41508684 16.99826954  5.1425899 ]\n",
      "(3, 224) [87.41415751 16.99804615  5.14260285]\n",
      "(3, 224) [87.41318907 16.99780519  5.14261885]\n",
      "(3, 224) [87.41222961 16.9975751   5.14263207]\n",
      "(3, 224) [87.41132001 16.99737084  5.1426404 ]\n",
      "(3, 224) [87.41039983 16.99718065  5.14264385]\n",
      "(3, 224) [87.40946575 16.99699058  5.14264645]\n",
      "(3, 224) [87.40867162 16.99680904  5.14265469]\n",
      "(3, 224) [87.40794587 16.99659027  5.14267823]\n",
      "(3, 224) [87.40702025 16.99636042  5.14269335]\n",
      "(3, 224) [87.40618991 16.99612014  5.14271726]\n",
      "(3, 224) [87.40548929 16.99589687  5.14274363]\n",
      "(3, 224) [87.40460013 16.99565271  5.14276523]\n",
      "(3, 224) [87.4032843  16.99544424  5.14275092]\n",
      "(3, 224) [87.4022702  16.99523679  5.14275404]\n",
      "(3, 224) [87.40131078 16.99502298  5.14276231]\n",
      "(3, 224) [87.40004049 16.9948273   5.14274679]\n",
      "(3, 224) [87.39887146 16.99463505  5.14273621]\n",
      "(3, 224) [87.39767155 16.99444937  5.14272181]\n",
      "(3, 224) [87.3964573  16.9942658   5.14270592]\n",
      "(3, 224) [87.39533257 16.99409042  5.14269283]\n",
      "(3, 224) [87.39410522 16.99391824  5.14267272]\n",
      "(3, 224) [87.39289931 16.99377521  5.14264504]\n",
      "(3, 224) [87.39188108 16.99363331  5.14262806]\n",
      "(3, 224) [87.39085286 16.99350224  5.14260722]\n",
      "(3, 224) [87.38981668 16.99335587  5.14259055]\n",
      "(3, 224) [87.38862093 16.9932428   5.14255441]\n",
      "(3, 224) [87.38754258 16.99313042  5.14252496]\n",
      "(3, 224) [87.38656234 16.9930324   5.14249695]\n",
      "(3, 224) [87.3855542  16.99292812  5.14246918]\n",
      "(3, 224) [87.38435002 16.99283964  5.14242512]\n",
      "(3, 224) [87.38328281 16.9927628   5.14238559]\n",
      "(3, 224) [87.38219537 16.99267556  5.14234801]\n",
      "(3, 224) [87.3812631  16.99258608  5.14232023]\n",
      "(3, 224) [87.38039424 16.99250337  5.14229414]\n",
      "(3, 224) [87.37947341 16.99243283  5.14226131]\n",
      "(3, 224) [87.37862342 16.99233821  5.14223993]\n",
      "(3, 224) [87.37758338 16.99225146  5.14220499]\n",
      "(3, 224) [87.37676636 16.99216825  5.1421821 ]\n",
      "(3, 224) [87.37590258 16.9920731   5.14216007]\n",
      "(3, 224) [87.3751318 16.9919495  5.1421521]\n",
      "(3, 224) [87.37415618 16.99186509  5.14212024]\n",
      "(3, 224) [87.37309849 16.99177651  5.14208482]\n",
      "(3, 224) [87.37206912 16.99169971  5.1420475 ]\n",
      "(3, 224) [87.37105047 16.99160914  5.14201499]\n",
      "(3, 224) [87.37007606 16.99152137  5.14198423]\n",
      "(3, 224) [87.36912913 16.99145911  5.14194736]\n",
      "(3, 224) [87.36824433 16.99138544  5.14191761]\n",
      "(3, 224) [87.36726484 16.99129607  5.14188703]\n",
      "(3, 224) [87.3660536  16.99121094  5.14184155]\n",
      "(3, 224) [87.36534472 16.99112509  5.14182582]\n",
      "(3, 224) [87.36437697 16.99102693  5.1417986 ]\n",
      "(3, 224) [87.36334467 16.9909561   5.14175931]\n",
      "(3, 224) [87.36240021 16.99089286  5.14172289]\n",
      "(3, 224) [87.36142562 16.99082414  5.14168635]\n",
      "(3, 224) [87.3605453  16.99075088  5.14165673]\n",
      "(3, 224) [87.3596629  16.99068012  5.14162623]\n",
      "(3, 224) [87.35915856 16.9906185   5.14161521]\n",
      "(3, 224) [87.35828343 16.99052938  5.1415907 ]\n",
      "(3, 224) [87.35735333 16.99045918  5.14155723]\n",
      "(3, 224) [87.35642792 16.99040719  5.14151853]\n",
      "(3, 224) [87.35554206 16.9903794   5.14147482]\n",
      "(3, 224) [87.35479374 16.99034148  5.14144227]\n",
      "(3, 224) [87.35417001 16.99027315  5.14142626]\n",
      "(3, 224) [87.35339288 16.99019849  5.14140313]\n",
      "(3, 224) [87.35246488 16.99010537  5.14137672]\n",
      "(3, 224) [87.35183743 16.99002082  5.1413654 ]\n",
      "(3, 224) [87.35131222 16.98991837  5.14136551]\n",
      "(3, 224) [87.35075245 16.98983827  5.14135682]\n",
      "(3, 224) [87.3503998  16.98974988  5.14136283]\n",
      "(3, 224) [87.34987652 16.98967122  5.14135585]\n",
      "(3, 224) [87.3493498  16.98961767  5.14134106]\n",
      "(3, 224) [87.34892552 16.98955228  5.1413359 ]\n",
      "(3, 224) [87.34822538 16.98950904  5.14130779]\n",
      "(3, 224) [87.34771553 16.98946403  5.14129141]\n",
      "(3, 224) [87.34696052 16.9894163   5.14126143]\n",
      "(3, 224) [87.3461879  16.98934836  5.14123653]\n",
      "(3, 224) [87.3457115  16.98929013  5.14122613]\n",
      "(3, 224) [87.34496108 16.98922393  5.141202  ]\n",
      "(3, 224) [87.34442021 16.98913644  5.14119667]\n",
      "(3, 224) [87.34416615 16.98904371  5.14120979]\n",
      "(3, 224) [87.34375596 16.98897546  5.14120631]\n",
      "(3, 224) [87.34333513 16.98889355  5.14120636]\n",
      "(3, 224) [87.34289236 16.98880782  5.14120626]\n",
      "(3, 224) [87.34226387 16.98874146  5.14118937]\n",
      "(3, 224) [87.3415403  16.9886776   5.14116613]\n",
      "(3, 224) [87.34124973 16.98860195  5.14117193]\n",
      "(3, 224) [87.34090737 16.98853548  5.1411719 ]\n",
      "(3, 224) [87.3404686  16.98844104  5.14117466]\n",
      "(3, 224) [87.33994271 16.98837067  5.14116501]\n",
      "(3, 224) [87.33933722 16.98830675  5.14114873]\n",
      "(3, 224) [87.33895098 16.98825835  5.14114065]\n",
      "(3, 224) [87.33832699 16.98820788  5.14111921]\n",
      "(3, 224) [87.3378196  16.98815433  5.14110555]\n",
      "(3, 224) [87.33750457 16.98809964  5.14110357]\n",
      "(3, 224) [87.33726205 16.98804538  5.14110572]\n",
      "(3, 224) [87.33701915 16.98798487  5.14110975]\n",
      "(3, 224) [87.33662288 16.98792926  5.14110326]\n",
      "(3, 224) [87.33631281 16.9878904   5.14109678]\n",
      "(3, 224) [87.33591927 16.98782524  5.14109334]\n",
      "(3, 224) [87.3355533  16.9877649   5.14109006]\n",
      "(3, 224) [87.33529911 16.9877143   5.14109042]\n",
      "(3, 224) [87.33506489 16.98765952  5.14109322]\n",
      "(3, 224) [87.33481856 16.98760735  5.14109452]\n",
      "(3, 224) [87.33437601 16.98755551  5.14108416]\n",
      "(3, 224) [87.33424713 16.98748466  5.14109802]\n",
      "(3, 224) [87.33406515 16.98741713  5.14110775]\n",
      "(3, 224) [87.3338282  16.98732552  5.14112154]\n",
      "(3, 224) [87.33359773 16.98722707  5.14113776]\n",
      "(3, 224) [87.33314787 16.9871022   5.14114907]\n",
      "(3, 224) [87.33295363 16.98696956  5.14117776]\n",
      "(3, 224) [87.3325458  16.98683169  5.14119545]\n",
      "(3, 224) [87.33226421 16.98669651  5.14121977]\n",
      "(3, 224) [87.33196514 16.98653917  5.14124974]\n",
      "(3, 224) [87.33158059 16.98638135  5.14127483]\n",
      "(3, 224) [87.33143949 16.98626198  5.14130262]\n",
      "(3, 224) [87.33141486 16.98611124  5.14134672]\n",
      "(3, 224) [87.33109671 16.98593352  5.14138173]\n",
      "(3, 224) [87.33088694 16.98577122  5.14141848]\n",
      "(3, 224) [87.33077364 16.98560211  5.14146294]\n",
      "(3, 224) [87.33049646 16.985433    5.14149777]\n",
      "(3, 224) [87.33016121 16.98526749  5.14152809]\n",
      "(3, 224) [87.33015386 16.9850928   5.14158048]\n",
      "(3, 224) [87.32982373 16.98491835  5.1416138 ]\n",
      "(3, 224) [87.32988376 16.98472097  5.141677  ]\n",
      "(3, 224) [87.32987099 16.98453863  5.14173137]\n",
      "(3, 224) [87.33000739 16.98434194  5.14179886]\n",
      "(3, 224) [87.32978391 16.98416997  5.14183771]\n",
      "(3, 224) [87.3295516  16.98396912  5.1418848 ]\n",
      "(3, 224) [87.32923125 16.98375916  5.14192945]\n",
      "(3, 224) [87.32915599 16.98356449  5.14198392]\n",
      "(3, 224) [87.32897954 16.98335469  5.14203699]\n",
      "(3, 224) [87.32898101 16.9831527   5.1420982 ]\n",
      "(3, 224) [87.32872384 16.98294267  5.14214659]\n",
      "(3, 224) [87.32868107 16.98271196  5.14221386]\n",
      "(3, 224) [87.32852407 16.98246587  5.14227902]\n",
      "(3, 224) [87.32834125 16.9822105   5.14234555]\n",
      "(3, 224) [87.32807751 16.98192899  5.14241525]\n",
      "(3, 224) [87.32783872 16.98165479  5.14248421]\n",
      "(3, 224) [87.32744923 16.98138578  5.14254269]\n",
      "(3, 224) [87.32720854 16.98111456  5.14261061]\n",
      "(3, 224) [87.32713487 16.98085887  5.14268367]\n",
      "(3, 224) [87.32718979 16.98056277  5.14277654]\n",
      "(3, 224) [87.32714054 16.98029796  5.14285379]\n",
      "(3, 224) [87.32677767 16.98004491  5.14290904]\n",
      "(3, 224) [87.32635151 16.97980255  5.14295735]\n",
      "(3, 224) [87.32621432 16.97949076  5.14304374]\n",
      "(3, 224) [87.32622161 16.97917317  5.14314045]\n",
      "(3, 224) [87.32621411 16.97884609  5.1432392 ]\n",
      "(3, 224) [87.32589756 16.97843627  5.1433449 ]\n",
      "(3, 224) [87.32570861 16.97815422  5.14341928]\n",
      "(3, 224) [87.32560927 16.97783275  5.14351093]\n",
      "(3, 224) [87.32556614 16.97753954  5.14359729]\n",
      "(3, 224) [87.32588775 16.97724838  5.14370455]\n",
      "(3, 224) [87.3261056  16.97694366  5.14380977]\n",
      "(3, 224) [87.32623459 16.97664705  5.14390733]\n",
      "(3, 224) [87.32624695 16.97634045  5.14400099]\n",
      "(3, 224) [87.32640149 16.97604934  5.14409838]\n",
      "(3, 224) [87.32645264 16.97575154  5.14419173]\n",
      "(3, 224) [87.32654148 16.97545735  5.14428621]\n",
      "(3, 224) [87.32653101 16.97513128  5.14438451]\n",
      "(3, 224) [87.32670841 16.97482184  5.1444888 ]\n",
      "(3, 224) [87.32672133 16.97451217  5.14458348]\n",
      "(3, 224) [87.32657122 16.97419601  5.14467049]\n",
      "(3, 224) [87.32651012 16.97390944  5.14475376]\n",
      "(3, 224) [87.32652773 16.97360469  5.14484722]\n",
      "(3, 224) [87.32639566 16.97333449  5.14492133]\n",
      "(3, 224) [87.32617198 16.97309107  5.14498197]\n",
      "(3, 224) [87.32600719 16.97284505  5.14504688]\n",
      "(3, 224) [87.3259453  16.9726677   5.14509708]\n",
      "(3, 224) [87.32590212 16.97249409  5.14514726]\n",
      "(3, 224) [87.32590969 16.97230658  5.1452047 ]\n",
      "(3, 224) [87.32596576 16.97210647  5.14526886]\n",
      "(3, 224) [87.32603833 16.97187097  5.14534473]\n",
      "(3, 224) [87.32620592 16.97167631  5.14541383]\n",
      "(3, 224) [87.32641232 16.97151819  5.14547408]\n",
      "(3, 224) [87.32624793 16.97136069  5.14551226]\n",
      "(3, 224) [87.3262562  16.97119486  5.14556317]\n",
      "(3, 224) [87.32627328 16.97105466  5.14560678]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  9%|██████▋                                                                    | 6845/76339 [00:02<00:31, 2229.07it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "(3, 224) [87.32612236 16.97095996  5.14562666]\n",
      "(3, 224) [87.32597777 16.97086854  5.14564595]\n",
      "(3, 224) [87.3259893  16.97074628  5.14568383]\n",
      "(3, 224) [87.32603306 16.9705072   5.14575915]\n",
      "(3, 224) [87.32624139 16.97015961  5.14587739]\n",
      "(3, 224) [87.32607288 16.96963017  5.14602902]\n",
      "(3, 224) [87.32620983 16.96913156  5.14618942]\n",
      "(3, 224) [87.32629199 16.9686257   5.14634874]\n",
      "(3, 224) [87.32624465 16.96815611  5.1464892 ]\n",
      "(3, 224) [87.32618685 16.96773727  5.14661348]\n",
      "(3, 224) [87.32608454 16.96731807  5.14673516]\n",
      "(3, 224) [87.32616759 16.96687485  5.14687518]\n",
      "(3, 224) [87.32651774 16.966441    5.14702817]\n",
      "(3, 224) [87.32691888 16.96598569  5.14719082]\n",
      "(3, 224) [87.32709087 16.96550525  5.14734753]\n",
      "(3, 224) [87.32728088 16.96504308  5.14749967]\n",
      "(3, 224) [87.32777494 16.96454018  5.14768223]\n",
      "(3, 224) [87.32800369 16.96409965  5.14782999]\n",
      "(3, 224) [87.3283508  16.96361467  5.1479984 ]\n",
      "(3, 224) [87.32864574 16.96314902  5.14815776]\n",
      "(3, 224) [87.32899622 16.96263027  5.14833679]\n",
      "(3, 224) [87.32914786 16.9621121   5.14850393]\n",
      "(3, 224) [87.32941332 16.96154513  5.14869275]\n",
      "(3, 224) [87.32935658 16.96097303  5.14886412]\n",
      "(3, 224) [87.32905425 16.96035213  5.14903592]\n",
      "(3, 224) [87.32870091 16.95977787  5.14919033]\n",
      "(3, 224) [87.32841547 16.95921186  5.14934614]\n",
      "(3, 224) [87.327679   16.95860736  5.14948694]\n",
      "(3, 224) [87.32688982 16.95796495  5.14963636]\n",
      "(3, 224) [87.32623385 16.95741887  5.14976412]\n",
      "(3, 224) [87.32524387 16.95686441  5.14987471]\n",
      "(3, 224) [87.32421968 16.95632009  5.14998024]\n",
      "(3, 224) [87.32306442 16.95580653  5.15006854]\n",
      "(3, 224) [87.32195691 16.95528318  5.1501627 ]\n",
      "(3, 224) [87.32068632 16.95480461  5.15023353]\n",
      "(3, 224) [87.31952492 16.95423514  5.15033848]\n",
      "(3, 224) [87.31830086 16.95369575  5.15043067]\n",
      "(3, 224) [87.31681508 16.95317749  5.15050086]\n",
      "(3, 224) [87.31562976 16.95265935  5.15058873]\n",
      "(3, 224) [87.31419107 16.95213961  5.15066214]\n",
      "(3, 224) [87.31296481 16.95158834  5.15075782]\n",
      "(3, 224) [87.31162691 16.95094613  5.15087489]\n",
      "(3, 224) [87.31020161 16.95025012  5.15100324]\n",
      "(3, 224) [87.30938793 16.9496408   5.15114122]\n",
      "(3, 224) [87.30833803 16.94902044  5.15126856]\n",
      "(3, 224) [87.30737667 16.94840857  5.15139853]\n",
      "(3, 224) [87.30640055 16.94783312  5.15151645]\n",
      "(3, 224) [87.30532693 16.94727773  5.15162253]\n",
      "(3, 224) [87.3045605  16.94667642  5.15176089]\n",
      "(3, 224) [87.30376411 16.94605455  5.15190378]\n",
      "(3, 224) [87.30289672 16.94540247  5.15205171]\n",
      "(3, 224) [87.30226518 16.94478148  5.15220413]\n",
      "(3, 224) [87.30164618 16.94415081  5.15236024]\n",
      "(3, 224) [87.30086464 16.94351075  5.15250964]\n",
      "(3, 224) [87.30020917 16.94288482  5.15266215]\n",
      "(3, 224) [87.29952297 16.94228959  5.1528035 ]\n",
      "(3, 224) [87.29938506 16.94168652  5.15297976]\n",
      "(3, 224) [87.29932735 16.9411203   5.15314946]\n",
      "(3, 224) [87.29956453 16.94052942  5.1533441 ]\n",
      "(3, 224) [87.29976398 16.93995704  5.15353083]\n",
      "(3, 224) [87.29983801 16.93940639  5.15370346]\n",
      "(3, 224) [87.29992232 16.93882067  5.15388739]\n",
      "(3, 224) [87.29998049 16.93822258  5.15407364]\n",
      "(3, 224) [87.30006591 16.9376238   5.15426166]\n",
      "(3, 224) [87.30032539 16.93699161  5.15447031]\n",
      "(3, 224) [87.30031674 16.93636022  5.1546628 ]\n",
      "(3, 224) [87.3006033 16.935718   5.1548761]\n",
      "(3, 224) [87.30077377 16.93504436  5.15509205]\n",
      "(3, 224) [87.30074854 16.93432027  5.15531184]\n",
      "(3, 224) [87.30079462 16.933607    5.1555325 ]\n",
      "(3, 224) [87.30064891 16.93292149  5.1557334 ]\n",
      "(3, 224) [87.30060685 16.93217643  5.15595856]\n",
      "(3, 224) [87.30044687 16.93141663  5.15618119]\n",
      "(3, 224) [87.3002247  16.93065774  5.15639992]\n",
      "(3, 224) [87.30017153 16.92987643  5.1566355 ]\n",
      "(3, 224) [87.29997433 16.92910317  5.15685999]\n",
      "(3, 224) [87.29962969 16.92832688  5.15707659]\n",
      "(3, 224) [87.29937835 16.92759432  5.15728532]\n",
      "(3, 224) [87.29936271 16.92685706  5.15750951]\n",
      "(3, 224) [87.29945398 16.92611581  5.15774128]\n",
      "(3, 224) [87.29937619 16.92535521  5.15796887]\n",
      "(3, 224) [87.29916493 16.92458172  5.15819252]\n",
      "(3, 224) [87.29926154 16.92382113  5.1584304 ]\n",
      "(3, 224) [87.29902346 16.92305702  5.15864957]\n",
      "(3, 224) [87.29887074 16.9223154   5.15886694]\n",
      "(3, 224) [87.29853341 16.92156999  5.1590746 ]\n",
      "(3, 224) [87.2983939  16.92083309  5.1592913 ]\n",
      "(3, 224) [87.29829556 16.92006005  5.15952157]\n",
      "(3, 224) [87.29808887 16.91927943  5.15974773]\n",
      "(3, 224) [87.29750679 16.91847984  5.15995758]\n",
      "(3, 224) [87.29694392 16.91767907  5.16016885]\n",
      "(3, 224) [87.29646854 16.91687428  5.16038644]\n",
      "(3, 224) [87.29595388 16.91607512  5.16060006]\n",
      "(3, 224) [87.29545784 16.91525581  5.160821  ]\n",
      "(3, 224) [87.29526866 16.91443772  5.16105977]\n",
      "(3, 224) [87.29484491 16.91362343  5.16128366]\n",
      "(3, 224) [87.29453343 16.91283845  5.1615051 ]\n",
      "(3, 224) [87.29411112 16.91200179  5.16173581]\n",
      "(3, 224) [87.29376998 16.91121229  5.16195679]\n",
      "(3, 224) [87.29348809 16.91040742  5.16218594]\n",
      "(3, 224) [87.29335266 16.90963447  5.16241405]\n",
      "(3, 224) [87.29303816 16.90886217  5.16263137]\n",
      "(3, 224) [87.29219173 16.90812684  5.16280576]\n",
      "(3, 224) [87.29181392 16.90744514  5.16299147]\n",
      "(3, 224) [87.29155046 16.90670045  5.16320325]\n",
      "(3, 224) [87.29107391 16.90591278  5.16341565]\n",
      "(3, 224) [87.29076093 16.90511606  5.16364047]\n",
      "(3, 224) [87.2903891  16.90429581  5.16386914]\n",
      "(3, 224) [87.28983031 16.90349731  5.16408018]\n",
      "(3, 224) [87.28936323 16.90266149  5.16430813]\n",
      "(3, 224) [87.28897197 16.90185176  5.16453256]\n",
      "(3, 224) [87.28872608 16.90105385  5.16476214]\n",
      "(3, 224) [87.28828043 16.90026453  5.16497722]\n",
      "(3, 224) [87.28769198 16.89946943  5.1651855 ]\n",
      "(3, 224) [87.2870243  16.89868075  5.16538722]\n",
      "(3, 224) [87.28676153 16.89786471  5.16562136]\n",
      "(3, 224) [87.28640571 16.89704877  5.16584993]\n",
      "(3, 224) [87.28604864 16.89621682  5.16608353]\n",
      "(3, 224) [87.28566641 16.89534965  5.16632632]\n",
      "(3, 224) [87.28525712 16.89450895  5.1665593 ]\n",
      "(3, 224) [87.28500817 16.89365838  5.16680488]\n",
      "(3, 224) [87.28497142 16.89282337  5.16705826]\n",
      "(3, 224) [87.28441576 16.89198399  5.1672822 ]\n",
      "(3, 224) [87.28408025 16.89113292  5.16752266]\n",
      "(3, 224) [87.2835589  16.89027521  5.16775436]\n",
      "(3, 224) [87.28293924 16.88943317  5.16797544]\n",
      "(3, 224) [87.28220003 16.88860184  5.16818608]\n",
      "(3, 224) [87.28127276 16.88777431  5.16838447]\n",
      "(3, 224) [87.28071557 16.88698484  5.16859301]\n",
      "(3, 224) [87.28007875 16.8861877   5.16879916]\n",
      "(3, 224) [87.27937458 16.88535551  5.16901206]\n",
      "(3, 224) [87.27848866 16.88449822  5.16922202]\n",
      "(3, 224) [87.27783658 16.88364804  5.1694435 ]\n",
      "(3, 224) [87.27711976 16.88282304  5.16965344]\n",
      "(3, 224) [87.27643056 16.88196399  5.16987559]\n",
      "(3, 224) [87.27578328 16.88113195  5.17009184]\n",
      "(3, 224) [87.27543053 16.88027475  5.17033352]\n",
      "(3, 224) [87.27504145 16.87941308  5.17057426]\n",
      "(3, 224) [87.27459403 16.87851131  5.17082392]\n",
      "(3, 224) [87.2741477  16.87760248  5.17107599]\n",
      "(3, 224) [87.27375474 16.87670555  5.17132753]\n",
      "(3, 224) [87.27327603 16.87579879  5.171577  ]\n",
      "(3, 224) [87.27266023 16.87490574  5.17181407]\n",
      "(3, 224) [87.27200835 16.87401106  5.17204947]\n",
      "(3, 224) [87.27136799 16.87310565  5.17228875]\n",
      "(3, 224) [87.27051712 16.87220682  5.17251354]\n",
      "(3, 224) [87.26955764 16.87129832  5.17273488]\n",
      "(3, 224) [87.26861323 16.87039266  5.17295622]\n",
      "(3, 224) [87.26759664 16.86952644  5.17316107]\n",
      "(3, 224) [87.26689479 16.8686392   5.17339097]\n",
      "(3, 224) [87.26597101 16.86774853  5.17360895]\n",
      "(3, 224) [87.26486222 16.86687796  5.1738097 ]\n",
      "(3, 224) [87.263782   16.86600981  5.1740114 ]\n",
      "(3, 224) [87.26268798 16.86514073  5.17421254]\n",
      "(3, 224) [87.261865   16.86427453  5.17442886]\n",
      "(3, 224) [87.26072419 16.86342146  5.17462228]\n",
      "(3, 224) [87.25967409 16.86254476  5.17482828]\n",
      "(3, 224) [87.25857979 16.86166505  5.17503265]\n",
      "(3, 224) [87.25773173 16.86079227  5.1752495 ]\n",
      "(3, 224) [87.25654316 16.85993159  5.17544233]\n",
      "(3, 224) [87.25555332 16.85902933  5.17565979]\n",
      "(3, 224) [87.25463584 16.8580945   5.17589166]\n",
      "(3, 224) [87.25357844 16.8571782   5.17610958]\n",
      "(3, 224) [87.25227939 16.85625396  5.17631568]\n",
      "(3, 224) [87.25117683 16.85529552  5.17654397]\n",
      "(3, 224) [87.25012664 16.85439439  5.17675764]\n",
      "(3, 224) [87.24905906 16.85343307  5.17698889]\n",
      "(3, 224) [87.24790229 16.852467    5.17721644]\n",
      "(3, 224) [87.24698486 16.8515185   5.1774527 ]\n",
      "(3, 224) [87.24556589 16.85058497  5.17765451]\n",
      "(3, 224) [87.24407738 16.84959497  5.17786966]\n",
      "(3, 224) [87.24248812 16.84864933  5.17806515]\n",
      "(3, 224) [87.2408589  16.84770023  5.1782592 ]\n",
      "(3, 224) [87.23918272 16.84678054  5.17844149]\n",
      "(3, 224) [87.23763406 16.84587699  5.17862637]\n",
      "(3, 224) [87.23582431 16.8449597   5.17880003]\n",
      "(3, 224) [87.23408235 16.84403465  5.1789801 ]\n",
      "(3, 224) [87.23209518 16.84310514  5.17914704]\n",
      "(3, 224) [87.23058008 16.84218019  5.17934058]\n",
      "(3, 224) [87.22888338 16.84126964  5.17951898]\n",
      "(3, 224) [87.22734163 16.8403812   5.17969965]\n",
      "(3, 224) [87.22574774 16.83954182  5.17986233]\n",
      "(3, 224) [87.22448192 16.83874299  5.18003212]\n",
      "(3, 224) [87.22291283 16.83794468  5.18018367]\n",
      "(3, 224) [87.22150354 16.83711843  5.18035323]\n",
      "(3, 224) [87.21991224 16.83627608  5.18051701]\n",
      "(3, 224) [87.21851824 16.83546529  5.18068281]\n",
      "(3, 224) [87.21720871 16.8346703   5.18084893]\n",
      "(3, 224) [87.21585063 16.83386343  5.18101567]\n",
      "(3, 224) [87.214753   16.83305515  5.18119833]\n",
      "(3, 224) [87.21357776 16.83221935  5.18138488]\n",
      "(3, 224) [87.21213005 16.83144327  5.18153708]\n",
      "(3, 224) [87.21071774 16.83068882  5.18168487]\n",
      "(3, 224) [87.20931174 16.82991762  5.18183832]\n",
      "(3, 224) [87.20827663 16.82920898  5.18199473]\n",
      "(3, 224) [87.20693849 16.82839563  5.18216504]\n",
      "(3, 224) [87.20571734 16.82761632  5.182332  ]\n",
      "(3, 224) [87.20433223 16.82681283  5.18249652]\n",
      "(3, 224) [87.20283592 16.82603247  5.18264745]\n",
      "(3, 224) [87.20163398 16.82524025  5.18281954]\n",
      "(3, 224) [87.20036424 16.82445038  5.18298684]\n",
      "(3, 224) [87.19948374 16.82365227  5.18317979]\n",
      "(3, 224) [87.19837836 16.82281465  5.18337174]\n",
      "(3, 224) [87.19711191 16.82200479  5.18354548]\n",
      "(3, 224) [87.19582985 16.8211907   5.1837196 ]\n",
      "(3, 224) [87.19458267 16.82040348  5.18388754]\n",
      "(3, 224) [87.19330861 16.81960696  5.18405668]\n",
      "(3, 224) [87.19212157 16.81878589  5.18423861]\n",
      "(3, 224) [87.19123734 16.81797844  5.18443426]\n",
      "(3, 224) [87.19043781 16.81715414  5.18464012]\n",
      "(3, 224) [87.18936844 16.81633095  5.18482968]\n",
      "(3, 224) [87.18850959 16.81549653  5.18503503]\n",
      "(3, 224) [87.18769804 16.81467057  5.18524057]\n",
      "(3, 224) [87.18665413 16.81383564  5.18543513]\n",
      "(3, 224) [87.18571908 16.81299499  5.18563799]\n",
      "(3, 224) [87.18475759 16.81216577  5.18583582]\n",
      "(3, 224) [87.1837229  16.8113635   5.18602114]\n",
      "(3, 224) [87.18256654 16.810554    5.18620157]\n",
      "(3, 224) [87.18152306 16.80974725  5.18638791]\n",
      "(3, 224) [87.18053398 16.80894404  5.18657646]\n",
      "(3, 224) [87.17944769 16.80809664  5.18677273]\n",
      "(3, 224) [87.17855063 16.80723754  5.18698383]\n",
      "(3, 224) [87.17752533 16.80635943  5.18719327]\n",
      "(3, 224) [87.17640101 16.80546752  5.18740088]\n",
      "(3, 224) [87.17532215 16.80461992  5.1875973 ]\n",
      "(3, 224) [87.17389485 16.80384545  5.18775049]\n",
      "(3, 224) [87.17249613 16.80307285  5.18790491]\n",
      "(3, 224) [87.17104993 16.80237639  5.18803318]\n",
      "(3, 224) [87.16956836 16.80181797  5.18811711]\n",
      "(3, 224) [87.16852572 16.80143472  5.18817331]\n",
      "(3, 224) [87.16717158 16.80104341  5.18821353]\n",
      "(3, 224) [87.16579757 16.80065449  5.18825176]\n",
      "(3, 224) [87.16475654 16.80023395  5.1883195 ]\n",
      "(3, 224) [87.16385419 16.79978431  5.18840436]\n",
      "(3, 224) [87.16289423 16.7993178   5.18849094]\n",
      "(3, 224) [87.16177034 16.79887168  5.18856157]\n",
      "(3, 224) [87.16034837 16.79838216  5.18862795]\n",
      "(3, 224) [87.15870265 16.79789736  5.18867963]\n",
      "(3, 224) [87.15736305 16.79734891  5.18876927]\n",
      "(3, 224) [87.15596065 16.79674467  5.18887239]\n",
      "(3, 224) [87.15431252 16.79618511  5.18894711]\n",
      "(3, 224) [87.15281458 16.79557389  5.18904656]\n",
      "(3, 224) [87.15119996 16.79501104  5.18912425]\n",
      "(3, 224) [87.14997302 16.79442753  5.18923138]\n",
      "(3, 224) [87.14848671 16.79393789  5.18929415]\n",
      "(3, 224) [87.14744091 16.79343993  5.18938578]\n",
      "(3, 224) [87.14630047 16.79300367  5.18945273]\n",
      "(3, 224) [87.14528334 16.79258753  5.18952076]\n",
      "(3, 224) [87.14461019 16.79225288  5.18958409]\n",
      "(3, 224) [87.14367834 16.7918558   5.18965121]\n",
      "(3, 224) [87.1429813  16.79145008  5.18973497]\n",
      "(3, 224) [87.14312988 16.79108175  5.18985751]\n",
      "(3, 224) [87.14315491 16.7907876   5.18994984]\n",
      "(3, 224) [87.14308965 16.79039047  5.19006849]\n",
      "(3, 224) [87.14305072 16.79003068  5.19017713]\n",
      "(3, 224) [87.1430192  16.78967179  5.19028596]\n",
      "(3, 224) [87.1430433  16.78925434  5.19041611]\n",
      "(3, 224) [87.14316131 16.78886021  5.19054471]\n",
      "(3, 224) [87.14359604 16.78841361  5.19070835]\n",
      "(3, 224) [87.1440195  16.78804138  5.19084839]\n",
      "(3, 224) [87.14443657 16.78767025  5.19098774]\n",
      "(3, 224) [87.14498527 16.78729739  5.19113536]\n",
      "(3, 224) [87.14537534 16.78692242  5.19127415]\n",
      "(3, 224) [87.14600072 16.78655025  5.1914261 ]\n",
      "(3, 224) [87.14628067 16.78619746  5.19155161]\n",
      "(3, 224) [87.14661988 16.78591322  5.19165965]\n",
      "(3, 224) [87.14690948 16.78567733  5.1917498 ]\n",
      "(3, 224) [87.14695645 16.78537371  5.19184639]\n",
      "(3, 224) [87.1471024  16.78508277  5.19194493]\n",
      "(3, 224) [87.14722625 16.78475987  5.19205204]\n",
      "(3, 224) [87.14758216 16.78438509  5.192189  ]\n",
      "(3, 224) [87.14753619 16.7840458   5.19229097]\n",
      "(3, 224) [87.14733362 16.78372635  5.19237759]\n",
      "(3, 224) [87.14725668 16.78343787  5.19246213]\n",
      "(3, 224) [87.14714976 16.78315881  5.19254199]\n",
      "(3, 224) [87.14677471 16.7828711   5.19260855]\n",
      "(3, 224) [87.14650127 16.78255263  5.19269071]\n",
      "(3, 224) [87.14637539 16.78222628  5.19278415]\n",
      "(3, 224) [87.14622903 16.78188101  5.19288222]\n",
      "(3, 224) [87.14629091 16.78149168  5.1930064 ]\n",
      "(3, 224) [87.14553293 16.78109653  5.19308355]\n",
      "(3, 224) [87.14488325 16.78064924  5.19318332]\n",
      "(3, 224) [87.14423764 16.78019928  5.19328423]\n",
      "(3, 224) [87.14333482 16.77973732  5.19337345]\n",
      "(3, 224) [87.1427077  16.77925358  5.19348585]\n",
      "(3, 224) [87.14218571 16.77876522  5.193606  ]\n",
      "(3, 224) [87.14161331 16.77830496  5.19371446]\n",
      "(3, 224) [87.14085132 16.77783743  5.19381383]\n",
      "(3, 224) [87.13988616 16.77739569  5.19389318]\n",
      "(3, 224) [87.13943756 16.77692022  5.19401384]\n",
      "(3, 224) [87.13866938 16.77639936  5.19412965]\n",
      "(3, 224) [87.13793907 16.77585671  5.1942545 ]\n",
      "(3, 224) [87.13719882 16.77538883  5.19435547]\n",
      "(3, 224) [87.13633426 16.77488757  5.19445939]\n",
      "(3, 224) [87.13558087 16.77439866  5.19456607]\n",
      "(3, 224) [87.13506612 16.77396218  5.19467075]\n",
      "(3, 224) [87.13457197 16.7735469   5.19477002]\n",
      "(3, 224) [87.13384851 16.77313934  5.19485321]\n",
      "(3, 224) [87.13321688 16.77273411  5.19494121]\n",
      "(3, 224) [87.13254701 16.772282    5.19504145]\n",
      "(3, 224) [87.13213718 16.77182195  5.19515964]\n",
      "(3, 224) [87.1312994  16.77131328  5.1952673 ]\n",
      "(3, 224) [87.13027875 16.77085726  5.19534774]\n",
      "(3, 224) [87.12918192 16.77045994  5.19540541]\n",
      "(3, 224) [87.12818299 16.77005033  5.1954727 ]\n",
      "(3, 224) [87.12716678 16.7696178   5.19554609]\n",
      "(3, 224) [87.12603597 16.76917813  5.19561487]\n",
      "(3, 224) [87.12482909 16.76870523  5.19568939]\n",
      "(3, 224) [87.12352269 16.76825243  5.1957517 ]\n",
      "(3, 224) [87.12243088 16.76779148  5.19582937]\n",
      "(3, 224) [87.12131705 16.76732556  5.19590726]\n",
      "(3, 224) [87.12011631 16.7668958   5.19596881]\n",
      "(3, 224) [87.11911317 16.76646519  5.19604242]\n",
      "(3, 224) [87.11819531 16.76604514  5.19611785]\n",
      "(3, 224) [87.11752995 16.76564418  5.19620241]\n",
      "(3, 224) [87.11664081 16.76525975  5.19626843]\n",
      "(3, 224) [87.11590277 16.76487349  5.19634407]\n",
      "(3, 224) [87.11530379 16.76449571  5.19642544]\n",
      "(3, 224) [87.11453513 16.76409509  5.19650385]\n",
      "(3, 224) [87.11408451 16.76369671  5.19660061]\n",
      "(3, 224) [87.11343246 16.76328558  5.19668921]\n",
      "(3, 224) [87.11297844 16.76292355  5.19677442]\n",
      "(3, 224) [87.11238488 16.76252241  5.19686337]\n",
      "(3, 224) [87.1119564  16.76215313  5.19695228]\n",
      "(3, 224) [87.11125038 16.76176678  5.19702992]\n",
      "(3, 224) [87.11060142 16.76139547  5.19710626]\n",
      "(3, 224) [87.11046136 16.76102835  5.19721148]\n",
      "(3, 224) [87.10999405 16.76063377  5.19730567]\n",
      "(3, 224) [87.1096126  16.76024487  5.19740338]\n",
      "(3, 224) [87.1092867  16.75989202  5.19749327]\n",
      "(3, 224) [87.10908524 16.75955115  5.19758689]\n",
      "(3, 224) [87.10889828 16.75923419  5.19767401]\n",
      "(3, 224) [87.10875118 16.7589165   5.19776372]\n",
      "(3, 224) [87.10870786 16.75866001  5.19784067]\n",
      "(3, 224) [87.10845884 16.75840035  5.19790629]\n",
      "(3, 224) [87.10806026 16.75814603  5.19796137]\n",
      "(3, 224) [87.10788861 16.7578868   5.19803149]\n",
      "(3, 224) [87.10788725 16.7576089   5.19811753]\n",
      "(3, 224) [87.10780244 16.75731747  5.19820282]\n",
      "(3, 224) [87.10733598 16.75707527  5.1982501 ]\n",
      "(3, 224) [87.10702022 16.75681603  5.19831166]\n",
      "(3, 224) [87.1064543  16.75657632  5.19835228]\n",
      "(3, 224) [87.10620799 16.75638246  5.19839772]\n",
      "(3, 224) [87.10598821 16.75614526  5.19845817]\n",
      "(3, 224) [87.10565824 16.75592636  5.1985064 ]\n",
      "(3, 224) [87.10504199 16.75568949  5.19854313]\n",
      "(3, 224) [87.10464167 16.75545223  5.19859282]\n",
      "(3, 224) [87.10429858 16.75523076  5.19864102]\n",
      "(3, 224) [87.10405252 16.75502795  5.19868925]\n",
      "(3, 224) [87.10399629 16.75481794  5.19875104]\n",
      "(3, 224) [87.10396914 16.7546434   5.1988035 ]\n",
      "(3, 224) [87.10399002 16.75444573  5.198866  ]\n",
      "(3, 224) [87.10394849 16.75423223  5.19892966]\n",
      "(3, 224) [87.10432798 16.75403072  5.19901472]\n",
      "(3, 224) [87.10473735 16.75386747  5.19908971]\n",
      "(3, 224) [87.10537141 16.75373788  5.19916769]\n",
      "(3, 224) [87.10580814 16.75357037  5.19924565]\n",
      "(3, 224) [87.10650801 16.75337555  5.19934779]\n",
      "(3, 224) [87.10690468 16.75322672  5.19941759]\n",
      "(3, 224) [87.10720965 16.75304227  5.19949295]\n",
      "(3, 224) [87.10714126 16.75287704  5.19954015]\n",
      "(3, 224) [87.10733167 16.75269038  5.19960944]\n",
      "(3, 224) [87.10761797 16.75258498  5.19965922]\n",
      "(3, 224) [87.10782606 16.75249555  5.19969939]\n",
      "(3, 224) [87.1079149  16.75241078  5.19973099]\n",
      "(3, 224) [87.10800315 16.75233552  5.1997596 ]\n",
      "(3, 224) [87.10854241 16.7522697   5.19981217]\n",
      "(3, 224) [87.10905743 16.75220945  5.19986155]\n",
      "(3, 224) [87.10958745 16.75213245  5.19991704]\n",
      "(3, 224) [87.11029978 16.75206483  5.19998047]\n",
      "(3, 224) [87.11101782 16.75201446  5.2000389 ]\n",
      "(3, 224) [87.11168325 16.75193661  5.20010271]\n",
      "(3, 224) [87.11266943 16.75179355  5.20020587]\n",
      "(3, 224) [87.11338825 16.75167574  5.20028526]\n",
      "(3, 224) [87.1140905  16.75155294  5.20036524]\n",
      "(3, 224) [87.11510202 16.75140764  5.20047062]\n",
      "(3, 224) [87.11593081 16.75126076  5.20056559]\n",
      "(3, 224) [87.11686869 16.75113005  5.20066203]\n",
      "(3, 224) [87.11776402 16.75099889  5.20075609]\n",
      "(3, 224) [87.11896161 16.75083446  5.20087851]\n",
      "(3, 224) [87.12016909 16.75070066  5.20099202]\n",
      "(3, 224) [87.12108986 16.7505698   5.20108751]\n",
      "(3, 224) [87.12211378 16.75043598  5.20119009]\n",
      "(3, 224) [87.12334853 16.75029038  5.20130887]\n",
      "(3, 224) [87.12432311 16.75016468  5.201406  ]\n",
      "(3, 224) [87.12533071 16.7500638   5.20149744]\n",
      "(3, 224) [87.12642193 16.74995396  5.20159665]\n",
      "(3, 224) [87.12737205 16.74984408  5.20168745]\n",
      "(3, 224) [87.12845976 16.74978979  5.20176923]\n",
      "(3, 224) [87.12930886 16.74968784  5.20185151]\n",
      "(3, 224) [87.13015106 16.74964256  5.20191583]\n",
      "(3, 224) [87.13094626 16.74960672  5.20197442]\n",
      "(3, 224) [87.13167102 16.74956864  5.20202948]\n",
      "(3, 224) [87.13284912 16.74952299  5.20211393]\n",
      "(3, 224) [87.13395247 16.74952343  5.20217965]\n",
      "(3, 224) [87.13520258 16.74945779  5.20227463]\n",
      "(3, 224) [87.13668109 16.74938488  5.20238551]\n",
      "(3, 224) [87.13805688 16.74928741  5.20249787]\n",
      "(3, 224) [87.13934872 16.7491683   5.20261194]\n",
      "(3, 224) [87.14073774 16.74906331  5.20272742]\n",
      "(3, 224) [87.14221153 16.74898596  5.20283939]\n",
      "(3, 224) [87.14400933 16.74893139  5.20296362]\n",
      "(3, 224) [87.14556937 16.74886006  5.20307888]\n",
      "(3, 224) [87.1472204  16.74879264  5.20319834]\n",
      "(3, 224) [87.14894402 16.74872905  5.2033209 ]\n",
      "(3, 224) [87.15035602 16.74863656  5.20343382]\n",
      "(3, 224) [87.15140082 16.74853656  5.20352714]\n",
      "(3, 224) [87.15277506 16.74842667  5.20364318]\n",
      "(3, 224) [87.15413092 16.74835128  5.20374741]\n",
      "(3, 224) [87.15542808 16.74830578  5.20383887]\n",
      "(3, 224) [87.15671911 16.7482415   5.20393578]\n",
      "(3, 224) [87.1578104  16.74817704  5.20402084]\n",
      "(3, 224) [87.15912786 16.74808924  5.20412664]\n",
      "(3, 224) [87.16030009 16.7479913   5.20422695]\n",
      "(3, 224) [87.16147515 16.74792387  5.20431797]\n",
      "(3, 224) [87.16269211 16.74784905  5.20441377]\n",
      "(3, 224) [87.16382556 16.74778844  5.20450017]\n",
      "(3, 224) [87.16474893 16.74776035  5.20456397]\n",
      "(3, 224) [87.16552533 16.74776143  5.20460996]\n",
      "(3, 224) [87.16657334 16.74775919  5.20467318]\n",
      "(3, 224) [87.16738176 16.74775023  5.20472419]\n",
      "(3, 224) [87.16838293 16.74772762  5.20479095]\n",
      "(3, 224) [87.16937725 16.74768677  5.20486295]\n",
      "(3, 224) [87.1701268  16.74769925  5.20490379]\n",
      "(3, 224) [87.17102822 16.74771351  5.20495314]\n",
      "(3, 224) [87.17155089 16.74775961  5.20497002]\n",
      "(3, 224) [87.17190321 16.7478452   5.20496448]\n",
      "(3, 224) [87.17265621 16.7478889   5.20499584]\n",
      "(3, 224) [87.17344086 16.7479375   5.20502758]\n",
      "(3, 224) [87.17422611 16.74796656  5.20506541]\n",
      "(3, 224) [87.17490748 16.7479793   5.20510212]\n",
      "(3, 224) [87.17566045 16.74799784  5.2051413 ]\n",
      "(3, 224) [87.1763325  16.74800926  5.20517787]\n",
      "(3, 224) [87.1767877  16.74799267  5.2052102 ]\n",
      "(3, 224) [87.177366   16.74802073  5.205236  ]\n",
      "(3, 224) [87.17787836 16.74803553  5.20526198]\n",
      "(3, 224) [87.17838802 16.74806594  5.20528296]\n",
      "(3, 224) [87.17924839 16.74811111  5.20532028]\n",
      "(3, 224) [87.17991399 16.74816656  5.20534278]\n",
      "(3, 224) [87.18045481 16.74821484  5.20536007]\n",
      "(3, 224) [87.18098702 16.74826025  5.20537773]\n",
      "(3, 224) [87.18174613 16.7483408   5.20539802]\n",
      "(3, 224) [87.18230985 16.74841366  5.20540904]\n",
      "(3, 224) [87.18282837 16.74850648  5.20541116]\n",
      "(3, 224) [87.18359454 16.74858281  5.20543318]\n",
      "(3, 224) [87.18409776 16.74867026  5.20543605]\n",
      "(3, 224) [87.18473909 16.74878109  5.20543989]\n",
      "(3, 224) [87.18565928 16.74889071  5.20546077]\n",
      "(3, 224) [87.18663259 16.74894447  5.20550217]\n",
      "(3, 224) [87.1879487  16.74892806  5.20558581]\n",
      "(3, 224) [87.18906244 16.7489295   5.20565183]\n",
      "(3, 224) [87.19021145 16.74892814  5.20572081]\n",
      "(3, 224) [87.1910774  16.74889737  5.20578201]\n",
      "(3, 224) [87.19184822 16.74885001  5.20584268]\n",
      "(3, 224) [87.19266776 16.74881679  5.20590187]\n",
      "(3, 224) [87.19372148 16.74877606  5.20597736]\n",
      "(3, 224) [87.19469115 16.74870818  5.20605627]\n",
      "(3, 224) [87.19548584 16.74864317  5.20612383]\n",
      "(3, 224) [87.19628033 16.74856502  5.20619545]\n",
      "(3, 224) [87.19693051 16.74848838  5.20625798]\n",
      "(3, 224) [87.19781817 16.74845385  5.20632165]\n",
      "(3, 224) [87.19861298 16.74846803  5.20636467]\n",
      "(3, 224) [87.19926144 16.74855144  5.20637748]\n",
      "(3, 224) [87.20013393 16.74864367  5.20640092]\n",
      "(3, 224) [87.20118461 16.74872549  5.20643824]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  9%|██████▉                                                                    | 7069/76339 [00:03<00:31, 2193.86it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "(3, 224) [87.20223581 16.74876859  5.20648763]\n",
      "(3, 224) [87.20347444 16.74880701  5.20654966]\n",
      "(3, 224) [87.20425518 16.74883561  5.20658739]\n",
      "(3, 224) [87.20534459 16.74880589  5.2066617 ]\n",
      "(3, 224) [87.20608014 16.74878691  5.20671154]\n",
      "(3, 224) [87.20695642 16.74876039  5.20677211]\n",
      "(3, 224) [87.2076973  16.74871101  5.20683171]\n",
      "(3, 224) [87.20834023 16.7486583   5.20688647]\n",
      "(3, 224) [87.20916682 16.74859318  5.20695605]\n",
      "(3, 224) [87.21019348 16.74850303  5.20704538]\n",
      "(3, 224) [87.21068527 16.74837475  5.20711465]\n",
      "(3, 224) [87.21151397 16.74823406  5.20720788]\n",
      "(3, 224) [87.21222927 16.7481308   5.2072827 ]\n",
      "(3, 224) [87.21310251 16.74797839  5.20738222]\n",
      "(3, 224) [87.21376974 16.74783894  5.2074654 ]\n",
      "(3, 224) [87.21445554 16.74772878  5.2075406 ]\n",
      "(3, 224) [87.21504092 16.74762319  5.20760838]\n",
      "(3, 224) [87.21553402 16.74752724  5.20766768]\n",
      "(3, 224) [87.21606819 16.74741411  5.20773475]\n",
      "(3, 224) [87.2162958  16.74730126  5.20778342]\n",
      "(3, 224) [87.21661591 16.74716915  5.20784359]\n",
      "(3, 224) [87.21707606 16.74699708  5.20792456]\n",
      "(3, 224) [87.2174845  16.74681979  5.20800409]\n",
      "(3, 224) [87.21818167 16.74665207  5.20809791]\n",
      "(3, 224) [87.21867272 16.74647883  5.20818117]\n",
      "(3, 224) [87.21942074 16.74630434  5.20828015]\n",
      "(3, 224) [87.21987986 16.74609525  5.20837266]\n",
      "(3, 224) [87.22049297 16.74589769  5.20847076]\n",
      "(3, 224) [87.2209503  16.74572272  5.20855253]\n",
      "(3, 224) [87.22126775 16.74556804  5.20861966]\n",
      "(3, 224) [87.22215211 16.74537527  5.20873246]\n",
      "(3, 224) [87.22276545 16.74518371  5.20882871]\n",
      "(3, 224) [87.22344742 16.74497895  5.20893318]\n",
      "(3, 224) [87.22426282 16.74477243  5.2090462 ]\n",
      "(3, 224) [87.22517068 16.74452287  5.20917816]\n",
      "(3, 224) [87.22587914 16.74429832  5.20929046]\n",
      "(3, 224) [87.22653592 16.74410024  5.20939146]\n",
      "(3, 224) [87.22710595 16.74388871  5.20949149]\n",
      "(3, 224) [87.22752906 16.74371753  5.2095702 ]\n",
      "(3, 224) [87.22835225 16.74354386  5.2096736 ]\n",
      "(3, 224) [87.22901112 16.74340729  5.20975562]\n",
      "(3, 224) [87.22947125 16.74323231  5.2098378 ]\n",
      "(3, 224) [87.23010584 16.74303682  5.2099368 ]\n",
      "(3, 224) [87.23064724 16.74284455  5.21002925]\n",
      "(3, 224) [87.23104909 16.74269333  5.21010053]\n",
      "(3, 224) [87.23153191 16.74249544  5.21019126]\n",
      "(3, 224) [87.23218374 16.74232327  5.21028404]\n",
      "(3, 224) [87.23275867 16.74217254  5.2103655 ]\n",
      "(3, 224) [87.23302243 16.74200771  5.21043283]\n",
      "(3, 224) [87.23358473 16.74184126  5.21051863]\n",
      "(3, 224) [87.2341446  16.74178253  5.21057053]\n",
      "(3, 224) [87.23495903 16.74162862  5.21066745]\n",
      "(3, 224) [87.23566799 16.74141897  5.21077558]\n",
      "(3, 224) [87.23656006 16.74119998  5.21089761]\n",
      "(3, 224) [87.23711583 16.74094805  5.21100977]\n",
      "(3, 224) [87.23755342 16.74070538  5.21111187]\n",
      "(3, 224) [87.23837348 16.74044138  5.21124356]\n",
      "(3, 224) [87.23883522 16.74016307  5.21135831]\n",
      "(3, 224) [87.23936526 16.73989735  5.21147324]\n",
      "(3, 224) [87.23972876 16.73964352  5.21157447]\n",
      "(3, 224) [87.2404553  16.73941041  5.21169095]\n",
      "(3, 224) [87.24133498 16.73914294  5.2118273 ]\n",
      "(3, 224) [87.24194513 16.73882055  5.21196456]\n",
      "(3, 224) [87.24273624 16.73846695  5.21212253]\n",
      "(3, 224) [87.24354438 16.73808414  5.21229081]\n",
      "(3, 224) [87.24417133 16.73770638  5.21244661]\n",
      "(3, 224) [87.24492267 16.73736369  5.21259889]\n",
      "(3, 224) [87.2458933  16.73697071  5.21278006]\n",
      "(3, 224) [87.24665229 16.73662121  5.21293494]\n",
      "(3, 224) [87.24748521 16.73633152  5.21307544]\n",
      "(3, 224) [87.2483929  16.73609013  5.21320524]\n",
      "(3, 224) [87.24913903 16.73583858  5.21332856]\n",
      "(3, 224) [87.25012285 16.73557291  5.21347061]\n",
      "(3, 224) [87.25094933 16.73533375  5.21359487]\n",
      "(3, 224) [87.25181616 16.73500186  5.21375054]\n",
      "(3, 224) [87.25249982 16.73469709  5.21388676]\n",
      "(3, 224) [87.25318571 16.73439981  5.21402084]\n",
      "(3, 224) [87.25372162 16.73412622  5.21413855]\n",
      "(3, 224) [87.25391972 16.73384334  5.21423899]\n",
      "(3, 224) [87.25435359 16.73354854  5.21435724]\n",
      "(3, 224) [87.25462012 16.73327011  5.21446029]\n",
      "(3, 224) [87.25499462 16.73298849  5.21457079]\n",
      "(3, 224) [87.25522655 16.73266714  5.21468517]\n",
      "(3, 224) [87.25547182 16.73240555  5.21478158]\n",
      "(3, 224) [87.25587788 16.73213832  5.21488935]\n",
      "(3, 224) [87.25604375 16.7318214   5.21499821]\n",
      "(3, 224) [87.25604682 16.73148759  5.21510257]\n",
      "(3, 224) [87.25607392 16.73121311  5.21518991]\n",
      "(3, 224) [87.25608338 16.73094466  5.2152743 ]\n",
      "(3, 224) [87.25599597 16.7306833   5.21535068]\n",
      "(3, 224) [87.25591305 16.73042873  5.21542522]\n",
      "(3, 224) [87.2556655  16.73017358  5.21549007]\n",
      "(3, 224) [87.25538265 16.72985439  5.21557284]\n",
      "(3, 224) [87.25536761 16.72951558  5.21567773]\n",
      "(3, 224) [87.25527051 16.72917771  5.21577743]\n",
      "(3, 224) [87.25495551 16.72881917  5.21587057]\n",
      "(3, 224) [87.25476073 16.7284776   5.21596562]\n",
      "(3, 224) [87.25470353 16.72817834  5.21605568]\n",
      "(3, 224) [87.25457438 16.7278385   5.21615405]\n",
      "(3, 224) [87.25452243 16.72751053  5.21625339]\n",
      "(3, 224) [87.25449645 16.72718468  5.21635361]\n",
      "(3, 224) [87.25430029 16.72683627  5.21645067]\n",
      "(3, 224) [87.25401737 16.72650865  5.21653604]\n",
      "(3, 224) [87.25366014 16.72619695  5.21661196]\n",
      "(3, 224) [87.25349917 16.72589899  5.21669532]\n",
      "(3, 224) [87.25387552 16.72558725  5.21681519]\n",
      "(3, 224) [87.25434883 16.72521098  5.21696112]\n",
      "(3, 224) [87.254972   16.72485447  5.21710988]\n",
      "(3, 224) [87.25545326 16.7245      5.21724952]\n",
      "(3, 224) [87.25608828 16.72414209  5.21739928]\n",
      "(3, 224) [87.25710846 16.7238312   5.21755744]\n",
      "(3, 224) [87.25775726 16.72341732  5.21772566]\n",
      "(3, 224) [87.2583087  16.72309143  5.21786046]\n",
      "(3, 224) [87.259087   16.72276663  5.21800846]\n",
      "(3, 224) [87.25978046 16.72243715  5.21815289]\n",
      "(3, 224) [87.2605748  16.72216284  5.21828606]\n",
      "(3, 224) [87.261037   16.72191304  5.21839173]\n",
      "(3, 224) [87.26181655 16.72165661  5.21851842]\n",
      "(3, 224) [87.26273579 16.72139139  5.21865623]\n",
      "(3, 224) [87.26359478 16.72109953  5.21879883]\n",
      "(3, 224) [87.26440774 16.720834    5.21893047]\n",
      "(3, 224) [87.26516317 16.72049473  5.21908171]\n",
      "(3, 224) [87.26660686 16.72024469  5.21924614]\n",
      "(3, 224) [87.26772199 16.71990858  5.21941786]\n",
      "(3, 224) [87.26880093 16.71959333  5.21958084]\n",
      "(3, 224) [87.26976894 16.71926744  5.21974052]\n",
      "(3, 224) [87.27047264 16.718907    5.21989517]\n",
      "(3, 224) [87.27141097 16.71856032  5.22005961]\n",
      "(3, 224) [87.27227041 16.71824184  5.22021045]\n",
      "(3, 224) [87.27302207 16.71790517  5.22036049]\n",
      "(3, 224) [87.27385197 16.71759018  5.22050848]\n",
      "(3, 224) [87.27444784 16.7173003   5.22063471]\n",
      "(3, 224) [87.27523696 16.71702006  5.22076942]\n",
      "(3, 224) [87.27595386 16.71677912  5.22088752]\n",
      "(3, 224) [87.27635524 16.71652957  5.22098947]\n",
      "(3, 224) [87.27697098 16.71629586  5.22109926]\n",
      "(3, 224) [87.27766981 16.71601302  5.2212294 ]\n",
      "(3, 224) [87.27843037 16.71571916  5.22136673]\n",
      "(3, 224) [87.27917977 16.71547193  5.22148883]\n",
      "(3, 224) [87.27976167 16.71520043  5.22160848]\n",
      "(3, 224) [87.28077085 16.71493676  5.22175122]\n",
      "(3, 224) [87.28147753 16.71467789  5.22187439]\n",
      "(3, 224) [87.28243996 16.71440985  5.22201574]\n",
      "(3, 224) [87.28317875 16.71413512  5.2221458 ]\n",
      "(3, 224) [87.28375465 16.71385846  5.22226675]\n",
      "(3, 224) [87.2844444  16.71359956  5.22238897]\n",
      "(3, 224) [87.28527676 16.71337886  5.22250771]\n",
      "(3, 224) [87.28608203 16.71315752  5.22262502]\n",
      "(3, 224) [87.28725112 16.71290136  5.22277498]\n",
      "(3, 224) [87.28807706 16.71261476  5.22291394]\n",
      "(3, 224) [87.28896375 16.71231205  5.2230616 ]\n",
      "(3, 224) [87.28967752 16.71200213  5.22320111]\n",
      "(3, 224) [87.29046781 16.71168393  5.22334782]\n",
      "(3, 224) [87.29141639 16.71136456  5.22350437]\n",
      "(3, 224) [87.29207098 16.7110382   5.22364561]\n",
      "(3, 224) [87.29293292 16.71070802  5.22380054]\n",
      "(3, 224) [87.2938877  16.7103362   5.22397417]\n",
      "(3, 224) [87.29466698 16.70991493  5.22415287]\n",
      "(3, 224) [87.29564164 16.70952231  5.22433426]\n",
      "(3, 224) [87.29667938 16.7091442   5.22451482]\n",
      "(3, 224) [87.29727859 16.70873912  5.22467757]\n",
      "(3, 224) [87.29783156 16.7083798   5.22482317]\n",
      "(3, 224) [87.29853953 16.70800295  5.22498358]\n",
      "(3, 224) [87.2990259  16.70766091  5.22511966]\n",
      "(3, 224) [87.29978869 16.70730422  5.22527691]\n",
      "(3, 224) [87.30063858 16.70694178  5.22544112]\n",
      "(3, 224) [87.30148357 16.70659384  5.22560051]\n",
      "(3, 224) [87.30220236 16.70619576  5.22576804]\n",
      "(3, 224) [87.30302386 16.70579425  5.22594272]\n",
      "(3, 224) [87.3036792  16.70539598  5.22610643]\n",
      "(3, 224) [87.304234   16.70501388  5.22625906]\n",
      "(3, 224) [87.30484394 16.70461736  5.22641962]\n",
      "(3, 224) [87.30536023 16.70427564  5.22655738]\n",
      "(3, 224) [87.30586041 16.70392421  5.22669719]\n",
      "(3, 224) [87.30675971 16.70356572  5.22686313]\n",
      "(3, 224) [87.30763452 16.70316956  5.22703942]\n",
      "(3, 224) [87.30882191 16.70279264  5.22722834]\n",
      "(3, 224) [87.31000402 16.70238406  5.22742684]\n",
      "(3, 224) [87.31100673 16.70197568  5.22761457]\n",
      "(3, 224) [87.31205524 16.70157893  5.22780138]\n",
      "(3, 224) [87.31297693 16.70117531  5.22798281]\n",
      "(3, 224) [87.31377665 16.70075735  5.22816149]\n",
      "(3, 224) [87.31462649 16.70030043  5.22835525]\n",
      "(3, 224) [87.31560459 16.69985335  5.22855362]\n",
      "(3, 224) [87.31695377 16.69934312  5.22879399]\n",
      "(3, 224) [87.31824664 16.69886547  5.22902061]\n",
      "(3, 224) [87.31942698 16.69845423  5.22921977]\n",
      "(3, 224) [87.32041022 16.69806161  5.22940124]\n",
      "(3, 224) [87.32165898 16.69767971  5.22959531]\n",
      "(3, 224) [87.32298777 16.69732776  5.22978477]\n",
      "(3, 224) [87.32412599 16.69697531  5.22996306]\n",
      "(3, 224) [87.32529237 16.69662227  5.23014323]\n",
      "(3, 224) [87.32662052 16.69628122  5.23032939]\n",
      "(3, 224) [87.32793159 16.6959134   5.23052282]\n",
      "(3, 224) [87.32908574 16.69554298  5.23070765]\n",
      "(3, 224) [87.33035534 16.69514717  5.23090729]\n",
      "(3, 224) [87.33143013 16.69473849  5.23109938]\n",
      "(3, 224) [87.33266188 16.6943728   5.23128732]\n",
      "(3, 224) [87.33388476 16.69401086  5.23147355]\n",
      "(3, 224) [87.33531847 16.69366333  5.2316679 ]\n",
      "(3, 224) [87.33670803 16.69328636  5.23186888]\n",
      "(3, 224) [87.33816839 16.69289379  5.23207904]\n",
      "(3, 224) [87.33950121 16.6924849   5.23228663]\n",
      "(3, 224) [87.34059285 16.69212195  5.23246544]\n",
      "(3, 224) [87.34189011 16.69172771  5.23266636]\n",
      "(3, 224) [87.34321646 16.69134453  5.23286558]\n",
      "(3, 224) [87.3444566  16.69092094  5.23307236]\n",
      "(3, 224) [87.34543121 16.69048843  5.233266  ]\n",
      "(3, 224) [87.34653283 16.69008877  5.23345707]\n",
      "(3, 224) [87.34787081 16.68968097  5.23366483]\n",
      "(3, 224) [87.34888546 16.68926024  5.23385718]\n",
      "(3, 224) [87.35005342 16.68885228  5.23405465]\n",
      "(3, 224) [87.35089762 16.68842995  5.23423724]\n",
      "(3, 224) [87.35189603 16.6880076   5.23442908]\n",
      "(3, 224) [87.35282368 16.6876002   5.23461202]\n",
      "(3, 224) [87.35368542 16.68722188  5.23478194]\n",
      "(3, 224) [87.35445206 16.6868207   5.23495325]\n",
      "(3, 224) [87.35523249 16.68643743  5.23511975]\n",
      "(3, 224) [87.35622955 16.6860591   5.23529765]\n",
      "(3, 224) [87.3572315  16.68567187  5.2354787 ]\n",
      "(3, 224) [87.35829077 16.68524202  5.23567643]\n",
      "(3, 224) [87.35927854 16.68478434  5.23587861]\n",
      "(3, 224) [87.3602157  16.68434719  5.23607145]\n",
      "(3, 224) [87.36118345 16.68394231  5.23625597]\n",
      "(3, 224) [87.36211347 16.68354817  5.23643499]\n",
      "(3, 224) [87.36298893 16.68314876  5.23661245]\n",
      "(3, 224) [87.36414983 16.68274951  5.23680698]\n",
      "(3, 224) [87.36519182 16.68238838  5.23698253]\n",
      "(3, 224) [87.36628433 16.68206115  5.23715044]\n",
      "(3, 224) [87.36748871 16.68172024  5.23732934]\n",
      "(3, 224) [87.36919609 16.6814523   5.23751543]\n",
      "(3, 224) [87.37081203 16.68113244  5.2377123 ]\n",
      "(3, 224) [87.37222828 16.68081113  5.23789768]\n",
      "(3, 224) [87.37329418 16.68051746  5.2380535 ]\n",
      "(3, 224) [87.37465562 16.68023276  5.23822428]\n",
      "(3, 224) [87.37568862 16.67992318  5.23838323]\n",
      "(3, 224) [87.37694929 16.67961232  5.23855615]\n",
      "(3, 224) [87.37815103 16.67931572  5.23872114]\n",
      "(3, 224) [87.37951996 16.67901062  5.23889876]\n",
      "(3, 224) [87.38121338 16.67871227  5.2390937 ]\n",
      "(3, 224) [87.38289719 16.67842081  5.23928587]\n",
      "(3, 224) [87.38421314 16.6781223   5.23945825]\n",
      "(3, 224) [87.38569481 16.67782072  5.2396415 ]\n",
      "(3, 224) [87.38712142 16.67749803  5.23982806]\n",
      "(3, 224) [87.38860713 16.67721271  5.2400064 ]\n",
      "(3, 224) [87.38992926 16.67695608  5.240166  ]\n",
      "(3, 224) [87.3912114  16.67669866  5.24032349]\n",
      "(3, 224) [87.39259804 16.67644649  5.24048566]\n",
      "(3, 224) [87.39384336 16.67617822  5.24064447]\n",
      "(3, 224) [87.39510715 16.67591691  5.2408022 ]\n",
      "(3, 224) [87.3961856  16.67565452  5.24094918]\n",
      "(3, 224) [87.39747508 16.675395    5.2411079 ]\n",
      "(3, 224) [87.39872691 16.67513077  5.2412658 ]\n",
      "(3, 224) [87.39968793 16.67485465  5.24141   ]\n",
      "(3, 224) [87.4005218  16.67457471  5.24154781]\n",
      "(3, 224) [87.40161981 16.67433716  5.24168811]\n",
      "(3, 224) [87.40281621 16.67409787  5.24183489]\n",
      "(3, 224) [87.40395115 16.67386184  5.24197701]\n",
      "(3, 224) [87.40514849 16.6736675   5.24210982]\n",
      "(3, 224) [87.40619496 16.67346817  5.24223514]\n",
      "(3, 224) [87.40720291 16.6732656   5.24235917]\n",
      "(3, 224) [87.40831789 16.67309102  5.24248083]\n",
      "(3, 224) [87.40912668 16.67291533  5.24258447]\n",
      "(3, 224) [87.40985817 16.67274094  5.24268308]\n",
      "(3, 224) [87.41079355 16.67255986  5.24279601]\n",
      "(3, 224) [87.41189252 16.67243956  5.24289968]\n",
      "(3, 224) [87.41308087 16.67231568  5.24300987]\n",
      "(3, 224) [87.41403396 16.67229062  5.24307485]\n",
      "(3, 224) [87.41540648 16.67226144  5.24316625]\n",
      "(3, 224) [87.41658317 16.67227574  5.24323228]\n",
      "(3, 224) [87.41782641 16.6723317   5.2432892 ]\n",
      "(3, 224) [87.41887185 16.6724106   5.24332709]\n",
      "(3, 224) [87.4201022  16.67251098  5.24336932]\n",
      "(3, 224) [87.4213172  16.67263838  5.24340214]\n",
      "(3, 224) [87.42271878 16.67272926  5.24345758]\n",
      "(3, 224) [87.42363869 16.67288067  5.24346521]\n",
      "(3, 224) [87.42485142 16.67311538  5.24346424]\n",
      "(3, 224) [87.42557959 16.67331551  5.24344507]\n",
      "(3, 224) [87.42646753 16.67351788  5.24343478]\n",
      "(3, 224) [87.42781994 16.67369983  5.24345874]\n",
      "(3, 224) [87.42862213 16.67387345  5.24345233]\n",
      "(3, 224) [87.42963895 16.67412714  5.2434337 ]\n",
      "(3, 224) [87.43088366 16.6744169   5.2434174 ]\n",
      "(3, 224) [87.43203197 16.67472569  5.24338942]\n",
      "(3, 224) [87.43317057 16.67502219  5.24336469]\n",
      "(3, 224) [87.43413853 16.67529574  5.24333692]\n",
      "(3, 224) [87.43529764 16.67555992  5.24332355]\n",
      "(3, 224) [87.43651998 16.67587039  5.2432994 ]\n",
      "(3, 224) [87.43752808 16.67624004  5.24324382]\n",
      "(3, 224) [87.43880311 16.67657322  5.24321568]\n",
      "(3, 224) [87.44013606 16.6769116   5.2431894 ]\n",
      "(3, 224) [87.44099882 16.67726634  5.24312979]\n",
      "(3, 224) [87.4418208  16.67763934  5.24306212]\n",
      "(3, 224) [87.44254671 16.67796953  5.24300219]\n",
      "(3, 224) [87.44302203 16.67822245  5.2429515 ]\n",
      "(3, 224) [87.44353395 16.678476    5.24290278]\n",
      "(3, 224) [87.44364982 16.6787691   5.24281794]\n",
      "(3, 224) [87.44403787 16.67896135  5.24278096]\n",
      "(3, 224) [87.44454759 16.67922622  5.2427285 ]\n",
      "(3, 224) [87.4450989  16.67946823  5.24268569]\n",
      "(3, 224) [87.44551909 16.67971608  5.24263318]\n",
      "(3, 224) [87.44611226 16.67995357  5.24259429]\n",
      "(3, 224) [87.44665359 16.68020061  5.24254927]\n",
      "(3, 224) [87.4470406  16.68044067  5.24249721]\n",
      "(3, 224) [87.44788063 16.68064868  5.24248234]\n",
      "(3, 224) [87.44861125 16.68085133  5.24246259]\n",
      "(3, 224) [87.44930946 16.68107135  5.24243546]\n",
      "(3, 224) [87.45019084 16.68123252  5.24243777]\n",
      "(3, 224) [87.45076102 16.68135092  5.24243483]\n",
      "(3, 224) [87.45153007 16.68147902  5.24244077]\n",
      "(3, 224) [87.45217671 16.68160896  5.24243882]\n",
      "(3, 224) [87.45275737 16.68170996  5.24244197]\n",
      "(3, 224) [87.45340283 16.68177091  5.24246155]\n",
      "(3, 224) [87.4539028  16.68180066  5.24248219]\n",
      "(3, 224) [87.45446404 16.68187448  5.24249269]\n",
      "(3, 224) [87.45536706 16.68191509  5.24253408]\n",
      "(3, 224) [87.45621159 16.68199286  5.24256032]\n",
      "(3, 224) [87.4568866  16.68205617  5.24258093]\n",
      "(3, 224) [87.45764549 16.68212766  5.242604  ]\n",
      "(3, 224) [87.45857811 16.68222372  5.24262977]\n",
      "(3, 224) [87.45959812 16.68230295  5.24266606]\n",
      "(3, 224) [87.46070541 16.68237678  5.24270926]\n",
      "(3, 224) [87.46241551 16.6824829   5.24277845]\n",
      "(3, 224) [87.46387159 16.68257697  5.24283621]\n",
      "(3, 224) [87.4653436  16.6826753   5.24289359]\n",
      "(3, 224) [87.46679159 16.68275727  5.24295467]\n",
      "(3, 224) [87.4680911  16.68283377  5.24300857]\n",
      "(3, 224) [87.46958667 16.68288933  5.24308079]\n",
      "(3, 224) [87.47085389 16.68293658  5.24314193]\n",
      "(3, 224) [87.47170916 16.68298903  5.24317673]\n",
      "(3, 224) [87.47259524 16.68310302  5.24319405]\n",
      "(3, 224) [87.47320442 16.68318738  5.24320406]\n",
      "(3, 224) [87.47375499 16.68326057  5.24321407]\n",
      "(3, 224) [87.47432457 16.68330684  5.24323368]\n",
      "(3, 224) [87.47445047 16.68331183  5.24323966]\n",
      "(3, 224) [87.47492206 16.68338692  5.24324433]\n",
      "(3, 224) [87.47496066 16.68337606  5.24325005]\n",
      "(3, 224) [87.47479444 16.68338924  5.24323595]\n",
      "(3, 224) [87.47464209 16.68343492  5.24321249]\n",
      "(3, 224) [87.47432977 16.68345596  5.24318718]\n",
      "(3, 224) [87.47440847 16.68348499  5.24318279]\n",
      "(3, 224) [87.47424895 16.68349176  5.24317112]\n",
      "(3, 224) [87.4740491  16.68350381  5.24315537]\n",
      "(3, 224) [87.47406091 16.68355134  5.24314115]\n",
      "(3, 224) [87.47410174 16.6836109   5.24312491]\n",
      "(3, 224) [87.47405927 16.68368496  5.24309911]\n",
      "(3, 224) [87.47311162 16.68363168  5.24305908]\n",
      "(3, 224) [87.47246209 16.68361834  5.24302434]\n",
      "(3, 224) [87.47181398 16.68361819  5.24298556]\n",
      "(3, 224) [87.47087131 16.68361221  5.24293097]\n",
      "(3, 224) [87.47039471 16.68365155  5.24289007]\n",
      "(3, 224) [87.46982605 16.68368262  5.24284624]\n",
      "(3, 224) [87.46910751 16.68367612  5.24280523]\n",
      "(3, 224) [87.46848404 16.68367574  5.242768  ]\n",
      "(3, 224) [87.46784039 16.68366738  5.24273207]\n",
      "(3, 224) [87.46731874 16.68364402  5.24270814]\n",
      "(3, 224) [87.46658178 16.68358801  5.24268156]\n",
      "(3, 224) [87.4658721  16.6835209   5.24266009]\n",
      "(3, 224) [87.46549899 16.68348189  5.24264997]\n",
      "(3, 224) [87.46523305 16.68341303  5.24265564]\n",
      "(3, 224) [87.46472655 16.68337374  5.24263762]\n",
      "(3, 224) [87.46418769 16.68334266  5.24261509]\n",
      "(3, 224) [87.46359423 16.68327641  5.24260033]\n",
      "(3, 224) [87.46323184 16.68320866  5.24259989]\n",
      "(3, 224) [87.46269402 16.68313185  5.24259178]\n",
      "(3, 224) [87.46233307 16.68305438  5.24259448]\n",
      "(3, 224) [87.46164391 16.68297811  5.24257713]\n",
      "(3, 224) [87.46122909 16.6829053   5.24257513]\n",
      "(3, 224) [87.46089689 16.68283945  5.2425759 ]\n",
      "(3, 224) [87.46052021 16.68275973  5.24257837]\n",
      "(3, 224) [87.46035516 16.68265414  5.24260165]\n",
      "(3, 224) [87.45987031 16.68251918  5.24261497]\n",
      "(3, 224) [87.45936771 16.6824102   5.2426191 ]\n",
      "(3, 224) [87.45903596 16.68231902  5.24262786]\n",
      "(3, 224) [87.45875807 16.68224441  5.24263465]\n",
      "(3, 224) [87.45855583 16.68215826  5.2426496 ]\n",
      "(3, 224) [87.45816589 16.68211049  5.24264123]\n",
      "(3, 224) [87.4578057  16.68207253  5.24263157]\n",
      "(3, 224) [87.45754282 16.68204817  5.24262346]\n",
      "(3, 224) [87.45721319 16.68204146  5.24260579]\n",
      "(3, 224) [87.45708677 16.68208614  5.24258414]\n",
      "(3, 224) [87.45731997 16.68221137  5.24255868]\n",
      "(3, 224) [87.45746762 16.68230502  5.24253804]\n",
      "(3, 224) [87.45754951 16.68234645  5.2425299 ]\n",
      "(3, 224) [87.45739733 16.68236506  5.2425149 ]\n",
      "(3, 224) [87.45730227 16.68234784  5.24251462]\n",
      "(3, 224) [87.45708217 16.68234589  5.24250202]\n",
      "(3, 224) [87.45699533 16.68228579  5.24251572]\n",
      "(3, 224) [87.45685654 16.68225083  5.2425184 ]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 10%|███████▍                                                                   | 7546/76339 [00:03<00:31, 2201.00it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.45653895 16.68220825  5.24251275]\n",
      "(3, 224) [87.45621452 16.68212967  5.24251802]\n",
      "(3, 224) [87.4559793  16.68209868  5.24251366]\n",
      "(3, 224) [87.45585977 16.68203622  5.24252616]\n",
      "(3, 224) [87.45544615 16.68194236  5.24253089]\n",
      "(3, 224) [87.45547966 16.68184642  5.24256311]\n",
      "(3, 224) [87.45537516 16.68173578  5.24259171]\n",
      "(3, 224) [87.45536127 16.68159088  5.24263652]\n",
      "(3, 224) [87.455416   16.68139195  5.24270251]\n",
      "(3, 224) [87.45514687 16.68120425  5.24274555]\n",
      "(3, 224) [87.45485395 16.68104225  5.24277907]\n",
      "(3, 224) [87.4543429  16.68088212  5.24279888]\n",
      "(3, 224) [87.45394205 16.68074796  5.24281712]\n",
      "(3, 224) [87.45383776 16.6806177   5.24285194]\n",
      "(3, 224) [87.45371992 16.68047196  5.24289083]\n",
      "(3, 224) [87.45361333 16.68032134  5.24293195]\n",
      "(3, 224) [87.4536156  16.6801625   5.24298224]\n",
      "(3, 224) [87.45339218 16.67997514  5.24302798]\n",
      "(3, 224) [87.45300608 16.67971867  5.24308582]\n",
      "(3, 224) [87.45236213 16.67951981  5.24310997]\n",
      "(3, 224) [87.45188539 16.67926949  5.24316041]\n",
      "(3, 224) [87.45134665 16.67900079  5.24321288]\n",
      "(3, 224) [87.45103626 16.67868377  5.24329432]\n",
      "(3, 224) [87.45055096 16.67836058  5.24336724]\n",
      "(3, 224) [87.45008898 16.67803816  5.24344128]\n",
      "(3, 224) [87.44978015 16.6777422   5.24351617]\n",
      "(3, 224) [87.44966256 16.67746681  5.24359606]\n",
      "(3, 224) [87.44923774 16.67716716  5.2436652 ]\n",
      "(3, 224) [87.44892681 16.6768513   5.2437463 ]\n",
      "(3, 224) [87.4487344  16.67656103  5.24382639]\n",
      "(3, 224) [87.44834397 16.67625954  5.24389815]\n",
      "(3, 224) [87.44788551 16.6759691   5.24396235]\n",
      "(3, 224) [87.44727861 16.67564991  5.24402665]\n",
      "(3, 224) [87.44685847 16.6753661   5.24409096]\n",
      "(3, 224) [87.44640332 16.67507944  5.24415409]\n",
      "(3, 224) [87.44577273 16.67484208  5.24419112]\n",
      "(3, 224) [87.44492268 16.67462397  5.2442089 ]\n",
      "(3, 224) [87.44417097 16.67442161  5.2442276 ]\n",
      "(3, 224) [87.44356084 16.67420712  5.2442586 ]\n",
      "(3, 224) [87.44284185 16.67397292  5.24428933]\n",
      "(3, 224) [87.44204825 16.67365421  5.24434234]\n",
      "(3, 224) [87.44138969 16.67337966  5.24438955]\n",
      "(3, 224) [87.44092082 16.6731206   5.24444323]\n",
      "(3, 224) [87.44016559 16.67285983  5.24448024]\n",
      "(3, 224) [87.43942471 16.67260733  5.24451553]\n",
      "(3, 224) [87.4389117  16.67235424  5.24456465]\n",
      "(3, 224) [87.43845684 16.67211676  5.24461231]\n",
      "(3, 224) [87.43830574 16.67190748  5.24466929]\n",
      "(3, 224) [87.43797997 16.6716814   5.24472111]\n",
      "(3, 224) [87.43772039 16.67146377  5.24477421]\n",
      "(3, 224) [87.43714076 16.67123471  5.24481166]\n",
      "(3, 224) [87.43705049 16.67101201  5.24487652]\n",
      "(3, 224) [87.43689311 16.67079347  5.24493599]\n",
      "(3, 224) [87.43671321 16.67051905  5.2450118 ]\n",
      "(3, 224) [87.43625464 16.67026634  5.24506402]\n",
      "(3, 224) [87.4359538  16.67005097  5.24511392]\n",
      "(3, 224) [87.43590428 16.66984775  5.24517511]\n",
      "(3, 224) [87.43594036 16.66964853  5.24524022]\n",
      "(3, 224) [87.43574822 16.66942024  5.24530074]\n",
      "(3, 224) [87.43548974 16.66925402  5.24533767]\n",
      "(3, 224) [87.43510433 16.66909472  5.2453648 ]\n",
      "(3, 224) [87.43468659 16.66893981  5.24538861]\n",
      "(3, 224) [87.43448215 16.66878119  5.24542643]\n",
      "(3, 224) [87.43409984 16.66861453  5.24545606]\n",
      "(3, 224) [87.43349178 16.66840584  5.24548544]\n",
      "(3, 224) [87.43279007 16.66813417  5.24552908]\n",
      "(3, 224) [87.43205718 16.66790845  5.24555632]\n",
      "(3, 224) [87.43142434 16.66769941  5.24558429]\n",
      "(3, 224) [87.43112175 16.6674925   5.24563144]\n",
      "(3, 224) [87.43058461 16.66731103  5.24565648]\n",
      "(3, 224) [87.42996971 16.66714728  5.24567123]\n",
      "(3, 224) [87.42951587 16.66696612  5.24570118]\n",
      "(3, 224) [87.42897275 16.6667753   5.24572882]\n",
      "(3, 224) [87.42849953 16.66660222  5.24575505]\n",
      "(3, 224) [87.42782576 16.6664528   5.24576176]\n",
      "(3, 224) [87.42708761 16.66624896  5.24578179]\n",
      "(3, 224) [87.42647497 16.66604877  5.24580821]\n",
      "(3, 224) [87.42576323 16.66580843  5.24584138]\n",
      "(3, 224) [87.42544215 16.66560578  5.24588612]\n",
      "(3, 224) [87.42508558 16.66539719  5.24593056]\n",
      "(3, 224) [87.42474354 16.66517086  5.24598148]\n",
      "(3, 224) [87.42435608 16.6649412   5.24603074]\n",
      "(3, 224) [87.42357262 16.66472999  5.24605037]\n",
      "(3, 224) [87.4229776  16.66457591  5.24606328]\n",
      "(3, 224) [87.42239988 16.66442335  5.24607674]\n",
      "(3, 224) [87.42222624 16.66428702  5.24610937]\n",
      "(3, 224) [87.42188524 16.66411039  5.24614469]\n",
      "(3, 224) [87.42153767 16.66391872  5.24618437]\n",
      "(3, 224) [87.42130926 16.66376436  5.24621939]\n",
      "(3, 224) [87.42106836 16.66361816  5.24625109]\n",
      "(3, 224) [87.42065064 16.66340529  5.24629322]\n",
      "(3, 224) [87.4199968  16.66317128  5.24632787]\n",
      "(3, 224) [87.41942144 16.66297034  5.24635679]\n",
      "(3, 224) [87.41869759 16.66274995  5.24638294]\n",
      "(3, 224) [87.41830016 16.66251196  5.24643429]\n",
      "(3, 224) [87.4177206  16.66230871  5.24646367]\n",
      "(3, 224) [87.41713549 16.66210148  5.24649396]\n",
      "(3, 224) [87.41672593 16.66186996  5.24654247]\n",
      "(3, 224) [87.41651314 16.6616252   5.24660702]\n",
      "(3, 224) [87.41601145 16.66136569  5.24665888]\n",
      "(3, 224) [87.41546679 16.66108182  5.24671586]\n",
      "(3, 224) [87.41471902 16.66081763  5.24675441]\n",
      "(3, 224) [87.41445626 16.66042754  5.24686185]\n",
      "(3, 224) [87.41369908 16.66002947  5.24694208]\n",
      "(3, 224) [87.41318979 16.65961437  5.2470426 ]\n",
      "(3, 224) [87.41254289 16.65914414  5.24715212]\n",
      "(3, 224) [87.41218701 16.6586233   5.24729494]\n",
      "(3, 224) [87.41178732 16.65809375  5.24743809]\n",
      "(3, 224) [87.41116783 16.65760191  5.24755616]\n",
      "(3, 224) [87.41049074 16.65707733  5.24768104]\n",
      "(3, 224) [87.41004663 16.65654714  5.24782154]\n",
      "(3, 224) [87.40943349 16.6559977   5.24795798]\n",
      "(3, 224) [87.40924547 16.65547248  5.24811236]\n",
      "(3, 224) [87.40882778 16.6549519   5.24825145]\n",
      "(3, 224) [87.40831265 16.65444665  5.24837988]\n",
      "(3, 224) [87.40809762 16.65393801  5.24852742]\n",
      "(3, 224) [87.40785352 16.65338264  5.24868782]\n",
      "(3, 224) [87.40749578 16.65282057  5.24884347]\n",
      "(3, 224) [87.40734634 16.65222031  5.24902359]\n",
      "(3, 224) [87.40703655 16.65162121  5.24919371]\n",
      "(3, 224) [87.40677117 16.65105874  5.24935496]\n",
      "(3, 224) [87.40673303 16.65048402  5.2495338 ]\n",
      "(3, 224) [87.40646604 16.64989428  5.2497037 ]\n",
      "(3, 224) [87.40652316 16.64927765  5.24990157]\n",
      "(3, 224) [87.40630902 16.64864134  5.25008953]\n",
      "(3, 224) [87.40616141 16.64800647  5.250281  ]\n",
      "(3, 224) [87.40623936 16.64737146  5.25048598]\n",
      "(3, 224) [87.40661172 16.64670081  5.25071977]\n",
      "(3, 224) [87.40691312 16.64597031  5.25096819]\n",
      "(3, 224) [87.40736075 16.64527567  5.25121405]\n",
      "(3, 224) [87.40785275 16.64461174  5.25145289]\n",
      "(3, 224) [87.40863639 16.64392518  5.25171634]\n",
      "(3, 224) [87.40901322 16.64333587  5.25192475]\n",
      "(3, 224) [87.40944155 16.64270093  5.25215073]\n",
      "(3, 224) [87.40986567 16.64208693  5.25236982]\n",
      "(3, 224) [87.41032013 16.64145311  5.25259706]\n",
      "(3, 224) [87.41075228 16.64085031  5.25281317]\n",
      "(3, 224) [87.41143148 16.64023174  5.25304921]\n",
      "(3, 224) [87.41226189 16.63959619  5.25329974]\n",
      "(3, 224) [87.41280863 16.6389772   5.25352809]\n",
      "(3, 224) [87.41310342 16.63830667  5.25375762]\n",
      "(3, 224) [87.41372601 16.6374801   5.25405682]\n",
      "(3, 224) [87.41382028 16.63675966  5.25429018]\n",
      "(3, 224) [87.41408498 16.6360578   5.254528  ]\n",
      "(3, 224) [87.41376908 16.63519754  5.25478138]\n",
      "(3, 224) [87.41387917 16.6342034   5.25510334]\n",
      "(3, 224) [87.41426231 16.63331637  5.25540761]\n",
      "(3, 224) [87.41435437 16.63235761  5.25571758]\n",
      "(3, 224) [87.41488001 16.63155529  5.25600365]\n",
      "(3, 224) [87.4153008  16.63074383  5.25628605]\n",
      "(3, 224) [87.4156176  16.62998855  5.25654448]\n",
      "(3, 224) [87.41581554 16.62919754  5.25680718]\n",
      "(3, 224) [87.41603433 16.62845969  5.25705419]\n",
      "(3, 224) [87.41620004 16.62766937  5.25731478]\n",
      "(3, 224) [87.41594211 16.62680656  5.25757294]\n",
      "(3, 224) [87.4155861  16.62594407  5.25782528]\n",
      "(3, 224) [87.4153272  16.6251203   5.25807106]\n",
      "(3, 224) [87.4143672  16.62423545  5.25829411]\n",
      "(3, 224) [87.41396203 16.62343008  5.25852531]\n",
      "(3, 224) [87.41356725 16.62260725  5.25876269]\n",
      "(3, 224) [87.41324819 16.62185652  5.25898159]\n",
      "(3, 224) [87.41330626 16.62097973  5.25926363]\n",
      "(3, 224) [87.41324613 16.6201764   5.25951502]\n",
      "(3, 224) [87.41318458 16.6194041   5.25975625]\n",
      "(3, 224) [87.4132496  16.61865019  5.25999932]\n",
      "(3, 224) [87.4133699  16.61798115  5.26021862]\n",
      "(3, 224) [87.41369746 16.61730356  5.26045327]\n",
      "(3, 224) [87.41400645 16.61667919  5.26066978]\n",
      "(3, 224) [87.41434278 16.61604076  5.26089238]\n",
      "(3, 224) [87.41455463 16.61536108  5.26112073]\n",
      "(3, 224) [87.4147318  16.61466272  5.26135309]\n",
      "(3, 224) [87.41531487 16.61396986  5.26160808]\n",
      "(3, 224) [87.41613191 16.61326369  5.26188123]\n",
      "(3, 224) [87.41683513 16.61252257  5.26215856]\n",
      "(3, 224) [87.41759581 16.61179397  5.26243514]\n",
      "(3, 224) [87.41796799 16.61108123  5.2626832 ]\n",
      "(3, 224) [87.41866413 16.61044719  5.26292571]\n",
      "(3, 224) [87.41923034 16.60987539  5.26314058]\n",
      "(3, 224) [87.41950429 16.60928666  5.26334329]\n",
      "(3, 224) [87.41978008 16.60876239  5.2635255 ]\n",
      "(3, 224) [87.41983197 16.60819382  5.26370833]\n",
      "(3, 224) [87.42028796 16.60771355  5.26388753]\n",
      "(3, 224) [87.42076171 16.60719818  5.26407907]\n",
      "(3, 224) [87.42129713 16.60663374  5.26428975]\n",
      "(3, 224) [87.4220449  16.60607642  5.26451091]\n",
      "(3, 224) [87.42261439 16.6054879   5.26473122]\n",
      "(3, 224) [87.42278378 16.60492628  5.26491891]\n",
      "(3, 224) [87.42321892 16.60439737  5.26511214]\n",
      "(3, 224) [87.42359852 16.60390143  5.26529153]\n",
      "(3, 224) [87.42399513 16.60345555  5.26545606]\n",
      "(3, 224) [87.42411357 16.60299005  5.26561019]\n",
      "(3, 224) [87.42482758 16.6025431   5.26579431]\n",
      "(3, 224) [87.42540425 16.60215868  5.26595023]\n",
      "(3, 224) [87.42594966 16.60178209  5.26610178]\n",
      "(3, 224) [87.42601413 16.60139456  5.26622791]\n",
      "(3, 224) [87.42614989 16.60099481  5.26636221]\n",
      "(3, 224) [87.42653683 16.60056648  5.26652078]\n",
      "(3, 224) [87.42680916 16.60012689  5.26667608]\n",
      "(3, 224) [87.42701401 16.59968804  5.26682713]\n",
      "(3, 224) [87.42695913 16.59927398  5.26695465]\n",
      "(3, 224) [87.42717092 16.59893493  5.26707446]\n",
      "(3, 224) [87.42733996 16.59862726  5.2671817 ]\n",
      "(3, 224) [87.42751365 16.59832482  5.26728761]\n",
      "(3, 224) [87.42754174 16.5980158   5.26738685]\n",
      "(3, 224) [87.42771146 16.59770398  5.26749553]\n",
      "(3, 224) [87.42775344 16.59739156  5.26759673]\n",
      "(3, 224) [87.42798098 16.59709722  5.26770335]\n",
      "(3, 224) [87.42790472 16.59677605  5.26780022]\n",
      "(3, 224) [87.42803199 16.5964539   5.26790965]\n",
      "(3, 224) [87.42821202 16.59613616  5.2680209 ]\n",
      "(3, 224) [87.42860993 16.5958307   5.26814135]\n",
      "(3, 224) [87.42905474 16.5955219   5.26826559]\n",
      "(3, 224) [87.42922741 16.59520399  5.26837633]\n",
      "(3, 224) [87.4295915  16.59491431  5.26848968]\n",
      "(3, 224) [87.42996847 16.59464448  5.26859755]\n",
      "(3, 224) [87.43020989 16.59438452  5.26869417]\n",
      "(3, 224) [87.43031334 16.59409175  5.26879288]\n",
      "(3, 224) [87.43017066 16.5937969   5.26887744]\n",
      "(3, 224) [87.43019322 16.59348433  5.26897766]\n",
      "(3, 224) [87.43045267 16.59319616  5.26908438]\n",
      "(3, 224) [87.43053605 16.59290795  5.26918052]\n",
      "(3, 224) [87.43067328 16.59263258  5.26927583]\n",
      "(3, 224) [87.43096688 16.59235924  5.26937989]\n",
      "(3, 224) [87.43105844 16.59207985  5.26947371]\n",
      "(3, 224) [87.43135149 16.59181443  5.2695752 ]\n",
      "(3, 224) [87.43155223 16.59160131  5.26965461]\n",
      "(3, 224) [87.43178707 16.59140386  5.26973107]\n",
      "(3, 224) [87.43182017 16.59120943  5.26979449]\n",
      "(3, 224) [87.43221505 16.59105945  5.2698656 ]\n",
      "(3, 224) [87.43237321 16.59088227  5.26993111]\n",
      "(3, 224) [87.43253704 16.59077204  5.26997581]\n",
      "(3, 224) [87.43267104 16.59060003  5.2700383 ]\n",
      "(3, 224) [87.43250338 16.59048813  5.27006363]\n",
      "(3, 224) [87.43240231 16.59036658  5.27009602]\n",
      "(3, 224) [87.43230775 16.590256    5.27012533]\n",
      "(3, 224) [87.4322754  16.59007806  5.2701797 ]\n",
      "(3, 224) [87.4325123  16.5899225   5.27024319]\n",
      "(3, 224) [87.43238546 16.58978005  5.27028065]\n",
      "(3, 224) [87.43225065 16.58965369  5.27031252]\n",
      "(3, 224) [87.43254397 16.58956951  5.27035682]\n",
      "(3, 224) [87.43255536 16.5895072   5.27037724]\n",
      "(3, 224) [87.43290733 16.58947175  5.27040965]\n",
      "(3, 224) [87.43332571 16.58952308  5.27041857]\n",
      "(3, 224) [87.43387189 16.58955857  5.2704402 ]\n",
      "(3, 224) [87.43425543 16.58966441  5.27042977]\n",
      "(3, 224) [87.43449849 16.58974079  5.27042022]\n",
      "(3, 224) [87.434769   16.58986747  5.2703964 ]\n",
      "(3, 224) [87.4349943  16.59006707  5.27034682]\n",
      "(3, 224) [87.43489256 16.59017777  5.27030567]\n",
      "(3, 224) [87.43474239 16.59033184  5.27024793]\n",
      "(3, 224) [87.43435826 16.59044601  5.27018872]\n",
      "(3, 224) [87.43411159 16.59060985  5.27012208]\n",
      "(3, 224) [87.4340705  16.59074944  5.27007542]\n",
      "(3, 224) [87.4347132  16.59087217  5.27007522]\n",
      "(3, 224) [87.43513519 16.59099733  5.27006098]\n",
      "(3, 224) [87.43571824 16.59111321  5.27005937]\n",
      "(3, 224) [87.43624884 16.59129169  5.27003483]\n",
      "(3, 224) [87.43708212 16.59146416  5.27003039]\n",
      "(3, 224) [87.4377867  16.59164384  5.27001593]\n",
      "(3, 224) [87.43842217 16.59182332  5.26999743]\n",
      "(3, 224) [87.43906794 16.59200429  5.2699791 ]\n",
      "(3, 224) [87.43983047 16.59215971  5.26997585]\n",
      "(3, 224) [87.44057384 16.5922551   5.26999038]\n",
      "(3, 224) [87.44135432 16.59237747  5.26999863]\n",
      "(3, 224) [87.44205792 16.59257587  5.26997817]\n",
      "(3, 224) [87.44228489 16.59278051  5.26992709]\n",
      "(3, 224) [87.4424693  16.59292584  5.26989221]\n",
      "(3, 224) [87.44289483 16.59307259  5.26987138]\n",
      "(3, 224) [87.44331507 16.59323235  5.26984611]\n",
      "(3, 224) [87.4438509  16.59335748  5.26983874]\n",
      "(3, 224) [87.44410853 16.59345949  5.26982197]\n",
      "(3, 224) [87.44470632 16.59355333  5.26982823]\n",
      "(3, 224) [87.44506759 16.59366684  5.26981406]\n",
      "(3, 224) [87.44557899 16.59376316  5.26981435]\n",
      "(3, 224) [87.44640844 16.59381545  5.2698477 ]\n",
      "(3, 224) [87.4470985  16.59384047  5.26988129]\n",
      "(3, 224) [87.44774206 16.5938367   5.2699212 ]\n",
      "(3, 224) [87.44827302 16.59389329  5.26993523]\n",
      "(3, 224) [87.44909772 16.59393188  5.26997263]\n",
      "(3, 224) [87.44966795 16.59394505  5.27000277]\n",
      "(3, 224) [87.45028154 16.59395161  5.27003762]\n",
      "(3, 224) [87.45069287 16.59395189  5.27006228]\n",
      "(3, 224) [87.45167999 16.59397282  5.27011505]\n",
      "(3, 224) [87.45279339 16.59395044  5.27018912]\n",
      "(3, 224) [87.45359878 16.59391068  5.27025017]\n",
      "(3, 224) [87.45440686 16.59382876  5.27032477]\n",
      "(3, 224) [87.45493254 16.59375975  5.27037828]\n",
      "(3, 224) [87.45564184 16.59363911  5.27045921]\n",
      "(3, 224) [87.45655638 16.59357257  5.27053537]\n",
      "(3, 224) [87.45737467 16.59351197  5.27060386]\n",
      "(3, 224) [87.45835172 16.59343438  5.27068728]\n",
      "(3, 224) [87.45953479 16.59335791  5.27078274]\n",
      "(3, 224) [87.46027178 16.59329616  5.27084667]\n",
      "(3, 224) [87.46089534 16.59322899  5.27090548]\n",
      "(3, 224) [87.46175786 16.59318563  5.27097111]\n",
      "(3, 224) [87.46243582 16.59316935  5.27101705]\n",
      "(3, 224) [87.4633196  16.59313978  5.27107961]\n",
      "(3, 224) [87.46388871 16.59310477  5.27112494]\n",
      "(3, 224) [87.46449604 16.59302726  5.27118603]\n",
      "(3, 224) [87.46526837 16.59300267  5.27124029]\n",
      "(3, 224) [87.46603459 16.59296165  5.27129941]\n",
      "(3, 224) [87.46697632 16.59299028  5.27134702]\n",
      "(3, 224) [87.46775838 16.59299243  5.27139341]\n",
      "(3, 224) [87.46822617 16.59298399  5.27142423]\n",
      "(3, 224) [87.46900111 16.59300119  5.27146541]\n",
      "(3, 224) [87.46958851 16.59303158  5.27149113]\n",
      "(3, 224) [87.47033384 16.59308149  5.27152017]\n",
      "(3, 224) [87.47124593 16.59311304  5.27156505]\n",
      "(3, 224) [87.47197192 16.59305758  5.2716263 ]\n",
      "(3, 224) [87.47264914 16.59300305  5.27168433]\n",
      "(3, 224) [87.47288007 16.59292496  5.271723  ]\n",
      "(3, 224) [87.47315796 16.5928805   5.27175382]\n",
      "(3, 224) [87.47364376 16.5928483   5.27179325]\n",
      "(3, 224) [87.47405976 16.59279517  5.27183511]\n",
      "(3, 224) [87.47466022 16.59276796  5.27187988]\n",
      "(3, 224) [87.47506836 16.59278223  5.27189993]\n",
      "(3, 224) [87.47540907 16.59278199  5.27192051]\n",
      "(3, 224) [87.47589923 16.59277558  5.27195205]\n",
      "(3, 224) [87.47613783 16.59280716  5.2719564 ]\n",
      "(3, 224) [87.4767305  16.59284221  5.27198097]\n",
      "(3, 224) [87.47737889 16.59285916  5.27201462]\n",
      "(3, 224) [87.47802805 16.59291629  5.27203559]\n",
      "(3, 224) [87.47831466 16.59294157  5.27204483]\n",
      "(3, 224) [87.47890647 16.59297413  5.27207014]\n",
      "(3, 224) [87.47942585 16.59299586  5.27209453]\n",
      "(3, 224) [87.4802507  16.59302203  5.27213589]\n",
      "(3, 224) [87.48069489 16.5930898   5.27214114]\n",
      "(3, 224) [87.48122061 16.59317174  5.27214681]\n",
      "(3, 224) [87.48175843 16.59325896  5.27215153]\n",
      "(3, 224) [87.48238379 16.59332087  5.27216955]\n",
      "(3, 224) [87.48311316 16.59337838  5.27219524]\n",
      "(3, 224) [87.48374077 16.59345597  5.27220841]\n",
      "(3, 224) [87.48442991 16.59351742  5.27223042]\n",
      "(3, 224) [87.48504298 16.59354232  5.27225945]\n",
      "(3, 224) [87.48588099 16.59356213  5.27230365]\n",
      "(3, 224) [87.48652671 16.59354287  5.27234869]\n",
      "(3, 224) [87.48695684 16.59353733  5.27237638]\n",
      "(3, 224) [87.48749962 16.59351839  5.27241512]\n",
      "(3, 224) [87.4878135  16.59350396  5.27243861]\n",
      "(3, 224) [87.48818331 16.59345141  5.27247762]\n",
      "(3, 224) [87.4885709  16.59343048  5.27250763]\n",
      "(3, 224) [87.48888971 16.59344365  5.27252265]\n",
      "(3, 224) [87.48925819 16.59349157  5.27252964]\n",
      "(3, 224) [87.48947139 16.59352939  5.27253048]\n",
      "(3, 224) [87.4898004  16.59356108  5.27254024]\n",
      "(3, 224) [87.4898714  16.59359369  5.27253417]\n",
      "(3, 224) [87.4900923  16.59365139  5.27252916]\n",
      "(3, 224) [87.49036103 16.59375247  5.27251324]\n",
      "(3, 224) [87.49060426 16.59386184  5.27249314]\n",
      "(3, 224) [87.49078268 16.59395541  5.27247415]\n",
      "(3, 224) [87.49109918 16.59402888  5.27246988]\n",
      "(3, 224) [87.49134729 16.59410225  5.2724615 ]\n",
      "(3, 224) [87.49155894 16.59422362  5.27243566]\n",
      "(3, 224) [87.49193453 16.59430899  5.27243115]\n",
      "(3, 224) [87.49222939 16.59440378  5.27241879]\n",
      "(3, 224) [87.49230195 16.59450182  5.27239199]\n",
      "(3, 224) [87.49272134 16.59457098  5.27239529]\n",
      "(3, 224) [87.49318103 16.59469488  5.27238361]\n",
      "(3, 224) [87.49357932 16.59478772  5.27237811]\n",
      "(3, 224) [87.49408661 16.59490874  5.27237021]\n",
      "(3, 224) [87.49443606 16.59501803  5.27235654]\n",
      "(3, 224) [87.49456727 16.59513624  5.27232685]\n",
      "(3, 224) [87.49484051 16.59526967  5.27230086]\n",
      "(3, 224) [87.49489893 16.59540277  5.27226204]\n",
      "(3, 224) [87.49512476 16.59558481  5.27221774]\n",
      "(3, 224) [87.49540476 16.59594922  5.2721184 ]\n",
      "(3, 224) [87.49607497 16.5962088   5.27207619]\n",
      "(3, 224) [87.49666927 16.59646031  5.27203196]\n",
      "(3, 224) [87.49773108 16.59685156  5.27197131]\n",
      "(3, 224) [87.4987197  16.59737956  5.27186231]\n",
      "(3, 224) [87.4993866  16.59781295  5.27176419]\n",
      "(3, 224) [87.50025545 16.59836286  5.27164094]\n",
      "(3, 224) [87.50074292 16.59875154  5.27154629]\n",
      "(3, 224) [87.50145597 16.59911872  5.27147218]\n",
      "(3, 224) [87.50193999 16.59944785  5.27139639]\n",
      "(3, 224) [87.50254776 16.59984827  5.27130535]\n",
      "(3, 224) [87.50315647 16.60022103  5.27122326]\n",
      "(3, 224) [87.50378058 16.60065858  5.2711214 ]\n",
      "(3, 224) [87.50478577 16.60116651  5.27102006]\n",
      "(3, 224) [87.50601483 16.6017102   5.27092077]\n",
      "(3, 224) [87.50737003 16.60226747  5.27082485]\n",
      "(3, 224) [87.50907984 16.60285213  5.27074155]\n",
      "(3, 224) [87.51033245 16.60332312  5.27066685]\n",
      "(3, 224) [87.51202161 16.60387064  5.27059409]\n",
      "(3, 224) [87.51371249 16.60432068  5.27055255]\n",
      "(3, 224) [87.51492746 16.60490128  5.27044044]\n",
      "(3, 224) [87.51619815 16.60541879  5.27035197]\n",
      "(3, 224) [87.51753313 16.60587843  5.27028591]\n",
      "(3, 224) [87.51883026 16.60635583  5.27021191]\n",
      "(3, 224) [87.51991639 16.60673231  5.27015743]\n",
      "(3, 224) [87.52072455 16.60711922  5.2700828 ]\n",
      "(3, 224) [87.52147163 16.60744598  5.27002372]\n",
      "(3, 224) [87.52244815 16.60780801  5.26996722]\n",
      "(3, 224) [87.52343457 16.60823128  5.26989178]\n",
      "(3, 224) [87.52445391 16.6086772   5.26981103]\n",
      "(3, 224) [87.52517017 16.60911646  5.26971412]\n",
      "(3, 224) [87.52581174 16.60956881  5.26960859]\n",
      "(3, 224) [87.52635811 16.6100526   5.26948736]\n",
      "(3, 224) [87.52714008 16.6105184   5.26938613]\n",
      "(3, 224) [87.52818342 16.61095344  5.2693105 ]\n",
      "(3, 224) [87.529042   16.61132555  5.26924382]\n",
      "(3, 224) [87.53004656 16.61164262  5.26920351]\n",
      "(3, 224) [87.53110709 16.61199901  5.26915409]\n",
      "(3, 224) [87.53195859 16.6122632   5.26912146]\n",
      "(3, 224) [87.53323027 16.61259275  5.26909337]\n",
      "(3, 224) [87.53443587 16.61289108  5.2690712 ]\n",
      "(3, 224) [87.53580183 16.61324697  5.26904036]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 10%|███████▊                                                                   | 8002/76339 [00:03<00:31, 2186.23it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.53713479 16.61361014  5.2690052 ]\n",
      "(3, 224) [87.53854879 16.61399091  5.26896933]\n",
      "(3, 224) [87.53990044 16.61440483  5.2689192 ]\n",
      "(3, 224) [87.54156062 16.61481155  5.26889002]\n",
      "(3, 224) [87.5433049  16.61522647  5.26886334]\n",
      "(3, 224) [87.54508627 16.61563225  5.26884187]\n",
      "(3, 224) [87.54663995 16.61599113  5.26882162]\n",
      "(3, 224) [87.54833544 16.61632834  5.26881671]\n",
      "(3, 224) [87.54964041 16.61668044  5.26878356]\n",
      "(3, 224) [87.5511118  16.61695077  5.2687864 ]\n",
      "(3, 224) [87.55243371 16.61720558  5.26878519]\n",
      "(3, 224) [87.55405721 16.61747323  5.26879805]\n",
      "(3, 224) [87.55575605 16.61774023  5.26881564]\n",
      "(3, 224) [87.55695425 16.61803173  5.26879529]\n",
      "(3, 224) [87.55848662 16.61831474  5.2687977 ]\n",
      "(3, 224) [87.5599334  16.61858425  5.26879923]\n",
      "(3, 224) [87.56165332 16.61881947  5.26882812]\n",
      "(3, 224) [87.5627146  16.61897947  5.26884125]\n",
      "(3, 224) [87.56376992 16.61908425  5.26887156]\n",
      "(3, 224) [87.56463564 16.61919797  5.26888762]\n",
      "(3, 224) [87.5657554  16.61932947  5.26891333]\n",
      "(3, 224) [87.56647867 16.6194759   5.26891046]\n",
      "(3, 224) [87.56738953 16.61962984  5.26891648]\n",
      "(3, 224) [87.56822412 16.61986236  5.26889308]\n",
      "(3, 224) [87.56939738 16.6201084   5.26888575]\n",
      "(3, 224) [87.57037218 16.6203532   5.26886686]\n",
      "(3, 224) [87.57144249 16.62061334  5.26884883]\n",
      "(3, 224) [87.57227776 16.62085514  5.26882247]\n",
      "(3, 224) [87.57313347 16.62108911  5.26879986]\n",
      "(3, 224) [87.57427149 16.62131152  5.26879788]\n",
      "(3, 224) [87.57528202 16.62148985  5.26880217]\n",
      "(3, 224) [87.57614616 16.62162693  5.26881071]\n",
      "(3, 224) [87.57673575 16.62174848  5.26880767]\n",
      "(3, 224) [87.57722676 16.62191636  5.26878403]\n",
      "(3, 224) [87.57799471 16.62208659  5.26877631]\n",
      "(3, 224) [87.57844128 16.62235592  5.26871787]\n",
      "(3, 224) [87.57899356 16.62261796  5.26866812]\n",
      "(3, 224) [87.57992118 16.62285705  5.26864817]\n",
      "(3, 224) [87.58079007 16.62305188  5.2686387 ]\n",
      "(3, 224) [87.58134891 16.62326277  5.26860551]\n",
      "(3, 224) [87.58206511 16.6234667   5.268584  ]\n",
      "(3, 224) [87.58275683 16.62367371  5.26856005]\n",
      "(3, 224) [87.58362164 16.62387751  5.26854755]\n",
      "(3, 224) [87.58469527 16.62405591  5.26855563]\n",
      "(3, 224) [87.58558866 16.62424005  5.26855108]\n",
      "(3, 224) [87.58618408 16.62435301  5.26855113]\n",
      "(3, 224) [87.58695054 16.62446758  5.26856094]\n",
      "(3, 224) [87.58753542 16.62456662  5.26856476]\n",
      "(3, 224) [87.58831225 16.62472804  5.26856035]\n",
      "(3, 224) [87.58924165 16.6249099   5.26855868]\n",
      "(3, 224) [87.59009933 16.6251141   5.26854563]\n",
      "(3, 224) [87.59085621 16.62530629  5.26853033]\n",
      "(3, 224) [87.59173025 16.62555202  5.26850511]\n",
      "(3, 224) [87.59222308 16.62576988  5.26846578]\n",
      "(3, 224) [87.59292155 16.62596935  5.26844465]\n",
      "(3, 224) [87.59365478 16.62613179  5.26843733]\n",
      "(3, 224) [87.59417163 16.62629187  5.26841773]\n",
      "(3, 224) [87.59472247 16.62644199  5.26840333]\n",
      "(3, 224) [87.59524266 16.62657556  5.26839231]\n",
      "(3, 224) [87.59572071 16.62669277  5.26838395]\n",
      "(3, 224) [87.5962823  16.62682013  5.2683774 ]\n",
      "(3, 224) [87.59671268 16.62688148  5.26838387]\n",
      "(3, 224) [87.59736709 16.62694766  5.26840227]\n",
      "(3, 224) [87.59811102 16.62698913  5.26843387]\n",
      "(3, 224) [87.59865769 16.62696791  5.26847341]\n",
      "(3, 224) [87.59977862 16.62703046  5.268521  ]\n",
      "(3, 224) [87.60064965 16.62702787  5.26857415]\n",
      "(3, 224) [87.60181105 16.62705469  5.26863546]\n",
      "(3, 224) [87.60303311 16.62707149  5.26870357]\n",
      "(3, 224) [87.60397666 16.6271183   5.26874547]\n",
      "(3, 224) [87.60432667 16.62715761  5.26875407]\n",
      "(3, 224) [87.60490883 16.62721256  5.26877167]\n",
      "(3, 224) [87.60521643 16.62728739  5.26876649]\n",
      "(3, 224) [87.60573893 16.62729001  5.26879704]\n",
      "(3, 224) [87.60590554 16.62726905  5.26881367]\n",
      "(3, 224) [87.60605404 16.62722963  5.26883504]\n",
      "(3, 224) [87.60631691 16.62715215  5.26887528]\n",
      "(3, 224) [87.60684306 16.6270833   5.26892861]\n",
      "(3, 224) [87.60743363 16.62702676  5.26898193]\n",
      "(3, 224) [87.60776471 16.62700624  5.2690083 ]\n",
      "(3, 224) [87.6083719  16.62701975  5.26904051]\n",
      "(3, 224) [87.60887336 16.62702621  5.26906859]\n",
      "(3, 224) [87.60967249 16.62701739  5.26911938]\n",
      "(3, 224) [87.61060679 16.62706387  5.26916083]\n",
      "(3, 224) [87.61135465 16.62710494  5.26919278]\n",
      "(3, 224) [87.61205594 16.62712684  5.26922799]\n",
      "(3, 224) [87.61269953 16.62718418  5.26924853]\n",
      "(3, 224) [87.61353782 16.62724099  5.26928093]\n",
      "(3, 224) [87.61402831 16.62727632  5.26929923]\n",
      "(3, 224) [87.61483319 16.62732442  5.26933239]\n",
      "(3, 224) [87.61570462 16.62743255  5.26935055]\n",
      "(3, 224) [87.61633028 16.62756901  5.269345  ]\n",
      "(3, 224) [87.61704959 16.62771246  5.26934282]\n",
      "(3, 224) [87.61786132 16.62788791  5.26933609]\n",
      "(3, 224) [87.61877146 16.62805686  5.26933732]\n",
      "(3, 224) [87.61954468 16.62826159  5.26931901]\n",
      "(3, 224) [87.62036981 16.62845619  5.26930704]\n",
      "(3, 224) [87.62105415 16.62867215  5.26927983]\n",
      "(3, 224) [87.62170242 16.62888774  5.26925056]\n",
      "(3, 224) [87.62200384 16.62908548  5.26920608]\n",
      "(3, 224) [87.62216087 16.62927269  5.26915626]\n",
      "(3, 224) [87.62260001 16.62948359  5.26911592]\n",
      "(3, 224) [87.62297805 16.62975253  5.26905348]\n",
      "(3, 224) [87.62342332 16.6300119   5.26899814]\n",
      "(3, 224) [87.62388801 16.63029605  5.26893608]\n",
      "(3, 224) [87.62440568 16.63058451  5.26887582]\n",
      "(3, 224) [87.62474082 16.63087645  5.26880349]\n",
      "(3, 224) [87.62519309 16.63115398  5.26874274]\n",
      "(3, 224) [87.62548856 16.63140134  5.2686821 ]\n",
      "(3, 224) [87.62595435 16.63167357  5.26862389]\n",
      "(3, 224) [87.62656871 16.63192414  5.26858149]\n",
      "(3, 224) [87.6269373  16.63215978  5.26852908]\n",
      "(3, 224) [87.6274842  16.63233243  5.26850729]\n",
      "(3, 224) [87.62779864 16.63255805  5.26845476]\n",
      "(3, 224) [87.62839242 16.63276557  5.26842477]\n",
      "(3, 224) [87.62896701 16.63299638  5.26838624]\n",
      "(3, 224) [87.62936119 16.6332065   5.26834342]\n",
      "(3, 224) [87.62992042 16.63343845  5.26830358]\n",
      "(3, 224) [87.63053656 16.63363304  5.26827899]\n",
      "(3, 224) [87.63112097 16.6338241   5.2682536 ]\n",
      "(3, 224) [87.6319533  16.6339778   5.26825496]\n",
      "(3, 224) [87.63257601 16.63412511  5.26824574]\n",
      "(3, 224) [87.63332877 16.63427452  5.26824368]\n",
      "(3, 224) [87.63415102 16.63437164  5.26826235]\n",
      "(3, 224) [87.63475712 16.63445036  5.26827386]\n",
      "(3, 224) [87.63535011 16.63455158  5.26827743]\n",
      "(3, 224) [87.63579794 16.63467691  5.26826463]\n",
      "(3, 224) [87.63683986 16.6348279   5.26827943]\n",
      "(3, 224) [87.63754104 16.63498359  5.26827227]\n",
      "(3, 224) [87.63810351 16.63511749  5.26826369]\n",
      "(3, 224) [87.63872869 16.63526623  5.26825417]\n",
      "(3, 224) [87.63924183 16.6354104   5.26823934]\n",
      "(3, 224) [87.6399532  16.63550288  5.26825283]\n",
      "(3, 224) [87.64061138 16.63559508  5.26826321]\n",
      "(3, 224) [87.6413436  16.63571842  5.26826817]\n",
      "(3, 224) [87.64228351 16.63583308  5.26828837]\n",
      "(3, 224) [87.64297004 16.63590571  5.26830664]\n",
      "(3, 224) [87.64359525 16.63599303  5.26831658]\n",
      "(3, 224) [87.64447463 16.63607868  5.26834232]\n",
      "(3, 224) [87.64547532 16.63622272  5.26835687]\n",
      "(3, 224) [87.64632661 16.63637163  5.26836088]\n",
      "(3, 224) [87.64705697 16.63652763  5.26835537]\n",
      "(3, 224) [87.64751798 16.63666137  5.26834071]\n",
      "(3, 224) [87.64804846 16.63679768  5.26832942]\n",
      "(3, 224) [87.64868677 16.63693499  5.26832432]\n",
      "(3, 224) [87.64927487 16.63708006  5.26831374]\n",
      "(3, 224) [87.64970737 16.63720835  5.2682991 ]\n",
      "(3, 224) [87.65016879 16.63736117  5.26827842]\n",
      "(3, 224) [87.65039632 16.63754539  5.26823373]\n",
      "(3, 224) [87.65068799 16.63773235  5.26819202]\n",
      "(3, 224) [87.65116153 16.63794589  5.26815279]\n",
      "(3, 224) [87.65170825 16.63816994  5.26811462]\n",
      "(3, 224) [87.65250088 16.6384391   5.26807692]\n",
      "(3, 224) [87.6531792  16.63869012  5.26803812]\n",
      "(3, 224) [87.65410361 16.63895621  5.26800933]\n",
      "(3, 224) [87.65504921 16.63921646  5.26798372]\n",
      "(3, 224) [87.65584897 16.6395275   5.26793316]\n",
      "(3, 224) [87.6567616  16.63980615  5.26789971]\n",
      "(3, 224) [87.65748022 16.64005078  5.26786543]\n",
      "(3, 224) [87.65808825 16.64029281  5.26782536]\n",
      "(3, 224) [87.65902696 16.64056689  5.26779506]\n",
      "(3, 224) [87.65981824 16.64081232  5.26776494]\n",
      "(3, 224) [87.66094799 16.64107394  5.26775   ]\n",
      "(3, 224) [87.66200024 16.64132911  5.26773245]\n",
      "(3, 224) [87.66290141 16.64159025  5.26770395]\n",
      "(3, 224) [87.66401803 16.64193094  5.26766324]\n",
      "(3, 224) [87.66498391 16.64228538  5.26760914]\n",
      "(3, 224) [87.66582173 16.64269425  5.26753013]\n",
      "(3, 224) [87.66651068 16.64307516  5.267451  ]\n",
      "(3, 224) [87.6673432  16.64346868  5.26737656]\n",
      "(3, 224) [87.66838753 16.64388033  5.267309  ]\n",
      "(3, 224) [87.66941432 16.64424847  5.26725419]\n",
      "(3, 224) [87.6707409  16.64465381  5.26720566]\n",
      "(3, 224) [87.67187446 16.64505066  5.26714821]\n",
      "(3, 224) [87.67281352 16.64543019  5.26708457]\n",
      "(3, 224) [87.67400139 16.64586592  5.26701812]\n",
      "(3, 224) [87.67518138 16.64630602  5.26694979]\n",
      "(3, 224) [87.67646673 16.64673226  5.26689219]\n",
      "(3, 224) [87.67773567 16.64715107  5.26683593]\n",
      "(3, 224) [87.67893267 16.64760328  5.26676477]\n",
      "(3, 224) [87.68025413 16.64808036  5.26669332]\n",
      "(3, 224) [87.68169792 16.6485208   5.26664077]\n",
      "(3, 224) [87.68296376 16.64895732  5.26657875]\n",
      "(3, 224) [87.68432857 16.64943418  5.26650999]\n",
      "(3, 224) [87.68556048 16.64991181  5.26643299]\n",
      "(3, 224) [87.6868247  16.6504338   5.26634394]\n",
      "(3, 224) [87.68785079 16.6509683   5.26623669]\n",
      "(3, 224) [87.68904154 16.6514861   5.26614452]\n",
      "(3, 224) [87.69003612 16.6520071   5.26603967]\n",
      "(3, 224) [87.69105779 16.65256761  5.26592398]\n",
      "(3, 224) [87.69191623 16.65318794  5.26577973]\n",
      "(3, 224) [87.69276098 16.65386304  5.26561754]\n",
      "(3, 224) [87.69361932 16.65456699  5.26544731]\n",
      "(3, 224) [87.69433506 16.65517389  5.26529896]\n",
      "(3, 224) [87.69516213 16.65582589  5.26514324]\n",
      "(3, 224) [87.69596777 16.65643643  5.26499922]\n",
      "(3, 224) [87.6963019  16.65699691  5.26484266]\n",
      "(3, 224) [87.69631668 16.65748055  5.26469119]\n",
      "(3, 224) [87.69652094 16.65800902  5.26453694]\n",
      "(3, 224) [87.69664982 16.65863129  5.26434862]\n",
      "(3, 224) [87.69593865 16.65907597  5.26416579]\n",
      "(3, 224) [87.69527258 16.65966096  5.26394159]\n",
      "(3, 224) [87.69499507 16.66027144  5.26373281]\n",
      "(3, 224) [87.69444339 16.66085822  5.26351508]\n",
      "(3, 224) [87.69403369 16.66148236  5.26329407]\n",
      "(3, 224) [87.69363196 16.66207349  5.26308394]\n",
      "(3, 224) [87.69339236 16.66265105  5.26288767]\n",
      "(3, 224) [87.69319089 16.66316347  5.26271402]\n",
      "(3, 224) [87.69309917 16.66378614  5.26251245]\n",
      "(3, 224) [87.69275574 16.66436575  5.26230934]\n",
      "(3, 224) [87.69232174 16.66494012  5.26210255]\n",
      "(3, 224) [87.69181787 16.6655157   5.26189113]\n",
      "(3, 224) [87.69156983 16.66609083  5.26169521]\n",
      "(3, 224) [87.69136807 16.66662871  5.26151381]\n",
      "(3, 224) [87.69127998 16.66715353  5.26134343]\n",
      "(3, 224) [87.69109303 16.66765824  5.26117344]\n",
      "(3, 224) [87.69078691 16.66814221  5.26100276]\n",
      "(3, 224) [87.69049821 16.66861771  5.26083577]\n",
      "(3, 224) [87.69006487 16.66907413  5.26066608]\n",
      "(3, 224) [87.68979806 16.66953239  5.26050587]\n",
      "(3, 224) [87.68976417 16.67000525  5.26035503]\n",
      "(3, 224) [87.6893809  16.67044335  5.26019419]\n",
      "(3, 224) [87.68877537 16.67086103  5.26002648]\n",
      "(3, 224) [87.6879972  16.67126676  5.25985214]\n",
      "(3, 224) [87.68738062 16.6716828   5.25968424]\n",
      "(3, 224) [87.68645097 16.67205722  5.25951071]\n",
      "(3, 224) [87.68573868 16.67239771  5.25936088]\n",
      "(3, 224) [87.68504893 16.67272539  5.25921643]\n",
      "(3, 224) [87.68409546 16.67301461  5.25906835]\n",
      "(3, 224) [87.68285726 16.67327918  5.25891106]\n",
      "(3, 224) [87.68184011 16.67355433  5.25876369]\n",
      "(3, 224) [87.68082577 16.67389847  5.25859472]\n",
      "(3, 224) [87.67992446 16.67416273  5.25845757]\n",
      "(3, 224) [87.67919494 16.67444575  5.25832479]\n",
      "(3, 224) [87.67836498 16.67471885  5.25818914]\n",
      "(3, 224) [87.67747778 16.67503476  5.25803664]\n",
      "(3, 224) [87.67672935 16.67536538  5.25788776]\n",
      "(3, 224) [87.67603192 16.67568222  5.25774624]\n",
      "(3, 224) [87.67514389 16.67603013  5.25758342]\n",
      "(3, 224) [87.6744258  16.67639134  5.25742654]\n",
      "(3, 224) [87.67368663 16.67676763  5.25726362]\n",
      "(3, 224) [87.67322598 16.67714022  5.25711861]\n",
      "(3, 224) [87.67313406 16.67758063  5.25697437]\n",
      "(3, 224) [87.67320921 16.67801695  5.25684147]\n",
      "(3, 224) [87.67303223 16.67841381  5.25670584]\n",
      "(3, 224) [87.67312378 16.67882548  5.25658171]\n",
      "(3, 224) [87.67277414 16.67922569  5.25643478]\n",
      "(3, 224) [87.67263608 16.67950856  5.25633752]\n",
      "(3, 224) [87.67221715 16.67979545  5.25622213]\n",
      "(3, 224) [87.67194524 16.68013276  5.25609974]\n",
      "(3, 224) [87.67134831 16.68042662  5.25597151]\n",
      "(3, 224) [87.67109479 16.68072099  5.25586366]\n",
      "(3, 224) [87.67084707 16.68097485  5.25576891]\n",
      "(3, 224) [87.67041889 16.68122596  5.25566417]\n",
      "(3, 224) [87.66996466 16.68151851  5.25554477]\n",
      "(3, 224) [87.66952795 16.68183587  5.25541858]\n",
      "(3, 224) [87.66933961 16.6821582   5.25530573]\n",
      "(3, 224) [87.66915979 16.68244479  5.25520471]\n",
      "(3, 224) [87.668879   16.68272492  5.25509964]\n",
      "(3, 224) [87.66869056 16.6829546   5.25501608]\n",
      "(3, 224) [87.6687261  16.68320409  5.25493969]\n",
      "(3, 224) [87.66844369 16.68349312  5.25483178]\n",
      "(3, 224) [87.66809263 16.6837864   5.25471833]\n",
      "(3, 224) [87.66789067 16.68409166  5.25461017]\n",
      "(3, 224) [87.66764815 16.68440878  5.25449583]\n",
      "(3, 224) [87.66758136 16.68471156  5.25439653]\n",
      "(3, 224) [87.66723541 16.68499521  5.25428656]\n",
      "(3, 224) [87.66659496 16.68526471  5.25416338]\n",
      "(3, 224) [87.66612461 16.68553297  5.25405079]\n",
      "(3, 224) [87.66596673 16.68581788  5.2539516 ]\n",
      "(3, 224) [87.66584168 16.68611254  5.25385122]\n",
      "(3, 224) [87.66567351 16.68641221  5.25374673]\n",
      "(3, 224) [87.66538098 16.68672003  5.25363223]\n",
      "(3, 224) [87.66521163 16.68699849  5.25353439]\n",
      "(3, 224) [87.6650705  16.68724853  5.25344721]\n",
      "(3, 224) [87.66516888 16.68749817  5.2533745 ]\n",
      "(3, 224) [87.6649838  16.68773548  5.2532887 ]\n",
      "(3, 224) [87.66499609 16.68798751  5.25321011]\n",
      "(3, 224) [87.66493159 16.68824328  5.25312572]\n",
      "(3, 224) [87.6648568  16.68852485  5.25303256]\n",
      "(3, 224) [87.66464634 16.68878989  5.25293648]\n",
      "(3, 224) [87.66462502 16.68908799  5.25284134]\n",
      "(3, 224) [87.66451399 16.68938487  5.25274116]\n",
      "(3, 224) [87.66455224 16.68966975  5.2526537 ]\n",
      "(3, 224) [87.66425334 16.68993508  5.2525522 ]\n",
      "(3, 224) [87.66435136 16.69019758  5.25247539]\n",
      "(3, 224) [87.66458594 16.69046428  5.25240541]\n",
      "(3, 224) [87.66455759 16.69077166  5.25230688]\n",
      "(3, 224) [87.66453192 16.69107668  5.25220931]\n",
      "(3, 224) [87.66446279 16.69138236  5.2521089 ]\n",
      "(3, 224) [87.66460599 16.69170321  5.25201646]\n",
      "(3, 224) [87.66439424 16.69198961  5.25191354]\n",
      "(3, 224) [87.66437992 16.69225529  5.25182896]\n",
      "(3, 224) [87.66421569 16.69251883  5.25173607]\n",
      "(3, 224) [87.6640902  16.69278616  5.2516443 ]\n",
      "(3, 224) [87.66407568 16.69303453  5.25156514]\n",
      "(3, 224) [87.66393902 16.69328712  5.2514774 ]\n",
      "(3, 224) [87.66367928 16.6935615   5.25137545]\n",
      "(3, 224) [87.66345784 16.69384679  5.25127238]\n",
      "(3, 224) [87.66339186 16.6941656   5.25116808]\n",
      "(3, 224) [87.66340388 16.69448968  5.25106677]\n",
      "(3, 224) [87.66339554 16.69480749  5.25096621]\n",
      "(3, 224) [87.66303963 16.69512348  5.25084539]\n",
      "(3, 224) [87.66302049 16.69545127  5.25074103]\n",
      "(3, 224) [87.66304304 16.69577095  5.25064169]\n",
      "(3, 224) [87.66303685 16.69611317  5.25053359]\n",
      "(3, 224) [87.66299764 16.69644138  5.25042792]\n",
      "(3, 224) [87.66290427 16.69676584  5.25032018]\n",
      "(3, 224) [87.66283315 16.69709633  5.25021189]\n",
      "(3, 224) [87.66275545 16.6974404   5.25009893]\n",
      "(3, 224) [87.66263846 16.69776871  5.24998858]\n",
      "(3, 224) [87.66248707 16.69809948  5.24987542]\n",
      "(3, 224) [87.66228341 16.69843943  5.24975621]\n",
      "(3, 224) [87.66207944 16.69874901  5.24964654]\n",
      "(3, 224) [87.66160445 16.69895188  5.2495542 ]\n",
      "(3, 224) [87.66137926 16.69916989  5.24947207]\n",
      "(3, 224) [87.66088093 16.69940141  5.24936927]\n",
      "(3, 224) [87.66032199 16.6996248   5.24926545]\n",
      "(3, 224) [87.65966524 16.69983172  5.24916094]\n",
      "(3, 224) [87.65922188 16.70003275  5.2490711 ]\n",
      "(3, 224) [87.65890788 16.70023664  5.24898811]\n",
      "(3, 224) [87.6586532  16.70045957  5.24890269]\n",
      "(3, 224) [87.65826118 16.70068337  5.24880877]\n",
      "(3, 224) [87.6578871  16.70090584  5.24871635]\n",
      "(3, 224) [87.65765517 16.70114251  5.24862797]\n",
      "(3, 224) [87.65742004 16.70136791  5.24854295]\n",
      "(3, 224) [87.6571625  16.70158315  5.2484598 ]\n",
      "(3, 224) [87.65705091 16.70179797  5.24838551]\n",
      "(3, 224) [87.65661473 16.7019984   5.2482963 ]\n",
      "(3, 224) [87.65597769 16.70212813  5.24821726]\n",
      "(3, 224) [87.65567259 16.70224202  5.24816309]\n",
      "(3, 224) [87.65509747 16.70237301  5.24808734]\n",
      "(3, 224) [87.65459132 16.70250951  5.24801396]\n",
      "(3, 224) [87.65407755 16.70258714  5.24795869]\n",
      "(3, 224) [87.65368366 16.70266298  5.24791116]\n",
      "(3, 224) [87.65326836 16.7027033   5.24787354]\n",
      "(3, 224) [87.65270353 16.7027909   5.24781202]\n",
      "(3, 224) [87.65226431 16.70285589  5.24776518]\n",
      "(3, 224) [87.65209397 16.70296224  5.24772143]\n",
      "(3, 224) [87.65184373 16.70304213  5.24768123]\n",
      "(3, 224) [87.6515364  16.70311858  5.24763868]\n",
      "(3, 224) [87.65112343 16.70317547  5.24759596]\n",
      "(3, 224) [87.65055622 16.70324718  5.2475393 ]\n",
      "(3, 224) [87.65024372 16.70334506  5.24748966]\n",
      "(3, 224) [87.64992914 16.70345571  5.24743584]\n",
      "(3, 224) [87.64939479 16.70356796  5.24736835]\n",
      "(3, 224) [87.6489053  16.70369076  5.24730024]\n",
      "(3, 224) [87.64845393 16.70385807  5.24722036]\n",
      "(3, 224) [87.64820703 16.704038    5.24714875]\n",
      "(3, 224) [87.64810952 16.70427828  5.24706701]\n",
      "(3, 224) [87.64782534 16.70449777  5.24698067]\n",
      "(3, 224) [87.6473619  16.70474195  5.24687574]\n",
      "(3, 224) [87.64744256 16.70496193  5.24681115]\n",
      "(3, 224) [87.64758654 16.70517334  5.24675308]\n",
      "(3, 224) [87.64785    16.70539227  5.2466998 ]\n",
      "(3, 224) [87.64808387 16.70561103  5.24664478]\n",
      "(3, 224) [87.64817339 16.70586944  5.24656857]\n",
      "(3, 224) [87.64851139 16.70612764  5.24650733]\n",
      "(3, 224) [87.64857058 16.70638095  5.24643094]\n",
      "(3, 224) [87.64870313 16.70663061  5.24636007]\n",
      "(3, 224) [87.64879701 16.70688954  5.24628398]\n",
      "(3, 224) [87.64891758 16.70715769  5.24620659]\n",
      "(3, 224) [87.64902196 16.70741389  5.24613199]\n",
      "(3, 224) [87.64902027 16.7076771   5.24604886]\n",
      "(3, 224) [87.64923458 16.70793494  5.24598035]\n",
      "(3, 224) [87.64959041 16.70820746  5.2459157 ]\n",
      "(3, 224) [87.65003478 16.70849071  5.24585297]\n",
      "(3, 224) [87.65052335 16.70876823  5.24579471]\n",
      "(3, 224) [87.65088441 16.70902871  5.24573421]\n",
      "(3, 224) [87.65113442 16.70927908  5.24567024]\n",
      "(3, 224) [87.65176159 16.70957311  5.24561509]\n",
      "(3, 224) [87.65232584 16.70986149  5.24555795]\n",
      "(3, 224) [87.65303763 16.71012738  5.24551678]\n",
      "(3, 224) [87.65334076 16.71035969  5.24546169]\n",
      "(3, 224) [87.6535584  16.71057624  5.24540642]\n",
      "(3, 224) [87.65347096 16.71078645  5.24533485]\n",
      "(3, 224) [87.65333364 16.71099366  5.24526124]\n",
      "(3, 224) [87.65358661 16.71125793  5.24519306]\n",
      "(3, 224) [87.65322446 16.71152124  5.24508834]\n",
      "(3, 224) [87.6529431  16.71173644  5.24500363]\n",
      "(3, 224) [87.65257056 16.71193605  5.24491835]\n",
      "(3, 224) [87.65204078 16.71218459  5.24480828]\n",
      "(3, 224) [87.65172186 16.71242087  5.24471476]\n",
      "(3, 224) [87.65144408 16.7126364   5.24463027]\n",
      "(3, 224) [87.65124014 16.71284774  5.24455153]\n",
      "(3, 224) [87.65085863 16.71311058  5.244446  ]\n",
      "(3, 224) [87.65011583 16.71336286  5.2443221 ]\n",
      "(3, 224) [87.64958216 16.71361905  5.2442095 ]\n",
      "(3, 224) [87.64909881 16.71385842  5.24410523]\n",
      "(3, 224) [87.64851666 16.71411642  5.24398932]\n",
      "(3, 224) [87.64804068 16.7143491   5.24388773]\n",
      "(3, 224) [87.64778498 16.71455733  5.24380704]\n",
      "(3, 224) [87.64746736 16.71479326  5.24371394]\n",
      "(3, 224) [87.64714139 16.71502866  5.24362055]\n",
      "(3, 224) [87.64652717 16.71528863  5.24350218]\n",
      "(3, 224) [87.64593388 16.71556268  5.24338063]\n",
      "(3, 224) [87.645242   16.71580427  5.24326338]\n",
      "(3, 224) [87.64465357 16.71605408  5.24314976]\n",
      "(3, 224) [87.6442619  16.71633378  5.24303857]\n",
      "(3, 224) [87.64367653 16.71655282  5.24293484]\n",
      "(3, 224) [87.6429669  16.71676109  5.24282706]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 11%|████████▎                                                                  | 8439/76339 [00:03<00:31, 2170.32it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.64241216 16.71699163  5.24272156]\n",
      "(3, 224) [87.64192621 16.71724657  5.24261249]\n",
      "(3, 224) [87.64156008 16.71747108  5.24252015]\n",
      "(3, 224) [87.64127802 16.71766696  5.24244184]\n",
      "(3, 224) [87.64071457 16.71788452  5.24233989]\n",
      "(3, 224) [87.64030063 16.71809997  5.24224754]\n",
      "(3, 224) [87.63964419 16.71827014  5.24215495]\n",
      "(3, 224) [87.63914096 16.7184791   5.24205938]\n",
      "(3, 224) [87.63862283 16.71866175  5.2419712 ]\n",
      "(3, 224) [87.63826546 16.71885902  5.24188809]\n",
      "(3, 224) [87.63779594 16.71906502  5.24179551]\n",
      "(3, 224) [87.63742494 16.71924369  5.2417174 ]\n",
      "(3, 224) [87.63710766 16.71939138  5.2416522 ]\n",
      "(3, 224) [87.63681462 16.71944954  5.2416165 ]\n",
      "(3, 224) [87.63686522 16.719446    5.24162063]\n",
      "(3, 224) [87.63672539 16.71935259  5.24164148]\n",
      "(3, 224) [87.6367359  16.71933806  5.24164666]\n",
      "(3, 224) [87.63655185 16.71925145  5.24166275]\n",
      "(3, 224) [87.63624211 16.71915286  5.24167511]\n",
      "(3, 224) [87.63605965 16.71905889  5.24169364]\n",
      "(3, 224) [87.63594152 16.71898229  5.24171057]\n",
      "(3, 224) [87.63540683 16.71886408  5.24171564]\n",
      "(3, 224) [87.63495915 16.71870328  5.24173922]\n",
      "(3, 224) [87.6350123 16.7186905  5.2417464]\n",
      "(3, 224) [87.63489212 16.71858702  5.24177158]\n",
      "(3, 224) [87.63485019 16.71846509  5.24180719]\n",
      "(3, 224) [87.63496793 16.71836974  5.24184402]\n",
      "(3, 224) [87.63509273 16.71824152  5.24189155]\n",
      "(3, 224) [87.63492829 16.71810741  5.24192365]\n",
      "(3, 224) [87.63482239 16.7179769   5.24195816]\n",
      "(3, 224) [87.63477943 16.7179254   5.24197173]\n",
      "(3, 224) [87.63493409 16.71778217  5.24202579]\n",
      "(3, 224) [87.63481113 16.71764135  5.2420625 ]\n",
      "(3, 224) [87.63490267 16.7175017   5.24211165]\n",
      "(3, 224) [87.63491235 16.71737153  5.24215294]\n",
      "(3, 224) [87.63480615 16.71723247  5.2421901 ]\n",
      "(3, 224) [87.63447728 16.71706498  5.24222288]\n",
      "(3, 224) [87.63421569 16.71689653  5.24225996]\n",
      "(3, 224) [87.63409912 16.71672459  5.24230683]\n",
      "(3, 224) [87.63395196 16.71658808  5.24234078]\n",
      "(3, 224) [87.63358658 16.71643746  5.24236612]\n",
      "(3, 224) [87.63339328 16.71632183  5.24239078]\n",
      "(3, 224) [87.6331007  16.71618226  5.242417  ]\n",
      "(3, 224) [87.63273781 16.71602656  5.24244407]\n",
      "(3, 224) [87.63265691 16.71589676  5.2424799 ]\n",
      "(3, 224) [87.63252542 16.71575135  5.24251759]\n",
      "(3, 224) [87.63253187 16.7156243   5.24255778]\n",
      "(3, 224) [87.63257617 16.71549256  5.24260171]\n",
      "(3, 224) [87.63277343 16.71537131  5.2426515 ]\n",
      "(3, 224) [87.63267066 16.71525895  5.24268058]\n",
      "(3, 224) [87.63264501 16.71516071  5.24270984]\n",
      "(3, 224) [87.63287333 16.71507604  5.24275003]\n",
      "(3, 224) [87.63346273 16.71499018  5.24281218]\n",
      "(3, 224) [87.63379083 16.71488272  5.24286546]\n",
      "(3, 224) [87.63418955 16.71477142  5.24292417]\n",
      "(3, 224) [87.63453245 16.71473075  5.24295743]\n",
      "(3, 224) [87.63455946 16.7146676   5.24297884]\n",
      "(3, 224) [87.63489754 16.7146305   5.2430107 ]\n",
      "(3, 224) [87.63516738 16.71455878  5.2430493 ]\n",
      "(3, 224) [87.63505994 16.7144708   5.24307044]\n",
      "(3, 224) [87.63501636 16.71444628  5.24307551]\n",
      "(3, 224) [87.63509071 16.71441962  5.24308831]\n",
      "(3, 224) [87.63484942 16.71443551  5.24306891]\n",
      "(3, 224) [87.63488869 16.71447256  5.24305965]\n",
      "(3, 224) [87.63481417 16.71451433  5.24304212]\n",
      "(3, 224) [87.63448192 16.71452376  5.2430193 ]\n",
      "(3, 224) [87.63429382 16.71453191  5.24300551]\n",
      "(3, 224) [87.63414916 16.71456507  5.24298648]\n",
      "(3, 224) [87.6338268  16.7145573   5.24296964]\n",
      "(3, 224) [87.63378381 16.7145519   5.24296876]\n",
      "(3, 224) [87.63371988 16.71459888  5.24295022]\n",
      "(3, 224) [87.63388768 16.71463301  5.24294957]\n",
      "(3, 224) [87.63393963 16.71461178  5.24295932]\n",
      "(3, 224) [87.63401524 16.71462371  5.24296011]\n",
      "(3, 224) [87.63399624 16.71468662  5.24293927]\n",
      "(3, 224) [87.63382566 16.71478044  5.2428997 ]\n",
      "(3, 224) [87.63378461 16.71489814  5.24286038]\n",
      "(3, 224) [87.63362405 16.71500393  5.24281766]\n",
      "(3, 224) [87.63355649 16.71509271  5.24278581]\n",
      "(3, 224) [87.63328468 16.71520094  5.24273567]\n",
      "(3, 224) [87.63289651 16.71529485  5.24268306]\n",
      "(3, 224) [87.63281487 16.71538869  5.24264879]\n",
      "(3, 224) [87.63260967 16.71548059  5.24260774]\n",
      "(3, 224) [87.63220676 16.71555468  5.24256044]\n",
      "(3, 224) [87.63210054 16.71557074  5.24254905]\n",
      "(3, 224) [87.63178279 16.71560706  5.24251866]\n",
      "(3, 224) [87.6315389  16.7156145   5.24250174]\n",
      "(3, 224) [87.63130812 16.71562145  5.24248576]\n",
      "(3, 224) [87.6310515  16.71562775  5.24246844]\n",
      "(3, 224) [87.6310057  16.71563764  5.2424626 ]\n",
      "(3, 224) [87.63079109 16.71564229  5.24244831]\n",
      "(3, 224) [87.63077054 16.71565282  5.24244378]\n",
      "(3, 224) [87.63077515 16.71571352  5.24242504]\n",
      "(3, 224) [87.63039111 16.71579829  5.24237549]\n",
      "(3, 224) [87.63018632 16.71586271  5.24234306]\n",
      "(3, 224) [87.62991452 16.71591256  5.24231118]\n",
      "(3, 224) [87.62972336 16.71598054  5.24227845]\n",
      "(3, 224) [87.62964794 16.71605255  5.24225137]\n",
      "(3, 224) [87.62941091 16.7161238   5.24221486]\n",
      "(3, 224) [87.62931237 16.7161908   5.24218796]\n",
      "(3, 224) [87.62894474 16.71624058  5.24215037]\n",
      "(3, 224) [87.62857324 16.7162652   5.24212043]\n",
      "(3, 224) [87.62823536 16.71627836  5.24209608]\n",
      "(3, 224) [87.62788662 16.7162978   5.24206912]\n",
      "(3, 224) [87.62746543 16.71628398  5.24204825]\n",
      "(3, 224) [87.62692361 16.71627512  5.2420186 ]\n",
      "(3, 224) [87.62642023 16.71627347  5.24198899]\n",
      "(3, 224) [87.62595209 16.71629866  5.24195307]\n",
      "(3, 224) [87.62527165 16.71630748  5.24190958]\n",
      "(3, 224) [87.62451002 16.71632319  5.24185907]\n",
      "(3, 224) [87.62386779 16.71630144  5.24182745]\n",
      "(3, 224) [87.62355362 16.7162846   5.24181393]\n",
      "(3, 224) [87.62290943 16.71625469  5.24178476]\n",
      "(3, 224) [87.62225562 16.71621641  5.24175765]\n",
      "(3, 224) [87.62174338 16.71620726  5.24172986]\n",
      "(3, 224) [87.62113239 16.7162151   5.24169083]\n",
      "(3, 224) [87.62069017 16.71622091  5.24166253]\n",
      "(3, 224) [87.62016755 16.7162233   5.2416305 ]\n",
      "(3, 224) [87.61954836 16.7162409   5.24158791]\n",
      "(3, 224) [87.61935253 16.71621041  5.24158576]\n",
      "(3, 224) [87.61904844 16.71613207  5.24159213]\n",
      "(3, 224) [87.61864493 16.71605969  5.24159068]\n",
      "(3, 224) [87.61817509 16.71591789  5.24160705]\n",
      "(3, 224) [87.61769142 16.71575336  5.24162975]\n",
      "(3, 224) [87.61728637 16.71555199  5.24166876]\n",
      "(3, 224) [87.6170256  16.715351    5.24171627]\n",
      "(3, 224) [87.61667039 16.71517806  5.24174931]\n",
      "(3, 224) [87.61621618 16.71501073  5.24177468]\n",
      "(3, 224) [87.61579679 16.71484177  5.24180261]\n",
      "(3, 224) [87.61537637 16.71467619  5.24182942]\n",
      "(3, 224) [87.61533714 16.71453193  5.24187237]\n",
      "(3, 224) [87.61515089 16.71435461  5.2419169 ]\n",
      "(3, 224) [87.61491351 16.71414856  5.2419674 ]\n",
      "(3, 224) [87.61485773 16.71394482  5.24202807]\n",
      "(3, 224) [87.61455771 16.71376171  5.24206758]\n",
      "(3, 224) [87.6143954  16.71359156  5.24211128]\n",
      "(3, 224) [87.61417125 16.71343881  5.24214581]\n",
      "(3, 224) [87.61388006 16.71335835  5.24215364]\n",
      "(3, 224) [87.61356005 16.71328014  5.24215904]\n",
      "(3, 224) [87.61325816 16.7132131   5.24216201]\n",
      "(3, 224) [87.61331444 16.71312169  5.24219409]\n",
      "(3, 224) [87.61314092 16.71302833  5.24221301]\n",
      "(3, 224) [87.61275715 16.71292076  5.24222382]\n",
      "(3, 224) [87.6124425  16.71282637  5.24223462]\n",
      "(3, 224) [87.61222211 16.71272176  5.24225428]\n",
      "(3, 224) [87.6120271  16.71262605  5.24227265]\n",
      "(3, 224) [87.61190098 16.71252482  5.24229688]\n",
      "(3, 224) [87.61177417 16.71242702  5.24232   ]\n",
      "(3, 224) [87.61153722 16.71235896  5.24232717]\n",
      "(3, 224) [87.61134239 16.71228824  5.24233771]\n",
      "(3, 224) [87.61114014 16.71221262  5.24234934]\n",
      "(3, 224) [87.61107109 16.7121585   5.2423622 ]\n",
      "(3, 224) [87.61101717 16.71216322  5.24235748]\n",
      "(3, 224) [87.6107207  16.7121779   5.24233511]\n",
      "(3, 224) [87.61059631 16.7122001   5.24232069]\n",
      "(3, 224) [87.61041574 16.71223478  5.24229898]\n",
      "(3, 224) [87.61018826 16.71227537  5.24227259]\n",
      "(3, 224) [87.60994616 16.71234169  5.24223723]\n",
      "(3, 224) [87.6100049  16.71245195  5.24220608]\n",
      "(3, 224) [87.61003074 16.71255773  5.24217437]\n",
      "(3, 224) [87.61007563 16.71265527  5.24214638]\n",
      "(3, 224) [87.60986115 16.71272034  5.24211307]\n",
      "(3, 224) [87.6098784  16.7128014   5.24208861]\n",
      "(3, 224) [87.60980742 16.71287746  5.24206043]\n",
      "(3, 224) [87.60974951 16.71296786  5.24202851]\n",
      "(3, 224) [87.60986211 16.71303589  5.24201385]\n",
      "(3, 224) [87.60963363 16.71308349  5.24198517]\n",
      "(3, 224) [87.60943887 16.71313215  5.24195817]\n",
      "(3, 224) [87.60942424 16.71318513  5.24194062]\n",
      "(3, 224) [87.60930292 16.71322787  5.24191991]\n",
      "(3, 224) [87.6091211  16.71324899  5.24190237]\n",
      "(3, 224) [87.60860854 16.71326346  5.2418671 ]\n",
      "(3, 224) [87.60818279 16.7132693   5.24183975]\n",
      "(3, 224) [87.6077939  16.71328088  5.24181281]\n",
      "(3, 224) [87.60744675 16.71329982  5.24178606]\n",
      "(3, 224) [87.60686886 16.713306    5.2417495 ]\n",
      "(3, 224) [87.60632235 16.71328436  5.24172356]\n",
      "(3, 224) [87.6055749  16.71324024  5.24169265]\n",
      "(3, 224) [87.6048946  16.71320241  5.24166379]\n",
      "(3, 224) [87.60437972 16.71314115  5.24165221]\n",
      "(3, 224) [87.60387216 16.71308082  5.24164078]\n",
      "(3, 224) [87.60326104 16.71300066  5.24162939]\n",
      "(3, 224) [87.60266136 16.71292042  5.24161871]\n",
      "(3, 224) [87.60198438 16.71282356  5.24160862]\n",
      "(3, 224) [87.60145607 16.71272272  5.2416087 ]\n",
      "(3, 224) [87.60070409 16.71264072  5.24158945]\n",
      "(3, 224) [87.59986903 16.71253738  5.24157192]\n",
      "(3, 224) [87.59907759 16.71245201  5.24155136]\n",
      "(3, 224) [87.59807339 16.71235071  5.24152307]\n",
      "(3, 224) [87.59704178 16.71224714  5.24149384]\n",
      "(3, 224) [87.59598536 16.71213056  5.24146723]\n",
      "(3, 224) [87.59509801 16.71202323  5.24144782]\n",
      "(3, 224) [87.59418415 16.71191798  5.24142618]\n",
      "(3, 224) [87.59308682 16.71180427  5.24139621]\n",
      "(3, 224) [87.59193916 16.71169993  5.24136027]\n",
      "(3, 224) [87.59081    16.71159793  5.24132471]\n",
      "(3, 224) [87.58990867 16.71152288  5.24129431]\n",
      "(3, 224) [87.58917046 16.71147845  5.24126405]\n",
      "(3, 224) [87.58838199 16.71142549  5.24123346]\n",
      "(3, 224) [87.58767863 16.71136714  5.24120967]\n",
      "(3, 224) [87.58685511 16.7112376   5.24120108]\n",
      "(3, 224) [87.58624494 16.71110661  5.24120569]\n",
      "(3, 224) [87.58564767 16.71102765  5.24119472]\n",
      "(3, 224) [87.58552384 16.7109444   5.24121349]\n",
      "(3, 224) [87.58533467 16.7108339   5.24123687]\n",
      "(3, 224) [87.58539465 16.71073086  5.24127284]\n",
      "(3, 224) [87.58526916 16.71062478  5.24129865]\n",
      "(3, 224) [87.58516017 16.71050881  5.24132856]\n",
      "(3, 224) [87.58520656 16.71034361  5.24138322]\n",
      "(3, 224) [87.58510428 16.71018297  5.24142752]\n",
      "(3, 224) [87.58499448 16.71002158  5.24147164]\n",
      "(3, 224) [87.5846535  16.70984308  5.24150728]\n",
      "(3, 224) [87.58421971 16.70962532  5.24154961]\n",
      "(3, 224) [87.5838784  16.70943117  5.24159007]\n",
      "(3, 224) [87.58349779 16.70922962  5.24163052]\n",
      "(3, 224) [87.58317954 16.70902678  5.24167509]\n",
      "(3, 224) [87.58284355 16.70877596  5.24173365]\n",
      "(3, 224) [87.58253532 16.70851547  5.24179688]\n",
      "(3, 224) [87.58218882 16.70822843  5.24186618]\n",
      "(3, 224) [87.58167641 16.70791665  5.24193332]\n",
      "(3, 224) [87.58121674 16.70759838  5.24200567]\n",
      "(3, 224) [87.58065194 16.70725514  5.24207953]\n",
      "(3, 224) [87.58014019 16.70691368  5.24215605]\n",
      "(3, 224) [87.57950153 16.70657554  5.24222392]\n",
      "(3, 224) [87.57864077 16.70622883  5.24228116]\n",
      "(3, 224) [87.57783841 16.70588471  5.2423411 ]\n",
      "(3, 224) [87.57698441 16.70554224  5.24239747]\n",
      "(3, 224) [87.57592557 16.70518767  5.24244537]\n",
      "(3, 224) [87.57503815 16.70484044  5.24250119]\n",
      "(3, 224) [87.57393594 16.7044776   5.24254909]\n",
      "(3, 224) [87.57312618 16.70413124  5.24260929]\n",
      "(3, 224) [87.57231482 16.70375766  5.24267791]\n",
      "(3, 224) [87.57133157 16.70339422  5.24273302]\n",
      "(3, 224) [87.57037053 16.70300922  5.24279618]\n",
      "(3, 224) [87.56938179 16.7026915   5.24283656]\n",
      "(3, 224) [87.56876763 16.70236221  5.24290302]\n",
      "(3, 224) [87.56798426 16.70205804  5.24295148]\n",
      "(3, 224) [87.56715298 16.70177101  5.24299172]\n",
      "(3, 224) [87.56628953 16.70151199  5.2430213 ]\n",
      "(3, 224) [87.56548632 16.70128821  5.24304342]\n",
      "(3, 224) [87.56483926 16.70106966  5.24307326]\n",
      "(3, 224) [87.56405047 16.7008552   5.24309332]\n",
      "(3, 224) [87.56341353 16.70074273  5.24309048]\n",
      "(3, 224) [87.56282674 16.70062646  5.24309184]\n",
      "(3, 224) [87.56215589 16.70047342  5.24309973]\n",
      "(3, 224) [87.56172451 16.70034435  5.24311441]\n",
      "(3, 224) [87.56133993 16.70021471  5.24313208]\n",
      "(3, 224) [87.56091957 16.70007993  5.2431492 ]\n",
      "(3, 224) [87.56058751 16.69991734  5.24318032]\n",
      "(3, 224) [87.5600791  16.69973446  5.24320726]\n",
      "(3, 224) [87.55963765 16.69953672  5.24324286]\n",
      "(3, 224) [87.55893449 16.6993684   5.24325356]\n",
      "(3, 224) [87.55842267 16.69921908  5.24326975]\n",
      "(3, 224) [87.55773527 16.69909251  5.24326832]\n",
      "(3, 224) [87.55699894 16.69893942  5.24327229]\n",
      "(3, 224) [87.55607847 16.69878245  5.24326647]\n",
      "(3, 224) [87.55556696 16.69863336  5.24328264]\n",
      "(3, 224) [87.55508941 16.69848658  5.24330013]\n",
      "(3, 224) [87.55466055 16.69833895  5.24332078]\n",
      "(3, 224) [87.5540377  16.69819261  5.24332942]\n",
      "(3, 224) [87.55357166 16.69808511  5.24333526]\n",
      "(3, 224) [87.55304868 16.69796794  5.24334072]\n",
      "(3, 224) [87.55245888 16.69785266  5.24334161]\n",
      "(3, 224) [87.5516834  16.6977298   5.24333375]\n",
      "(3, 224) [87.55116079 16.69763824  5.2433312 ]\n",
      "(3, 224) [87.5508457  16.69753198  5.24334569]\n",
      "(3, 224) [87.5504526  16.6974156   5.24335869]\n",
      "(3, 224) [87.55004605 16.69730857  5.24336796]\n",
      "(3, 224) [87.54964585 16.69720691  5.24337592]\n",
      "(3, 224) [87.54914462 16.69711949  5.24337336]\n",
      "(3, 224) [87.54863851 16.6970347   5.24336967]\n",
      "(3, 224) [87.54804762 16.69695046  5.24336075]\n",
      "(3, 224) [87.54730251 16.69686912  5.24334168]\n",
      "(3, 224) [87.54686185 16.69678055  5.24334311]\n",
      "(3, 224) [87.54644656 16.69670929  5.24334062]\n",
      "(3, 224) [87.54568172 16.69663484  5.2433182 ]\n",
      "(3, 224) [87.54472313 16.69656738  5.24328198]\n",
      "(3, 224) [87.54408578 16.69649531  5.24326644]\n",
      "(3, 224) [87.54328099 16.69643965  5.24323573]\n",
      "(3, 224) [87.542415   16.6963747   5.24320427]\n",
      "(3, 224) [87.5417338  16.69632238  5.2431799 ]\n",
      "(3, 224) [87.54087848 16.69624843  5.2431519 ]\n",
      "(3, 224) [87.54015599 16.69620571  5.24312205]\n",
      "(3, 224) [87.53961219 16.69617544  5.243099  ]\n",
      "(3, 224) [87.53926031 16.69615097  5.24308561]\n",
      "(3, 224) [87.53882289 16.69613961  5.243063  ]\n",
      "(3, 224) [87.53861122 16.69611089  5.24305933]\n",
      "(3, 224) [87.53803642 16.6960673   5.2430386 ]\n",
      "(3, 224) [87.53755729 16.69601788  5.24302542]\n",
      "(3, 224) [87.53722721 16.69596214  5.24302312]\n",
      "(3, 224) [87.5368408  16.69589171  5.24302206]\n",
      "(3, 224) [87.53658126 16.69581849  5.24302946]\n",
      "(3, 224) [87.53647525 16.69576605  5.24303954]\n",
      "(3, 224) [87.53639951 16.69575973  5.24303699]\n",
      "(3, 224) [87.53619701 16.69573774  5.24303176]\n",
      "(3, 224) [87.53586762 16.69572632  5.24301564]\n",
      "(3, 224) [87.53566997 16.69574043  5.2429994 ]\n",
      "(3, 224) [87.53551271 16.69581028  5.24296816]\n",
      "(3, 224) [87.53526837 16.69581355  5.24295253]\n",
      "(3, 224) [87.53520957 16.69579834  5.24295377]\n",
      "(3, 224) [87.53531068 16.69577726  5.24296641]\n",
      "(3, 224) [87.5352886  16.69577327  5.24296634]\n",
      "(3, 224) [87.53525566 16.69580918  5.24295314]\n",
      "(3, 224) [87.53529454 16.69580508  5.24295675]\n",
      "(3, 224) [87.53541343 16.6958209   5.24295891]\n",
      "(3, 224) [87.53523973 16.69583408  5.24294441]\n",
      "(3, 224) [87.5352251  16.69584643  5.24293967]\n",
      "(3, 224) [87.53526868 16.69586036  5.24293792]\n",
      "(3, 224) [87.53511144 16.69592377  5.24290868]\n",
      "(3, 224) [87.53516863 16.6959874   5.24289219]\n",
      "(3, 224) [87.53509607 16.69605388  5.24286706]\n",
      "(3, 224) [87.53498898 16.6961078   5.24284379]\n",
      "(3, 224) [87.53490638 16.69618132  5.24281585]\n",
      "(3, 224) [87.53465666 16.69625474  5.24277797]\n",
      "(3, 224) [87.53457046 16.69632877  5.24274966]\n",
      "(3, 224) [87.53429126 16.69639593  5.24271196]\n",
      "(3, 224) [87.53389186 16.69644252  5.24267352]\n",
      "(3, 224) [87.53376727 16.6964804   5.24265422]\n",
      "(3, 224) [87.53355753 16.69652784  5.24262685]\n",
      "(3, 224) [87.53333044 16.69658272  5.24259612]\n",
      "(3, 224) [87.53325925 16.69659736  5.24258728]\n",
      "(3, 224) [87.53286359 16.69661481  5.24255817]\n",
      "(3, 224) [87.53265944 16.69662332  5.2425433 ]\n",
      "(3, 224) [87.5323095  16.69664056  5.24251698]\n",
      "(3, 224) [87.53219269 16.69666516  5.2425023 ]\n",
      "(3, 224) [87.53222782 16.69670605  5.2424916 ]\n",
      "(3, 224) [87.53211119 16.69675807  5.24246834]\n",
      "(3, 224) [87.53186717 16.69681695  5.24243532]\n",
      "(3, 224) [87.53170356 16.69690252  5.24239876]\n",
      "(3, 224) [87.53171084 16.69700287  5.24236779]\n",
      "(3, 224) [87.53158248 16.69710075  5.24232947]\n",
      "(3, 224) [87.53175039 16.69717558  5.2423161 ]\n",
      "(3, 224) [87.53200135 16.69727043  5.24230142]\n",
      "(3, 224) [87.53203978 16.69736718  5.24227344]\n",
      "(3, 224) [87.53193307 16.69748334  5.24223072]\n",
      "(3, 224) [87.5316726  16.69759776  5.24217934]\n",
      "(3, 224) [87.53176122 16.69772008  5.24214637]\n",
      "(3, 224) [87.5316491  16.69784297  5.24210123]\n",
      "(3, 224) [87.53155209 16.69796815  5.24205627]\n",
      "(3, 224) [87.53152057 16.69809253  5.24201546]\n",
      "(3, 224) [87.53137113 16.69822793  5.24196416]\n",
      "(3, 224) [87.53119969 16.69835673  5.24191361]\n",
      "(3, 224) [87.53121575 16.69850512  5.24186814]\n",
      "(3, 224) [87.53091521 16.69869804  5.24178978]\n",
      "(3, 224) [87.53068726 16.69890157  5.24171244]\n",
      "(3, 224) [87.53072512 16.699095    5.24165417]\n",
      "(3, 224) [87.53066153 16.69933621  5.24157483]\n",
      "(3, 224) [87.53038417 16.69960339  5.24147455]\n",
      "(3, 224) [87.53006439 16.69990297  5.24136149]\n",
      "(3, 224) [87.52963535 16.70020392  5.2412415 ]\n",
      "(3, 224) [87.52925739 16.70046331  5.24113758]\n",
      "(3, 224) [87.52862187 16.70071686  5.2410201 ]\n",
      "(3, 224) [87.52811726 16.70095444  5.24091548]\n",
      "(3, 224) [87.52752707 16.70118589  5.24080766]\n",
      "(3, 224) [87.52657919 16.70139514  5.24068538]\n",
      "(3, 224) [87.52573521 16.70162801  5.24056189]\n",
      "(3, 224) [87.52487258 16.70189302  5.24042721]\n",
      "(3, 224) [87.52400934 16.70216155  5.24029136]\n",
      "(3, 224) [87.52344114 16.70239884  5.24018301]\n",
      "(3, 224) [87.52283229 16.70262356  5.24007616]\n",
      "(3, 224) [87.5221647  16.70284244  5.23996763]\n",
      "(3, 224) [87.52162149 16.70303756  5.23987402]\n",
      "(3, 224) [87.52097329 16.70322798  5.2397756 ]\n",
      "(3, 224) [87.52031781 16.70338526  5.23968712]\n",
      "(3, 224) [87.5193768  16.70355546  5.23957747]\n",
      "(3, 224) [87.51849934 16.70372937  5.23947047]\n",
      "(3, 224) [87.51754764 16.70390163  5.23935955]\n",
      "(3, 224) [87.5165533  16.70406682  5.23924831]\n",
      "(3, 224) [87.51543903 16.70423546  5.2391288 ]\n",
      "(3, 224) [87.5146158  16.70441649  5.23902286]\n",
      "(3, 224) [87.51356402 16.70463366  5.23889197]\n",
      "(3, 224) [87.51257477 16.70485264  5.23876424]\n",
      "(3, 224) [87.51168877 16.7050669   5.23864425]\n",
      "(3, 224) [87.51074749 16.70526802  5.23852503]\n",
      "(3, 224) [87.50988384 16.70547026  5.23841008]\n",
      "(3, 224) [87.50920111 16.70567226  5.23830603]\n",
      "(3, 224) [87.50833569 16.70587174  5.23819186]\n",
      "(3, 224) [87.50764487 16.70608176  5.23808483]\n",
      "(3, 224) [87.50688631 16.7062753   5.23797891]\n",
      "(3, 224) [87.50617739 16.70648311  5.2378715 ]\n",
      "(3, 224) [87.50531099 16.70668599  5.2377562 ]\n",
      "(3, 224) [87.50453429 16.7068839   5.23764782]\n",
      "(3, 224) [87.50357709 16.70707846  5.23752973]\n",
      "(3, 224) [87.50256201 16.70726133  5.23741182]\n",
      "(3, 224) [87.50155067 16.7074604   5.23728906]\n",
      "(3, 224) [87.50046473 16.70766967  5.23715868]\n",
      "(3, 224) [87.49932064 16.70787739  5.23702527]\n",
      "(3, 224) [87.49821167 16.70808919  5.23689269]\n",
      "(3, 224) [87.4971042  16.70829876  5.23676086]\n",
      "(3, 224) [87.49591224 16.70853588  5.23661532]\n",
      "(3, 224) [87.49484286 16.70878062  5.23647473]\n",
      "(3, 224) [87.4938734  16.70901747  5.23634255]\n",
      "(3, 224) [87.49270294 16.70923522  5.23620436]\n",
      "(3, 224) [87.49163375 16.70944194  5.23607567]\n",
      "(3, 224) [87.49049646 16.70961717  5.23595274]\n",
      "(3, 224) [87.48951631 16.70985098  5.23582095]\n",
      "(3, 224) [87.48836432 16.71008746  5.23567803]\n",
      "(3, 224) [87.48746555 16.71030998  5.23555464]\n",
      "(3, 224) [87.4863449  16.71055069  5.23541235]\n",
      "(3, 224) [87.4853467  16.71076025  5.23528705]\n",
      "(3, 224) [87.48436886 16.71097046  5.23516271]\n",
      "(3, 224) [87.48316491 16.71122296  5.23501164]\n",
      "(3, 224) [87.48185487 16.71143596  5.23486653]\n",
      "(3, 224) [87.48056274 16.7116899   5.23470966]\n",
      "(3, 224) [87.47925706 16.71194135  5.23455274]\n",
      "(3, 224) [87.47803245 16.71221893  5.23439254]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 12%|████████▋                                                                  | 8873/76339 [00:03<00:31, 2132.71it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "(3, 224) [87.47676001 16.71249219  5.23423079]\n",
      "(3, 224) [87.47557865 16.71277439  5.23407171]\n",
      "(3, 224) [87.47437765 16.7130505   5.23391333]\n",
      "(3, 224) [87.47320573 16.71328518  5.23376968]\n",
      "(3, 224) [87.47204235 16.71351309  5.23362869]\n",
      "(3, 224) [87.47087659 16.71372265  5.23349326]\n",
      "(3, 224) [87.46970749 16.7139404   5.23335508]\n",
      "(3, 224) [87.46857139 16.71416269  5.23321745]\n",
      "(3, 224) [87.46764031 16.71438992  5.23309051]\n",
      "(3, 224) [87.46658185 16.71458815  5.23296502]\n",
      "(3, 224) [87.4653459  16.7147806   5.23283072]\n",
      "(3, 224) [87.46422022 16.71497494  5.23270243]\n",
      "(3, 224) [87.46298944 16.71515596  5.23257205]\n",
      "(3, 224) [87.46185266 16.71534531  5.23244468]\n",
      "(3, 224) [87.46068315 16.71556442  5.23230608]\n",
      "(3, 224) [87.45933303 16.71576113  5.23216366]\n",
      "(3, 224) [87.45838402 16.71595007  5.23204768]\n",
      "(3, 224) [87.45738745 16.71614319  5.23192751]\n",
      "(3, 224) [87.45612761 16.71636045  5.23178398]\n",
      "(3, 224) [87.4551223  16.71658922  5.23165214]\n",
      "(3, 224) [87.4540097  16.71678994  5.23152268]\n",
      "(3, 224) [87.45250663 16.71700238  5.2313661 ]\n",
      "(3, 224) [87.45113416 16.71719924  5.23122228]\n",
      "(3, 224) [87.4496498  16.71737296  5.23107898]\n",
      "(3, 224) [87.4483399  16.71756318  5.23094099]\n",
      "(3, 224) [87.4467298  16.7177315   5.23079187]\n",
      "(3, 224) [87.44533392 16.71791793  5.23064988]\n",
      "(3, 224) [87.44393429 16.71811734  5.23050364]\n",
      "(3, 224) [87.44243334 16.71832624  5.23034836]\n",
      "(3, 224) [87.44134474 16.71854439  5.23021485]\n",
      "(3, 224) [87.4402638  16.71873066  5.23009182]\n",
      "(3, 224) [87.43917206 16.7189101   5.22997028]\n",
      "(3, 224) [87.43795112 16.71909068  5.22984064]\n",
      "(3, 224) [87.43694789 16.71927618  5.2297225 ]\n",
      "(3, 224) [87.43595492 16.71949689  5.22959392]\n",
      "(3, 224) [87.43481307 16.71972092  5.22945541]\n",
      "(3, 224) [87.43384552 16.71995021  5.22932563]\n",
      "(3, 224) [87.43289663 16.72021621  5.22918545]\n",
      "(3, 224) [87.43175949 16.72047057  5.22903763]\n",
      "(3, 224) [87.43060484 16.72070852  5.22889392]\n",
      "(3, 224) [87.42938218 16.72097055  5.22873856]\n",
      "(3, 224) [87.42828996 16.72122456  5.22859354]\n",
      "(3, 224) [87.42711197 16.72146899  5.22844642]\n",
      "(3, 224) [87.42583721 16.72169993  5.22829773]\n",
      "(3, 224) [87.42426835 16.72193745  5.22812937]\n",
      "(3, 224) [87.42290615 16.72218984  5.22796874]\n",
      "(3, 224) [87.4214364  16.7224431   5.22780141]\n",
      "(3, 224) [87.4200518  16.72271865  5.22763221]\n",
      "(3, 224) [87.41836868 16.72298887  5.22744687]\n",
      "(3, 224) [87.41690884 16.72325751  5.22727535]\n",
      "(3, 224) [87.41539452 16.723517    5.2271035 ]\n",
      "(3, 224) [87.41397966 16.72376567  5.22694099]\n",
      "(3, 224) [87.41255343 16.72393302  5.22680328]\n",
      "(3, 224) [87.4110822  16.72412508  5.22665508]\n",
      "(3, 224) [87.40957583 16.7243044   5.2265088 ]\n",
      "(3, 224) [87.40826626 16.72448665  5.22637337]\n",
      "(3, 224) [87.40664946 16.72466298  5.22622141]\n",
      "(3, 224) [87.40530526 16.72482794  5.22608933]\n",
      "(3, 224) [87.40380305 16.72499268  5.22594785]\n",
      "(3, 224) [87.40229687 16.72515658  5.22580642]\n",
      "(3, 224) [87.40087963 16.72526297  5.22568835]\n",
      "(3, 224) [87.39928725 16.72539885  5.22555057]\n",
      "(3, 224) [87.39786113 16.72556687  5.22541263]\n",
      "(3, 224) [87.39615703 16.72571105  5.22526552]\n",
      "(3, 224) [87.39456899 16.72585584  5.22512515]\n",
      "(3, 224) [87.39304119 16.72598125  5.22499449]\n",
      "(3, 224) [87.39136614 16.7261262   5.22484889]\n",
      "(3, 224) [87.38980007 16.72628475  5.22470556]\n",
      "(3, 224) [87.3880679  16.7264486   5.22455063]\n",
      "(3, 224) [87.38674617 16.726606    5.2244223 ]\n",
      "(3, 224) [87.38516731 16.72673998  5.22428592]\n",
      "(3, 224) [87.38365449 16.72687456  5.22415329]\n",
      "(3, 224) [87.38215772 16.72702751  5.22401585]\n",
      "(3, 224) [87.3805635  16.72718641  5.22387072]\n",
      "(3, 224) [87.37879292 16.72734287  5.2237158 ]\n",
      "(3, 224) [87.37696635 16.72750416  5.22355602]\n",
      "(3, 224) [87.37524447 16.72764779  5.22340803]\n",
      "(3, 224) [87.37365467 16.72780885  5.22326251]\n",
      "(3, 224) [87.372186   16.72795774  5.22312803]\n",
      "(3, 224) [87.3707007  16.72812382  5.2229872 ]\n",
      "(3, 224) [87.36918296 16.72830085  5.22284096]\n",
      "(3, 224) [87.36750486 16.72845583  5.22269206]\n",
      "(3, 224) [87.36605752 16.72859398  5.22256221]\n",
      "(3, 224) [87.36425184 16.72872456  5.22241326]\n",
      "(3, 224) [87.36244596 16.72885922  5.222263  ]\n",
      "(3, 224) [87.36053496 16.72898698  5.22210862]\n",
      "(3, 224) [87.35875848 16.72912677  5.22195853]\n",
      "(3, 224) [87.35736644 16.72927481  5.22182887]\n",
      "(3, 224) [87.35594924 16.72941805  5.22169922]\n",
      "(3, 224) [87.3544688  16.72955838  5.22156668]\n",
      "(3, 224) [87.35302482 16.72970193  5.22143534]\n",
      "(3, 224) [87.35128115 16.72985819  5.22128208]\n",
      "(3, 224) [87.34959867 16.73000897  5.22113422]\n",
      "(3, 224) [87.34825169 16.73014137  5.2210122 ]\n",
      "(3, 224) [87.34677415 16.73024599  5.22089106]\n",
      "(3, 224) [87.34519207 16.73036413  5.22075941]\n",
      "(3, 224) [87.34368115 16.73045278  5.22064125]\n",
      "(3, 224) [87.34201231 16.73055547  5.22050928]\n",
      "(3, 224) [87.34031644 16.73064936  5.22037843]\n",
      "(3, 224) [87.33863567 16.73074556  5.22024776]\n",
      "(3, 224) [87.33694558 16.73080787  5.22012716]\n",
      "(3, 224) [87.33527103 16.73087991  5.22000444]\n",
      "(3, 224) [87.33349173 16.73091012  5.21988856]\n",
      "(3, 224) [87.33165031 16.73093263  5.21977137]\n",
      "(3, 224) [87.32986074 16.7309448   5.21966052]\n",
      "(3, 224) [87.32827181 16.73094342  5.21956592]\n",
      "(3, 224) [87.32672822 16.73096148  5.21946796]\n",
      "(3, 224) [87.32520105 16.73100302  5.21936366]\n",
      "(3, 224) [87.32355803 16.73105518  5.2192491 ]\n",
      "(3, 224) [87.32168411 16.73110755  5.21912065]\n",
      "(3, 224) [87.31981727 16.73116248  5.21899184]\n",
      "(3, 224) [87.31807228 16.73117771  5.21888275]\n",
      "(3, 224) [87.31626003 16.7312068   5.21876533]\n",
      "(3, 224) [87.31443006 16.73126357  5.21863822]\n",
      "(3, 224) [87.31241229 16.73130771  5.21850383]\n",
      "(3, 224) [87.31057927 16.73128482  5.21840144]\n",
      "(3, 224) [87.30867229 16.73128304  5.21828802]\n",
      "(3, 224) [87.30663167 16.7312832   5.21816601]\n",
      "(3, 224) [87.30454456 16.73128341  5.21804119]\n",
      "(3, 224) [87.30270332 16.7312791   5.2179325 ]\n",
      "(3, 224) [87.30075324 16.7312408   5.21782792]\n",
      "(3, 224) [87.29882468 16.73123352  5.21771494]\n",
      "(3, 224) [87.29699806 16.73122244  5.21760924]\n",
      "(3, 224) [87.29505647 16.73120666  5.21749812]\n",
      "(3, 224) [87.2929877  16.73120005  5.21737655]\n",
      "(3, 224) [87.29109702 16.73120601  5.21726171]\n",
      "(3, 224) [87.28923951 16.73116864  5.21716234]\n",
      "(3, 224) [87.28720542 16.73113391  5.21705159]\n",
      "(3, 224) [87.28545328 16.73110816  5.2169549 ]\n",
      "(3, 224) [87.28362112 16.73109579  5.21684925]\n",
      "(3, 224) [87.28147017 16.73106862  5.21672918]\n",
      "(3, 224) [87.27948009 16.73102898  5.21662262]\n",
      "(3, 224) [87.27755074 16.73099139  5.21651902]\n",
      "(3, 224) [87.27565312 16.73095985  5.21641543]\n",
      "(3, 224) [87.27386364 16.73091244  5.21632325]\n",
      "(3, 224) [87.27189202 16.73087103  5.21621831]\n",
      "(3, 224) [87.27023341 16.73084335  5.2161278 ]\n",
      "(3, 224) [87.26855258 16.73080423  5.21603954]\n",
      "(3, 224) [87.26647717 16.73080158  5.2159163 ]\n",
      "(3, 224) [87.26494422 16.73082071  5.2158187 ]\n",
      "(3, 224) [87.26297427 16.73083586  5.21569621]\n",
      "(3, 224) [87.26118426 16.73084222  5.21558722]\n",
      "(3, 224) [87.25938529 16.73084447  5.21547897]\n",
      "(3, 224) [87.25749802 16.73086408  5.21536002]\n",
      "(3, 224) [87.25545317 16.73088321  5.2152318 ]\n",
      "(3, 224) [87.25355676 16.73088879  5.21511669]\n",
      "(3, 224) [87.25145616 16.73085938  5.21500027]\n",
      "(3, 224) [87.24930784 16.73084179  5.21487732]\n",
      "(3, 224) [87.24714402 16.73081943  5.21475493]\n",
      "(3, 224) [87.24498156 16.73080771  5.21462931]\n",
      "(3, 224) [87.24254689 16.73078806  5.21448989]\n",
      "(3, 224) [87.24044134 16.73076374  5.21437161]\n",
      "(3, 224) [87.23835174 16.73071616  5.21426153]\n",
      "(3, 224) [87.23644073 16.73067055  5.21416152]\n",
      "(3, 224) [87.23433011 16.73061618  5.21405232]\n",
      "(3, 224) [87.23241872 16.73056212  5.21395492]\n",
      "(3, 224) [87.23037294 16.7305074   5.21384969]\n",
      "(3, 224) [87.22812812 16.73045061  5.21373322]\n",
      "(3, 224) [87.22622451 16.7303849   5.21363992]\n",
      "(3, 224) [87.224498   16.73035198  5.21354699]\n",
      "(3, 224) [87.22248267 16.73030342  5.2134417 ]\n",
      "(3, 224) [87.22058117 16.73025436  5.21334337]\n",
      "(3, 224) [87.21852754 16.73018325  5.21324279]\n",
      "(3, 224) [87.21600736 16.73005685  5.21313154]\n",
      "(3, 224) [87.21364376 16.72992529  5.21303125]\n",
      "(3, 224) [87.21145357 16.72981659  5.21293422]\n",
      "(3, 224) [87.20925774 16.72972657  5.21283103]\n",
      "(3, 224) [87.20729924 16.72961971  5.21274725]\n",
      "(3, 224) [87.20527476 16.72950761  5.21266117]\n",
      "(3, 224) [87.2034435  16.72941505  5.21258056]\n",
      "(3, 224) [87.20143502 16.7293225   5.21248933]\n",
      "(3, 224) [87.19973996 16.72924032  5.2124136 ]\n",
      "(3, 224) [87.19802997 16.72916604  5.21233453]\n",
      "(3, 224) [87.19652532 16.72909709  5.21226607]\n",
      "(3, 224) [87.19502067 16.72900902  5.21220357]\n",
      "(3, 224) [87.19338771 16.72892819  5.21213116]\n",
      "(3, 224) [87.19172232 16.72884713  5.21205687]\n",
      "(3, 224) [87.19012257 16.7287739   5.21198407]\n",
      "(3, 224) [87.18842021 16.72871262  5.21190141]\n",
      "(3, 224) [87.18687338 16.72865426  5.21182713]\n",
      "(3, 224) [87.18526931 16.72859639  5.21174928]\n",
      "(3, 224) [87.18371827 16.72857095  5.21166448]\n",
      "(3, 224) [87.18237037 16.72853127  5.21159626]\n",
      "(3, 224) [87.18102989 16.72848985  5.21152902]\n",
      "(3, 224) [87.17976083 16.72844     5.21146868]\n",
      "(3, 224) [87.17852691 16.72839881  5.21140773]\n",
      "(3, 224) [87.17724285 16.72832075  5.21135529]\n",
      "(3, 224) [87.17601175 16.72820406  5.21131808]\n",
      "(3, 224) [87.17493605 16.72805895  5.21129901]\n",
      "(3, 224) [87.1736325  16.72791617  5.21126559]\n",
      "(3, 224) [87.17230823 16.72777287  5.21123109]\n",
      "(3, 224) [87.17111404 16.72763971  5.21120121]\n",
      "(3, 224) [87.16954133 16.72750353  5.21114965]\n",
      "(3, 224) [87.16793861 16.72736877  5.21109585]\n",
      "(3, 224) [87.16657234 16.72724625  5.21105236]\n",
      "(3, 224) [87.16488949 16.72712596  5.21098926]\n",
      "(3, 224) [87.16318314 16.72700232  5.21092579]\n",
      "(3, 224) [87.16151353 16.72688036  5.210864  ]\n",
      "(3, 224) [87.16016038 16.72676094  5.21082033]\n",
      "(3, 224) [87.15855905 16.72662808  5.21076602]\n",
      "(3, 224) [87.15704483 16.72648551  5.21071993]\n",
      "(3, 224) [87.15557452 16.72635196  5.21067365]\n",
      "(3, 224) [87.15427992 16.72621327  5.21063948]\n",
      "(3, 224) [87.15305096 16.72606268  5.21061295]\n",
      "(3, 224) [87.15150214 16.72591491  5.21056642]\n",
      "(3, 224) [87.15010276 16.72577598  5.21052605]\n",
      "(3, 224) [87.14867245 16.72564431  5.21048158]\n",
      "(3, 224) [87.1470951  16.72549998  5.21043226]\n",
      "(3, 224) [87.14552017 16.72535971  5.21038182]\n",
      "(3, 224) [87.14407694 16.72524244  5.2103321 ]\n",
      "(3, 224) [87.14279747 16.72512645  5.21029175]\n",
      "(3, 224) [87.1414677  16.72500981  5.21024861]\n",
      "(3, 224) [87.14024253 16.72493166  5.21019971]\n",
      "(3, 224) [87.13885951 16.72480046  5.21015791]\n",
      "(3, 224) [87.13756414 16.72467875  5.21011838]\n",
      "(3, 224) [87.13620027 16.7245531   5.210076  ]\n",
      "(3, 224) [87.13516861 16.72439405  5.21006387]\n",
      "(3, 224) [87.13405475 16.72427382  5.21003475]\n",
      "(3, 224) [87.13281323 16.72417103  5.20999257]\n",
      "(3, 224) [87.1315932  16.72404806  5.20995793]\n",
      "(3, 224) [87.13042224 16.72396676  5.20991323]\n",
      "(3, 224) [87.12938673 16.7238642   5.20988327]\n",
      "(3, 224) [87.1279173  16.7237425   5.20983333]\n",
      "(3, 224) [87.12675731 16.72361014  5.20980521]\n",
      "(3, 224) [87.12558141 16.72348929  5.20977256]\n",
      "(3, 224) [87.12467521 16.72337218  5.20975488]\n",
      "(3, 224) [87.12343189 16.72325335  5.20971757]\n",
      "(3, 224) [87.12223179 16.72316376  5.20967374]\n",
      "(3, 224) [87.12138124 16.72308066  5.20964878]\n",
      "(3, 224) [87.12034818 16.7230136   5.20960791]\n",
      "(3, 224) [87.11953142 16.72295796  5.20957642]\n",
      "(3, 224) [87.11851422 16.72289376  5.2095356 ]\n",
      "(3, 224) [87.1175105  16.72284372  5.20949119]\n",
      "(3, 224) [87.11646205 16.72281304  5.20943805]\n",
      "(3, 224) [87.11552747 16.72277353  5.20939447]\n",
      "(3, 224) [87.11444278 16.72272927  5.20934339]\n",
      "(3, 224) [87.11352598 16.72270211  5.20929702]\n",
      "(3, 224) [87.11245936 16.72266963  5.20924335]\n",
      "(3, 224) [87.11155963 16.72261938  5.2092052 ]\n",
      "(3, 224) [87.11057576 16.72257813  5.20915923]\n",
      "(3, 224) [87.1095011  16.72254058  5.20910667]\n",
      "(3, 224) [87.10824005 16.72250911  5.20904106]\n",
      "(3, 224) [87.1071018  16.72248905  5.20897924]\n",
      "(3, 224) [87.10596863 16.72243602  5.208928  ]\n",
      "(3, 224) [87.10495377 16.7223912   5.20888127]\n",
      "(3, 224) [87.10425319 16.72235711  5.20885   ]\n",
      "(3, 224) [87.1034351  16.72231182  5.20881519]\n",
      "(3, 224) [87.10238356 16.72227156  5.20876485]\n",
      "(3, 224) [87.10136496 16.72221072  5.20872289]\n",
      "(3, 224) [87.10065006 16.72217932  5.20868992]\n",
      "(3, 224) [87.09952442 16.72213145  5.20863753]\n",
      "(3, 224) [87.09875328 16.72207429  5.20860922]\n",
      "(3, 224) [87.09770655 16.72201981  5.20856361]\n",
      "(3, 224) [87.09654326 16.7219707   5.20850935]\n",
      "(3, 224) [87.09559515 16.72193403  5.20846408]\n",
      "(3, 224) [87.09463995 16.7218984   5.20841807]\n",
      "(3, 224) [87.093676   16.72185631  5.20837354]\n",
      "(3, 224) [87.09271273 16.72180255  5.20833269]\n",
      "(3, 224) [87.09172116 16.72173498  5.20829446]\n",
      "(3, 224) [87.09087397 16.72166386  5.20826597]\n",
      "(3, 224) [87.08986834 16.72160976  5.2082227 ]\n",
      "(3, 224) [87.08886103 16.72155337  5.20818004]\n",
      "(3, 224) [87.08792305 16.72150366  5.20813944]\n",
      "(3, 224) [87.08684566 16.72146427  5.20808728]\n",
      "(3, 224) [87.08577346 16.72141989  5.208037  ]\n",
      "(3, 224) [87.08481403 16.72137087  5.2079949 ]\n",
      "(3, 224) [87.08386276 16.72132383  5.20795267]\n",
      "(3, 224) [87.08310404 16.72127434  5.20792272]\n",
      "(3, 224) [87.08254433 16.72121518  5.20790768]\n",
      "(3, 224) [87.08185219 16.72115511  5.20788501]\n",
      "(3, 224) [87.08133924 16.721093    5.20787368]\n",
      "(3, 224) [87.08086554 16.72100853  5.20787167]\n",
      "(3, 224) [87.08060944 16.72091128  5.20788666]\n",
      "(3, 224) [87.08013083 16.72082348  5.2078854 ]\n",
      "(3, 224) [87.07973129 16.72073397  5.20788938]\n",
      "(3, 224) [87.07917818 16.7206312   5.20788832]\n",
      "(3, 224) [87.07866078 16.72056283  5.20787869]\n",
      "(3, 224) [87.07807171 16.72048511  5.20786769]\n",
      "(3, 224) [87.07770849 16.72041949  5.20786642]\n",
      "(3, 224) [87.07711714 16.72035385  5.20785151]\n",
      "(3, 224) [87.07663447 16.7202856   5.20784391]\n",
      "(3, 224) [87.07600173 16.72022337  5.20782547]\n",
      "(3, 224) [87.075351   16.72016663  5.20780424]\n",
      "(3, 224) [87.07495616 16.72011465  5.20779682]\n",
      "(3, 224) [87.07446006 16.72005894  5.20778452]\n",
      "(3, 224) [87.07380513 16.71998571  5.20776817]\n",
      "(3, 224) [87.07312911 16.71991515  5.20774973]\n",
      "(3, 224) [87.07275566 16.71985055  5.20774753]\n",
      "(3, 224) [87.07202454 16.71977901  5.2077261 ]\n",
      "(3, 224) [87.07127071 16.71970191  5.20770504]\n",
      "(3, 224) [87.07081814 16.71961983  5.20770356]\n",
      "(3, 224) [87.07027862 16.71953071  5.20769907]\n",
      "(3, 224) [87.0698249  16.71943286  5.20770243]\n",
      "(3, 224) [87.06928931 16.71932484  5.20770407]\n",
      "(3, 224) [87.06879655 16.71922849  5.20770463]\n",
      "(3, 224) [87.06809918 16.71914608  5.2076886 ]\n",
      "(3, 224) [87.0673281  16.71905976  5.20766938]\n",
      "(3, 224) [87.06655537 16.71896159  5.20765374]\n",
      "(3, 224) [87.06584825 16.71887416  5.20763869]\n",
      "(3, 224) [87.06525193 16.71875784  5.20763927]\n",
      "(3, 224) [87.06463114 16.71868     5.2076264 ]\n",
      "(3, 224) [87.06405492 16.71857178  5.20762566]\n",
      "(3, 224) [87.06341184 16.71848556  5.20761407]\n",
      "(3, 224) [87.06276698 16.71837087  5.20761125]\n",
      "(3, 224) [87.0619799  16.71826528  5.20759708]\n",
      "(3, 224) [87.0615377  16.71818078  5.20759695]\n",
      "(3, 224) [87.06083359 16.71810837  5.2075774 ]\n",
      "(3, 224) [87.06042365 16.71804878  5.20757146]\n",
      "(3, 224) [87.05988561 16.71798014  5.20756066]\n",
      "(3, 224) [87.05959722 16.71792048  5.20756201]\n",
      "(3, 224) [87.05898402 16.71785704  5.2075451 ]\n",
      "(3, 224) [87.05830545 16.71778122  5.20752814]\n",
      "(3, 224) [87.05750798 16.71769277  5.20750801]\n",
      "(3, 224) [87.05654984 16.71760693  5.20747745]\n",
      "(3, 224) [87.05571799 16.71751065  5.20745769]\n",
      "(3, 224) [87.05502268 16.71740935  5.20744766]\n",
      "(3, 224) [87.05440406 16.71729891  5.20744508]\n",
      "(3, 224) [87.05366419 16.71719641  5.20743278]\n",
      "(3, 224) [87.05311849 16.71711598  5.2074252 ]\n",
      "(3, 224) [87.05240838 16.71705111  5.20740293]\n",
      "(3, 224) [87.05190908 16.71699744  5.20738978]\n",
      "(3, 224) [87.05159882 16.71693035  5.20739213]\n",
      "(3, 224) [87.05125731 16.71687756  5.20738814]\n",
      "(3, 224) [87.05103375 16.71681634  5.20739384]\n",
      "(3, 224) [87.05065763 16.71675155  5.20739153]\n",
      "(3, 224) [87.05044897 16.7166914   5.2073978 ]\n",
      "(3, 224) [87.05024156 16.71662499  5.20740609]\n",
      "(3, 224) [87.05008828 16.71654988  5.20742033]\n",
      "(3, 224) [87.04983875 16.71648558  5.20742544]\n",
      "(3, 224) [87.04968118 16.71642889  5.20743369]\n",
      "(3, 224) [87.04928776 16.71634065  5.20743766]\n",
      "(3, 224) [87.04896593 16.71625058  5.20744648]\n",
      "(3, 224) [87.04865192 16.716165    5.20745436]\n",
      "(3, 224) [87.04859197 16.71607911  5.20747755]\n",
      "(3, 224) [87.04823844 16.71600789  5.20747858]\n",
      "(3, 224) [87.04767746 16.71594174  5.20746563]\n",
      "(3, 224) [87.04738922 16.71585199  5.20747635]\n",
      "(3, 224) [87.04711303 16.71574781  5.20749227]\n",
      "(3, 224) [87.04692416 16.71564239  5.2075138 ]\n",
      "(3, 224) [87.04660329 16.71553926  5.20752673]\n",
      "(3, 224) [87.04627834 16.71543237  5.20754058]\n",
      "(3, 224) [87.04617595 16.71532691  5.20756731]\n",
      "(3, 224) [87.04591808 16.71522934  5.20758228]\n",
      "(3, 224) [87.04549999 16.71512788  5.20758888]\n",
      "(3, 224) [87.04500722 16.71504372  5.20758561]\n",
      "(3, 224) [87.04458514 16.71495095  5.20758925]\n",
      "(3, 224) [87.04428857 16.71487271  5.20759588]\n",
      "(3, 224) [87.04392592 16.71482899  5.2075878 ]\n",
      "(3, 224) [87.0436997  16.71474802  5.20759947]\n",
      "(3, 224) [87.04337036 16.71467005  5.20760405]\n",
      "(3, 224) [87.04298587 16.71463243  5.20759277]\n",
      "(3, 224) [87.0429822  16.71461099  5.20759923]\n",
      "(3, 224) [87.04280341 16.71457274  5.20760045]\n",
      "(3, 224) [87.04263823 16.71452689  5.20760484]\n",
      "(3, 224) [87.04272431 16.71448853  5.20762193]\n",
      "(3, 224) [87.0426131  16.7144548   5.20762577]\n",
      "(3, 224) [87.04250345 16.71444111  5.20762348]\n",
      "(3, 224) [87.04257913 16.71442417  5.20763327]\n",
      "(3, 224) [87.0426464  16.71440881  5.20764208]\n",
      "(3, 224) [87.04258434 16.71437869  5.20764775]\n",
      "(3, 224) [87.04236747 16.71435181  5.20764315]\n",
      "(3, 224) [87.04230076 16.71431967  5.20764917]\n",
      "(3, 224) [87.04222528 16.71427432  5.20765877]\n",
      "(3, 224) [87.04197213 16.71421118  5.2076633 ]\n",
      "(3, 224) [87.04194476 16.71415777  5.20767829]\n",
      "(3, 224) [87.04193113 16.71410285  5.20769458]\n",
      "(3, 224) [87.04173825 16.71406134  5.20769596]\n",
      "(3, 224) [87.04149425 16.71401241  5.20769661]\n",
      "(3, 224) [87.04170713 16.71396854  5.20772299]\n",
      "(3, 224) [87.04173517 16.71392325  5.20773876]\n",
      "(3, 224) [87.04210669 16.71390805  5.20776571]\n",
      "(3, 224) [87.04247619 16.71387149  5.20779919]\n",
      "(3, 224) [87.04270689 16.71386146  5.2078161 ]\n",
      "(3, 224) [87.04297414 16.71384291  5.20783786]\n",
      "(3, 224) [87.04344935 16.71384512  5.20786558]\n",
      "(3, 224) [87.04355721 16.71384801  5.20787113]\n",
      "(3, 224) [87.04378994 16.71385631  5.20788247]\n",
      "(3, 224) [87.04383856 16.7138556   5.20788559]\n",
      "(3, 224) [87.04394134 16.71384438  5.20789523]\n",
      "(3, 224) [87.04416794 16.71383181  5.20791269]\n",
      "(3, 224) [87.04443038 16.71382073  5.20793184]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 12%|█████████                                                                  | 9191/76339 [00:04<00:28, 2356.63it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.04487236 16.71380644  5.20796272]\n",
      "(3, 224) [87.04506982 16.71378833  5.20798017]\n",
      "(3, 224) [87.04505492 16.71375158  5.20799072]\n",
      "(3, 224) [87.04528014 16.71372376  5.20801284]\n",
      "(3, 224) [87.04561588 16.71368962  5.20804354]\n",
      "(3, 224) [87.04601431 16.71368072  5.20807013]\n",
      "(3, 224) [87.04661408 16.71373381  5.20808948]\n",
      "(3, 224) [87.04710752 16.71378258  5.20810381]\n",
      "(3, 224) [87.0476317  16.71381576  5.20812483]\n",
      "(3, 224) [87.04793087 16.71382127  5.20814101]\n",
      "(3, 224) [87.04835237 16.71385384  5.20815607]\n",
      "(3, 224) [87.04850184 16.7139029   5.20814974]\n",
      "(3, 224) [87.04861169 16.71393001  5.20814787]\n",
      "(3, 224) [87.04872287 16.71395677  5.20814619]\n",
      "(3, 224) [87.04878922 16.71398628  5.20814098]\n",
      "(3, 224) [87.04860499 16.71400647  5.20812368]\n",
      "(3, 224) [87.04809822 16.71405438  5.20807847]\n",
      "(3, 224) [87.04775721 16.71411085  5.20804052]\n",
      "(3, 224) [87.04739363 16.71417378  5.20799921]\n",
      "(3, 224) [87.04725379 16.71425221  5.20796646]\n",
      "(3, 224) [87.04726073 16.71432704  5.20794358]\n",
      "(3, 224) [87.047386   16.71440252  5.2079276 ]\n",
      "(3, 224) [87.04732199 16.71446559  5.20790415]\n",
      "(3, 224) [87.04745705 16.71456516  5.20788126]\n",
      "(3, 224) [87.04747764 16.71464812  5.2078567 ]\n",
      "(3, 224) [87.04748188 16.71476384  5.20782095]\n",
      "(3, 224) [87.04755132 16.7148819   5.20778839]\n",
      "(3, 224) [87.04766587 16.7150026   5.20775769]\n",
      "(3, 224) [87.04773479 16.71511335  5.20772736]\n",
      "(3, 224) [87.04797347 16.71525353  5.207698  ]\n",
      "(3, 224) [87.04801249 16.71541694  5.20764945]\n",
      "(3, 224) [87.04785588 16.71557815  5.2075899 ]\n",
      "(3, 224) [87.0478909  16.71573788  5.20754229]\n",
      "(3, 224) [87.04786714 16.71586965  5.20749987]\n",
      "(3, 224) [87.04764015 16.71602532  5.20743789]\n",
      "(3, 224) [87.04770645 16.71617985  5.20739378]\n",
      "(3, 224) [87.04794547 16.7163352   5.20735974]\n",
      "(3, 224) [87.04796078 16.71647995  5.20731563]\n",
      "(3, 224) [87.04815591 16.71661919  5.207284  ]\n",
      "(3, 224) [87.04848232 16.71676206  5.20725908]\n",
      "(3, 224) [87.04871156 16.71688687  5.20723397]\n",
      "(3, 224) [87.04873952 16.71701187  5.20719675]\n",
      "(3, 224) [87.04892091 16.71715435  5.20716327]\n",
      "(3, 224) [87.04929143 16.7172978   5.20714079]\n",
      "(3, 224) [87.04968632 16.71743936  5.20712035]\n",
      "(3, 224) [87.05004067 16.71757302  5.20709992]\n",
      "(3, 224) [87.0502971  16.71768731  5.20707966]\n",
      "(3, 224) [87.05075911 16.7178052   5.20707059]\n",
      "(3, 224) [87.05106495 16.71791767  5.20705387]\n",
      "(3, 224) [87.05162621 16.71804503  5.20704778]\n",
      "(3, 224) [87.05209603 16.71816388  5.20703888]\n",
      "(3, 224) [87.05251221 16.71828981  5.20702457]\n",
      "(3, 224) [87.05272216 16.71840483  5.20700133]\n",
      "(3, 224) [87.05298145 16.71852214  5.20698031]\n",
      "(3, 224) [87.05327982 16.71865354  5.20695725]\n",
      "(3, 224) [87.053543   16.71877699  5.20693456]\n",
      "(3, 224) [87.05381405 16.71891279  5.20690853]\n",
      "(3, 224) [87.05432776 16.71903826  5.20690019]\n",
      "(3, 224) [87.05476256 16.71916768  5.20688591]\n",
      "(3, 224) [87.05481735 16.71930255  5.20684721]\n",
      "(3, 224) [87.05492021 16.71943827  5.20681112]\n",
      "(3, 224) [87.05503999 16.71957187  5.2067767 ]\n",
      "(3, 224) [87.05562382 16.71970843  5.20676912]\n",
      "(3, 224) [87.05619664 16.71984287  5.20676153]\n",
      "(3, 224) [87.05661611 16.71997716  5.20674481]\n",
      "(3, 224) [87.05730801 16.72013569  5.20673685]\n",
      "(3, 224) [87.05770798 16.72028725  5.2067136 ]\n",
      "(3, 224) [87.05798363 16.72042148  5.2066883 ]\n",
      "(3, 224) [87.05834494 16.72055773  5.20666748]\n",
      "(3, 224) [87.05859296 16.72068128  5.20664386]\n",
      "(3, 224) [87.05897964 16.72079313  5.20663217]\n",
      "(3, 224) [87.05923481 16.72090546  5.20661245]\n",
      "(3, 224) [87.05947902 16.72101149  5.20659404]\n",
      "(3, 224) [87.0595006  16.72108497  5.20657246]\n",
      "(3, 224) [87.05974775 16.72118741  5.20655535]\n",
      "(3, 224) [87.05979281 16.72127559  5.2065306 ]\n",
      "(3, 224) [87.06001408 16.72138265  5.20651051]\n",
      "(3, 224) [87.06030979 16.7215082   5.20648912]\n",
      "(3, 224) [87.06063788 16.7216304   5.20647071]\n",
      "(3, 224) [87.06100453 16.72174028  5.20645844]\n",
      "(3, 224) [87.06146687 16.72185718  5.20644971]\n",
      "(3, 224) [87.06211113 16.72196467  5.20645477]\n",
      "(3, 224) [87.06278836 16.72207012  5.20646244]\n",
      "(3, 224) [87.06323675 16.72218013  5.206455  ]\n",
      "(3, 224) [87.06406651 16.72228433  5.20647217]\n",
      "(3, 224) [87.06506369 16.72239198  5.20649827]\n",
      "(3, 224) [87.06580462 16.72251029  5.20650574]\n",
      "(3, 224) [87.06664723 16.72263796  5.20651638]\n",
      "(3, 224) [87.06688695 16.72269598  5.20651264]\n",
      "(3, 224) [87.0673866  16.72279791  5.20651078]\n",
      "(3, 224) [87.06800411 16.7229027   5.20651507]\n",
      "(3, 224) [87.06858149 16.72300042  5.20651916]\n",
      "(3, 224) [87.06903763 16.72309043  5.2065184 ]\n",
      "(3, 224) [87.06973276 16.72319523  5.20652733]\n",
      "(3, 224) [87.07039914 16.72329386  5.20653645]\n",
      "(3, 224) [87.07123751 16.72337412  5.20656158]\n",
      "(3, 224) [87.07179741 16.72344579  5.20657274]\n",
      "(3, 224) [87.07218692 16.72353375  5.20656865]\n",
      "(3, 224) [87.07253439 16.72361483  5.20656418]\n",
      "(3, 224) [87.07304778 16.72370923  5.20656549]\n",
      "(3, 224) [87.07327062 16.72379393  5.20655244]\n",
      "(3, 224) [87.07355465 16.7238844   5.20654124]\n",
      "(3, 224) [87.07387175 16.72397764  5.20653117]\n",
      "(3, 224) [87.07423293 16.72407695  5.20652184]\n",
      "(3, 224) [87.07472354 16.72416942  5.20652238]\n",
      "(3, 224) [87.07517906 16.72426236  5.20652068]\n",
      "(3, 224) [87.07569232 16.72435923  5.20652122]\n",
      "(3, 224) [87.07609591 16.72446373  5.20651283]\n",
      "(3, 224) [87.07643146 16.72457131  5.20649941]\n",
      "(3, 224) [87.07710247 16.72466796  5.20650944]\n",
      "(3, 224) [87.07750318 16.72475759  5.20650548]\n",
      "(3, 224) [87.078057   16.72487417  5.20650229]\n",
      "(3, 224) [87.07871382 16.72498241  5.20650785]\n",
      "(3, 224) [87.07910894 16.72507628  5.20650224]\n",
      "(3, 224) [87.07931159 16.72517625  5.20648322]\n",
      "(3, 224) [87.0794826  16.72527492  5.20646272]\n",
      "(3, 224) [87.07963746 16.72537288  5.20644147]\n",
      "(3, 224) [87.08009176 16.7254721   5.20643773]\n",
      "(3, 224) [87.08039933 16.72559336  5.20641837]\n",
      "(3, 224) [87.08068439 16.72570372  5.20640105]\n",
      "(3, 224) [87.08101556 16.72583123  5.20638113]\n",
      "(3, 224) [87.08119435 16.72594626  5.206356  ]\n",
      "(3, 224) [87.0815074  16.72606797  5.20633681]\n",
      "(3, 224) [87.08192214 16.72617814  5.2063273 ]\n",
      "(3, 224) [87.08240245 16.72630205  5.20631742]\n",
      "(3, 224) [87.08289412 16.72641978  5.20631015]\n",
      "(3, 224) [87.08328459 16.72653122  5.20629879]\n",
      "(3, 224) [87.08360998 16.7266415   5.2062839 ]\n",
      "(3, 224) [87.08423992 16.72676485  5.20628315]\n",
      "(3, 224) [87.0848162  16.7269024   5.20627477]\n",
      "(3, 224) [87.08531249 16.72703951  5.20626173]\n",
      "(3, 224) [87.08605028 16.72718592  5.20626024]\n",
      "(3, 224) [87.08670703 16.72733355  5.20625354]\n",
      "(3, 224) [87.08739541 16.72749199  5.20624533]\n",
      "(3, 224) [87.08809402 16.72766375  5.2062336 ]\n",
      "(3, 224) [87.08868364 16.72782951  5.20621722]\n",
      "(3, 224) [87.08899416 16.72800925  5.20617981]\n",
      "(3, 224) [87.08942815 16.7281822   5.2061519 ]\n",
      "(3, 224) [87.08994808 16.72833228  5.20613626]\n",
      "(3, 224) [87.09052663 16.72848224  5.20612416]\n",
      "(3, 224) [87.09099058 16.72863711  5.2061037 ]\n",
      "(3, 224) [87.09144314 16.72878263  5.20608547]\n",
      "(3, 224) [87.09183193 16.72895169  5.20605608]\n",
      "(3, 224) [87.09204191 16.72908044  5.20602855]\n",
      "(3, 224) [87.09229981 16.72923391  5.20599618]\n",
      "(3, 224) [87.09247964 16.72937657  5.20596252]\n",
      "(3, 224) [87.09284885 16.72953764  5.20593443]\n",
      "(3, 224) [87.09303624 16.72967639  5.20590244]\n",
      "(3, 224) [87.09342149 16.7298185   5.20588124]\n",
      "(3, 224) [87.09363619 16.72995355  5.20585204]\n",
      "(3, 224) [87.09406475 16.73005382  5.20584643]\n",
      "(3, 224) [87.09445834 16.73014738  5.20584082]\n",
      "(3, 224) [87.09483784 16.7302454   5.20583297]\n",
      "(3, 224) [87.09538628 16.73031972  5.20584262]\n",
      "(3, 224) [87.09565465 16.7304054   5.20583197]\n",
      "(3, 224) [87.09601555 16.73051058  5.20582079]\n",
      "(3, 224) [87.09650175 16.73062007  5.20581577]\n",
      "(3, 224) [87.09682242 16.73074016  5.20579755]\n",
      "(3, 224) [87.09714923 16.73086144  5.20577933]\n",
      "(3, 224) [87.09728215 16.73097594  5.20575161]\n",
      "(3, 224) [87.09740467 16.73108725  5.20572426]\n",
      "(3, 224) [87.09759898 16.73120879  5.20569803]\n",
      "(3, 224) [87.0979764  16.73131121  5.20568872]\n",
      "(3, 224) [87.09837299 16.7314161   5.20567977]\n",
      "(3, 224) [87.09872106 16.73152602  5.20566635]\n",
      "(3, 224) [87.09893804 16.73163109  5.20564662]\n",
      "(3, 224) [87.09904312 16.73174397  5.20561775]\n",
      "(3, 224) [87.09928633 16.73185108  5.20559894]\n",
      "(3, 224) [87.09937023 16.73195451  5.20557174]\n",
      "(3, 224) [87.09964238 16.73207076  5.2055518 ]\n",
      "(3, 224) [87.09977719 16.7321809   5.20552554]\n",
      "(3, 224) [87.10019773 16.73227243  5.20552218]\n",
      "(3, 224) [87.10037678 16.73236716  5.20550336]\n",
      "(3, 224) [87.10066613 16.73246755  5.20548939]\n",
      "(3, 224) [87.10077447 16.73257317  5.20546297]\n",
      "(3, 224) [87.10103013 16.73267541  5.20544641]\n",
      "(3, 224) [87.10112651 16.73278053  5.20541942]\n",
      "(3, 224) [87.10154467 16.73287581  5.20541476]\n",
      "(3, 224) [87.10198682 16.73296376  5.20541382]\n",
      "(3, 224) [87.10223291 16.73305409  5.2054004 ]\n",
      "(3, 224) [87.10230044 16.73314778  5.20537527]\n",
      "(3, 224) [87.10245621 16.73324642  5.20535387]\n",
      "(3, 224) [87.10261227 16.73334389  5.20533286]\n",
      "(3, 224) [87.10279323 16.73344853  5.20531109]\n",
      "(3, 224) [87.10268286 16.73354684  5.20527388]\n",
      "(3, 224) [87.1025796  16.7336495   5.20523573]\n",
      "(3, 224) [87.10264657 16.73374781  5.20520914]\n",
      "(3, 224) [87.10280725 16.73383786  5.20519072]\n",
      "(3, 224) [87.10298669 16.73393031  5.20517268]\n",
      "(3, 224) [87.10296381 16.73399349  5.20515164]\n",
      "(3, 224) [87.10325447 16.7340416   5.20515405]\n",
      "(3, 224) [87.10356092 16.73412201  5.20514735]\n",
      "(3, 224) [87.10357708 16.73418851  5.20512762]\n",
      "(3, 224) [87.10368416 16.73425276  5.20511403]\n",
      "(3, 224) [87.10355699 16.73429236  5.2050941 ]\n",
      "(3, 224) [87.10331423 16.73433246  5.20506711]\n",
      "(3, 224) [87.10324993 16.73438947  5.20504553]\n",
      "(3, 224) [87.10306235 16.73443659  5.20501965]\n",
      "(3, 224) [87.1030072  16.73448999  5.20499975]\n",
      "(3, 224) [87.10307491 16.73458201  5.20497519]\n",
      "(3, 224) [87.10279716 16.73467939  5.20492833]\n",
      "(3, 224) [87.10247569 16.73479225  5.20487402]\n",
      "(3, 224) [87.10263794 16.73495027  5.20483459]\n",
      "(3, 224) [87.10305078 16.73510373  5.20481154]\n",
      "(3, 224) [87.10329957 16.735285    5.20477006]\n",
      "(3, 224) [87.1042934  16.73551882  5.20475673]\n",
      "(3, 224) [87.10503536 16.73575882  5.20472644]\n",
      "(3, 224) [87.10591428 16.73600469  5.20470249]\n",
      "(3, 224) [87.10666389 16.73626533  5.20466624]\n",
      "(3, 224) [87.10760797 16.73659749  5.20461948]\n",
      "(3, 224) [87.10880422 16.73694862  5.20458186]\n",
      "(3, 224) [87.10991268 16.73733459  5.2045282 ]\n",
      "(3, 224) [87.11111176 16.73774317  5.20447299]\n",
      "(3, 224) [87.11220293 16.73806296  5.20443878]\n",
      "(3, 224) [87.11293326 16.73839001  5.20438083]\n",
      "(3, 224) [87.1141555  16.73872581  5.20434953]\n",
      "(3, 224) [87.11506248 16.73906902  5.20429713]\n",
      "(3, 224) [87.11582221 16.73937196  5.20424845]\n",
      "(3, 224) [87.11661738 16.73965478  5.20420814]\n",
      "(3, 224) [87.11730308 16.73991413  5.20416857]\n",
      "(3, 224) [87.11771029 16.74017367  5.20411235]\n",
      "(3, 224) [87.11841668 16.74045852  5.2040661 ]\n",
      "(3, 224) [87.11878774 16.74074921  5.20399801]\n",
      "(3, 224) [87.11931861 16.74104976  5.20393643]\n",
      "(3, 224) [87.11974137 16.74134855  5.2038689 ]\n",
      "(3, 224) [87.12014585 16.74165036  5.20379933]\n",
      "(3, 224) [87.12070584 16.74194537  5.20374115]\n",
      "(3, 224) [87.12097709 16.74224289  5.20366501]\n",
      "(3, 224) [87.12120907 16.74252612  5.20359094]\n",
      "(3, 224) [87.121805   16.74280394  5.20354025]\n",
      "(3, 224) [87.12227632 16.74304597  5.20349325]\n",
      "(3, 224) [87.12277521 16.74330522  5.20344254]\n",
      "(3, 224) [87.12331124 16.7435675   5.20339312]\n",
      "(3, 224) [87.12402617 16.74384558  5.20334948]\n",
      "(3, 224) [87.12432056 16.74414476  5.20327423]\n",
      "(3, 224) [87.12502442 16.74447969  5.20321236]\n",
      "(3, 224) [87.12579388 16.74484121  5.20314618]\n",
      "(3, 224) [87.12658989 16.74519483  5.20308407]\n",
      "(3, 224) [87.12743108 16.74559153  5.20301131]\n",
      "(3, 224) [87.12856127 16.74598196  5.20295775]\n",
      "(3, 224) [87.12997761 16.74636102  5.20292483]\n",
      "(3, 224) [87.13116466 16.74673623  5.20287943]\n",
      "(3, 224) [87.13232037 16.74713295  5.20282556]\n",
      "(3, 224) [87.13332815 16.7474965   5.20277309]\n",
      "(3, 224) [87.13407262 16.74786159  5.20270441]\n",
      "(3, 224) [87.13500687 16.74819127  5.20265798]\n",
      "(3, 224) [87.13600311 16.74852245  5.20261475]\n",
      "(3, 224) [87.13697601 16.74882096  5.20258029]\n",
      "(3, 224) [87.13787005 16.74913888  5.20253514]\n",
      "(3, 224) [87.1386042  16.74946426  5.20247818]\n",
      "(3, 224) [87.13953811 16.74981851  5.2024242 ]\n",
      "(3, 224) [87.140176   16.75018291  5.20234947]\n",
      "(3, 224) [87.14089918 16.75057654  5.20227081]\n",
      "(3, 224) [87.14142743 16.75095962  5.20218377]\n",
      "(3, 224) [87.14211719 16.75136975  5.202098  ]\n",
      "(3, 224) [87.14281586 16.75177943  5.20201295]\n",
      "(3, 224) [87.14387802 16.75216988  5.20195543]\n",
      "(3, 224) [87.14500157 16.75257161  5.20189809]\n",
      "(3, 224) [87.14612023 16.75296179  5.20184409]\n",
      "(3, 224) [87.1471903  16.7533697   5.20178169]\n",
      "(3, 224) [87.14794912 16.75375916  5.20170644]\n",
      "(3, 224) [87.14895995 16.7541715   5.20163916]\n",
      "(3, 224) [87.15009576 16.75456171  5.20158612]\n",
      "(3, 224) [87.15070816 16.75498695  5.20149119]\n",
      "(3, 224) [87.15143439 16.75541038  5.20140356]\n",
      "(3, 224) [87.15225384 16.75582561  5.20132398]\n",
      "(3, 224) [87.15295598 16.75621578  5.20124515]\n",
      "(3, 224) [87.15373292 16.75659333  5.2011746 ]\n",
      "(3, 224) [87.15451994 16.75696666  5.20110595]\n",
      "(3, 224) [87.15528415 16.75738264  5.20102273]\n",
      "(3, 224) [87.15603057 16.7579145   5.20090277]\n",
      "(3, 224) [87.15679713 16.75843576  5.20078728]\n",
      "(3, 224) [87.15789256 16.75896161  5.20068993]\n",
      "(3, 224) [87.15855416 16.75946908  5.20057244]\n",
      "(3, 224) [87.15919422 16.75999267  5.20044873]\n",
      "(3, 224) [87.1601257  16.7605059   5.20034556]\n",
      "(3, 224) [87.16097294 16.76099602  5.20024449]\n",
      "(3, 224) [87.16210618 16.76149132  5.20015877]\n",
      "(3, 224) [87.16296616 16.76201632  5.20004774]\n",
      "(3, 224) [87.16382516 16.76254419  5.19993576]\n",
      "(3, 224) [87.16479431 16.76306697  5.199832  ]\n",
      "(3, 224) [87.16571611 16.76360573  5.1997204 ]\n",
      "(3, 224) [87.16656243 16.76415722  5.19960041]\n",
      "(3, 224) [87.1678356  16.76477963  5.19948405]\n",
      "(3, 224) [87.16904414 16.76546488  5.19934461]\n",
      "(3, 224) [87.16982776 16.76612857  5.1991866 ]\n",
      "(3, 224) [87.17054112 16.7668318   5.19901227]\n",
      "(3, 224) [87.17133429 16.76759368  5.19882474]\n",
      "(3, 224) [87.17224205 16.76833782  5.19864941]\n",
      "(3, 224) [87.173107   16.76909348  5.19846806]\n",
      "(3, 224) [87.17411618 16.76987312  5.19828798]\n",
      "(3, 224) [87.17509916 16.77064972  5.19810724]\n",
      "(3, 224) [87.17575264 16.77139604  5.19791615]\n",
      "(3, 224) [87.17694723 16.77213918  5.19775811]\n",
      "(3, 224) [87.17779483 16.7729258   5.19756618]\n",
      "(3, 224) [87.1786542  16.77371276  5.19737482]\n",
      "(3, 224) [87.17947952 16.77450962  5.19717841]\n",
      "(3, 224) [87.18076087 16.77533436  5.19700043]\n",
      "(3, 224) [87.18191509 16.77610218  5.19683241]\n",
      "(3, 224) [87.18296189 16.77684637  5.19666523]\n",
      "(3, 224) [87.18412948 16.77755176  5.19651714]\n",
      "(3, 224) [87.18535275 16.77832079  5.19635291]\n",
      "(3, 224) [87.18618569 16.77910137  5.19616206]\n",
      "(3, 224) [87.18702144 16.779859    5.19597835]\n",
      "(3, 224) [87.18802827 16.78058986  5.19581296]\n",
      "(3, 224) [87.18853948 16.7813163   5.19561946]\n",
      "(3, 224) [87.1889968  16.78204971  5.19542064]\n",
      "(3, 224) [87.18975429 16.78280055  5.19523431]\n",
      "(3, 224) [87.19002791 16.78357402  5.19501229]\n",
      "(3, 224) [87.19021125 16.78433124  5.19478991]\n",
      "(3, 224) [87.19070858 16.7851008   5.19458242]\n",
      "(3, 224) [87.19092669 16.78585649  5.19436264]\n",
      "(3, 224) [87.19165848 16.78667541  5.19415372]\n",
      "(3, 224) [87.19236499 16.7874422   5.19395939]\n",
      "(3, 224) [87.19278186 16.78819541  5.19375203]\n",
      "(3, 224) [87.19333755 16.78895977  5.1935494 ]\n",
      "(3, 224) [87.19377313 16.78970576  5.19334528]\n",
      "(3, 224) [87.19426612 16.79045493  5.1931436 ]\n",
      "(3, 224) [87.19455115 16.79120933  5.19292791]\n",
      "(3, 224) [87.19476642 16.79196352  5.19270816]\n",
      "(3, 224) [87.19522296 16.7927078   5.19250579]\n",
      "(3, 224) [87.1959908  16.7934226   5.19233101]\n",
      "(3, 224) [87.19677386 16.79413762  5.19215704]\n",
      "(3, 224) [87.19738138 16.79483551  5.19197788]\n",
      "(3, 224) [87.19807933 16.79557041  5.19179275]\n",
      "(3, 224) [87.19873203 16.79630869  5.1916039 ]\n",
      "(3, 224) [87.19951303 16.79703708  5.19142567]\n",
      "(3, 224) [87.20019946 16.79775737  5.19124433]\n",
      "(3, 224) [87.20089565 16.79846113  5.19106861]\n",
      "(3, 224) [87.20166641 16.79915731  5.19089963]\n",
      "(3, 224) [87.2025941  16.79986058  5.19073786]\n",
      "(3, 224) [87.20364371 16.80055371  5.19058651]\n",
      "(3, 224) [87.20448102 16.80122612  5.19042888]\n",
      "(3, 224) [87.20515489 16.80192795  5.19025243]\n",
      "(3, 224) [87.20582945 16.80262664  5.19007693]\n",
      "(3, 224) [87.20634371 16.80329796  5.18990033]\n",
      "(3, 224) [87.20694764 16.80399146  5.18972224]\n",
      "(3, 224) [87.20776792 16.80469956  5.18955252]\n",
      "(3, 224) [87.208817   16.80541667  5.18939365]\n",
      "(3, 224) [87.20986616 16.80613242  5.18923516]\n",
      "(3, 224) [87.21113447 16.80682953  5.18909539]\n",
      "(3, 224) [87.21212611 16.80751726  5.18894204]\n",
      "(3, 224) [87.21329091 16.80819631  5.18880173]\n",
      "(3, 224) [87.21432026 16.80884527  5.1886626 ]\n",
      "(3, 224) [87.21503504 16.80949366  5.18850497]\n",
      "(3, 224) [87.21591462 16.81013073  5.1883606 ]\n",
      "(3, 224) [87.21675491 16.81075644  5.18821738]\n",
      "(3, 224) [87.21765511 16.81137254  5.18808058]\n",
      "(3, 224) [87.21820256 16.81196735  5.18792944]\n",
      "(3, 224) [87.21869692 16.81256835  5.18777325]\n",
      "(3, 224) [87.21929883 16.81318892  5.18761743]\n",
      "(3, 224) [87.21994475 16.81381064  5.18746385]\n",
      "(3, 224) [87.22060579 16.81442611  5.18731308]\n",
      "(3, 224) [87.22125083 16.81505281  5.18715796]\n",
      "(3, 224) [87.22165611 16.81566522  5.18699299]\n",
      "(3, 224) [87.22204332 16.81626734  5.18683009]\n",
      "(3, 224) [87.2226887  16.81687206  5.18668171]\n",
      "(3, 224) [87.22298545 16.81745919  5.18651803]\n",
      "(3, 224) [87.22319992 16.81805389  5.18634722]\n",
      "(3, 224) [87.22361753 16.81865016  5.18618798]\n",
      "(3, 224) [87.22440986 16.81923655  5.18605407]\n",
      "(3, 224) [87.225059   16.81982681  5.18591048]\n",
      "(3, 224) [87.22574064 16.82042386  5.18576671]\n",
      "(3, 224) [87.22644456 16.82102937  5.18562163]\n",
      "(3, 224) [87.22758705 16.82163125  5.18550376]\n",
      "(3, 224) [87.22870778 16.82223553  5.18538385]\n",
      "(3, 224) [87.22983834 16.82285012  5.18526135]\n",
      "(3, 224) [87.23089727 16.82345431  5.18513778]\n",
      "(3, 224) [87.23193668 16.82405478  5.18501421]\n",
      "(3, 224) [87.23301548 16.82465438  5.18489325]\n",
      "(3, 224) [87.23390549 16.82524219  5.18476467]\n",
      "(3, 224) [87.2351407  16.82585391  5.18464929]\n",
      "(3, 224) [87.23608096 16.82644233  5.18452352]\n",
      "(3, 224) [87.23733255 16.8270304   5.18441637]\n",
      "(3, 224) [87.23800131 16.82764481  5.18426627]\n",
      "(3, 224) [87.23893372 16.82824747  5.18413541]\n",
      "(3, 224) [87.23971585 16.82888309  5.18398549]\n",
      "(3, 224) [87.24041557 16.82950967  5.1838334 ]\n",
      "(3, 224) [87.24129987 16.83011755  5.18369809]\n",
      "(3, 224) [87.24225018 16.83072012  5.18356836]\n",
      "(3, 224) [87.24312259 16.83128706  5.183445  ]\n",
      "(3, 224) [87.24412772 16.83187758  5.18332234]\n",
      "(3, 224) [87.24517339 16.83247595  5.18319968]\n",
      "(3, 224) [87.24619999 16.83307854  5.18307459]\n",
      "(3, 224) [87.2471374  16.83369919  5.18293866]\n",
      "(3, 224) [87.24838686 16.83430273  5.18282654]\n",
      "(3, 224) [87.24954437 16.83490288  5.18270996]\n",
      "(3, 224) [87.25054319 16.83550305  5.1825839 ]\n",
      "(3, 224) [87.25142375 16.83609813  5.18245243]\n",
      "(3, 224) [87.25256577 16.83668092  5.18234031]\n",
      "(3, 224) [87.25364887 16.83725476  5.18222745]\n",
      "(3, 224) [87.25468088 16.83782223  5.18211348]\n",
      "(3, 224) [87.25572183 16.83839495  5.18199843]\n",
      "(3, 224) [87.25658653 16.83895515  5.18187671]\n",
      "(3, 224) [87.25749367 16.83953627  5.18175106]\n",
      "(3, 224) [87.25819567 16.84010577  5.18161669]\n",
      "(3, 224) [87.25890238 16.84067332  5.18148324]\n",
      "(3, 224) [87.25992808 16.84125462  5.18136451]\n",
      "(3, 224) [87.26081454 16.84182602  5.18124068]\n",
      "(3, 224) [87.26154209 16.84240527  5.18110494]\n",
      "(3, 224) [87.26229515 16.84298644  5.18097014]\n",
      "(3, 224) [87.26300527 16.84355996  5.18083514]\n",
      "(3, 224) [87.26388195 16.84412814  5.18071168]\n",
      "(3, 224) [87.26475817 16.84469682  5.18058804]\n",
      "(3, 224) [87.26580969 16.84526154  5.18047612]\n",
      "(3, 224) [87.26679841 16.84584229  5.18035554]\n",
      "(3, 224) [87.2678725  16.8464194   5.18024112]\n",
      "(3, 224) [87.2688376  16.84699239  5.1801215 ]\n",
      "(3, 224) [87.26997881 16.84757462  5.18000951]\n",
      "(3, 224) [87.27114961 16.84814633  5.17990256]\n",
      "(3, 224) [87.27231787 16.84872302  5.17979392]\n",
      "(3, 224) [87.27350393 16.84930133  5.17968584]\n",
      "(3, 224) [87.27468004 16.84987952  5.1795772 ]\n",
      "(3, 224) [87.27594236 16.85047188  5.17946931]\n",
      "(3, 224) [87.27716336 16.85105477  5.17936182]\n",
      "(3, 224) [87.27830273 16.85161388  5.1792568 ]\n",
      "(3, 224) [87.27993023 16.85219894  5.17917283]\n",
      "(3, 224) [87.28114177 16.85276475  5.17907006]\n",
      "(3, 224) [87.28266353 16.85334732  5.17898053]\n",
      "(3, 224) [87.28417501 16.85394335  5.17888631]\n",
      "(3, 224) [87.28577897 16.85452331  5.17880254]\n",
      "(3, 224) [87.28718354 16.85509454  5.17870962]\n",
      "(3, 224) [87.28863365 16.85567414  5.17861687]\n",
      "(3, 224) [87.28984371 16.85619332  5.17852856]\n",
      "(3, 224) [87.29124827 16.8567182   5.17845011]\n",
      "(3, 224) [87.29269022 16.85727347  5.17836452]\n",
      "(3, 224) [87.29369054 16.8577962   5.17826274]\n",
      "(3, 224) [87.29461122 16.85828561  5.1781664 ]\n",
      "(3, 224) [87.29565352 16.85877573  5.17807714]\n",
      "(3, 224) [87.29595439 16.85923878  5.17795218]\n",
      "(3, 224) [87.29627115 16.85969583  5.17783007]\n",
      "(3, 224) [87.29644559 16.86014901  5.17770067]\n",
      "(3, 224) [87.29663331 16.86060014  5.17757275]\n",
      "(3, 224) [87.29674094 16.86097876  5.17746257]\n",
      "(3, 224) [87.29671383 16.86132631  5.17735391]\n",
      "(3, 224) [87.29663486 16.86164272  5.1772518 ]\n",
      "(3, 224) [87.29665449 16.8619412   5.17716111]\n",
      "(3, 224) [87.29674093 16.86232211  5.17704884]\n",
      "(3, 224) [87.29709484 16.86270984  5.17695046]\n",
      "(3, 224) [87.29732064 16.86304903  5.17685934]\n",
      "(3, 224) [87.29757618 16.86338851  5.17676996]\n",
      "(3, 224) [87.29796124 16.86375233  5.17668077]\n",
      "(3, 224) [87.29869988 16.86414183  5.17660463]\n",
      "(3, 224) [87.29954053 16.86455336  5.17652774]\n",
      "(3, 224) [87.30053219 16.86497287  5.17645745]\n",
      "(3, 224) [87.30134738 16.86538259  5.17637963]\n",
      "(3, 224) [87.30218077 16.86578744  5.17630444]\n",
      "(3, 224) [87.30301385 16.86618851  5.17623041]\n",
      "(3, 224) [87.30379752 16.8665891   5.17615356]\n",
      "(3, 224) [87.30460927 16.86699631  5.17607634]\n",
      "(3, 224) [87.30531453 16.86740359  5.17599276]\n",
      "(3, 224) [87.30611306 16.86780296  5.17591724]\n",
      "(3, 224) [87.30685548 16.86820601  5.17583722]\n",
      "(3, 224) [87.30750543 16.86861546  5.17574966]\n",
      "(3, 224) [87.30845535 16.86905238  5.17567145]\n",
      "(3, 224) [87.30916548 16.8694795   5.17558205]\n",
      "(3, 224) [87.30992471 16.86988873  5.17550105]\n",
      "(3, 224) [87.31054971 16.87030848  5.17540887]\n",
      "(3, 224) [87.31159617 16.87070835  5.17534791]\n",
      "(3, 224) [87.31237169 16.87108087  5.17527932]\n",
      "(3, 224) [87.31294644 16.87143286  5.17520516]\n",
      "(3, 224) [87.31371879 16.87178896  5.17514147]\n",
      "(3, 224) [87.31433226 16.87210404  5.17508099]\n",
      "(3, 224) [87.31489912 16.87242905  5.17501468]\n",
      "(3, 224) [87.31555187 16.87272866  5.17496125]\n",
      "(3, 224) [87.31623971 16.87302044  5.17491231]\n",
      "(3, 224) [87.31683095 16.87328319  5.17486663]\n",
      "(3, 224) [87.31724802 16.87357023  5.17480313]\n",
      "(3, 224) [87.31751907 16.87385894  5.17473047]\n",
      "(3, 224) [87.3178592  16.87417807  5.1746525 ]\n",
      "(3, 224) [87.31813134 16.87450533  5.17456797]\n",
      "(3, 224) [87.31826871 16.87483445  5.17447489]\n",
      "(3, 224) [87.31859003 16.87516833  5.17439131]\n",
      "(3, 224) [87.31894439 16.87548793  5.17431413]\n",
      "(3, 224) [87.31906054 16.87579271  5.17422741]\n",
      "(3, 224) [87.3192937  16.87611121  5.17414349]\n",
      "(3, 224) [87.31956646 16.87640773  5.17406868]\n",
      "(3, 224) [87.31987815 16.87672643  5.17398937]\n",
      "(3, 224) [87.32003142 16.87700529  5.17391291]\n",
      "(3, 224) [87.3202475  16.87727852  5.17384191]\n",
      "(3, 224) [87.32012032 16.87756084  5.17374771]\n",
      "(3, 224) [87.32008603 16.87784841  5.17365741]\n",
      "(3, 224) [87.32031665 16.87813134  5.17358425]\n",
      "(3, 224) [87.32019756 16.87840692  5.17349265]\n",
      "(3, 224) [87.32032172 16.87872827  5.17340146]\n",
      "(3, 224) [87.32026219 16.87901017  5.17331148]\n",
      "(3, 224) [87.32005168 16.87930549  5.17320839]\n",
      "(3, 224) [87.3203936  16.87956257  5.17314984]\n",
      "(3, 224) [87.32090913 16.87981293  5.17310359]\n",
      "(3, 224) [87.32127927 16.88009055  5.17304036]\n",
      "(3, 224) [87.32177644 16.8803788   5.17298137]\n",
      "(3, 224) [87.32201295 16.88068491  5.17290141]\n",
      "(3, 224) [87.32209625 16.8810058   5.17280784]\n",
      "(3, 224) [87.32221366 16.88127672  5.17273163]\n",
      "(3, 224) [87.32248463 16.88142726  5.17270152]\n",
      "(3, 224) [87.32260442 16.88157471  5.17266339]\n",
      "(3, 224) [87.32270123 16.88175253  5.17261459]\n",
      "(3, 224) [87.32297518 16.88192928  5.17257661]\n",
      "(3, 224) [87.32347934 16.88211025  5.172551  ]\n",
      "(3, 224) [87.32365909 16.88229173  5.172506  ]\n",
      "(3, 224) [87.32396083 16.88250481  5.17245852]\n",
      "(3, 224) [87.32384138 16.88270413  5.17239029]\n",
      "(3, 224) [87.32405097 16.88287735  5.1723496 ]\n",
      "(3, 224) [87.32429258 16.8830525   5.17231023]\n",
      "(3, 224) [87.32443223 16.88324175  5.17226052]\n",
      "(3, 224) [87.32436911 16.88341673  5.17220317]\n",
      "(3, 224) [87.32444192 16.88359514  5.17215284]\n",
      "(3, 224) [87.32429898 16.88370976  5.1721093 ]\n",
      "(3, 224) [87.32404601 16.88375314  5.17208107]\n",
      "(3, 224) [87.3244681  16.88382196  5.172085  ]\n",
      "(3, 224) [87.32477657 16.88385018  5.17209463]\n",
      "(3, 224) [87.32518604 16.88381875  5.17212845]\n",
      "(3, 224) [87.32539286 16.88379581  5.17214769]\n",
      "(3, 224) [87.32583253 16.88375616  5.17218581]\n",
      "(3, 224) [87.32616496 16.88367854  5.17222918]\n",
      "(3, 224) [87.3265835  16.8836056   5.17227623]\n",
      "(3, 224) [87.32710259 16.88355667  5.17232189]\n",
      "(3, 224) [87.32736881 16.88354246  5.17234199]\n",
      "(3, 224) [87.3276524  16.88348468  5.17237641]\n",
      "(3, 224) [87.32793142 16.88343276  5.17240877]\n",
      "(3, 224) [87.3282264  16.88337226  5.17244469]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 13%|█████████▌                                                                 | 9696/76339 [00:04<00:28, 2342.93it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.32839156 16.88330428  5.17247523]\n",
      "(3, 224) [87.32832365 16.88328499  5.17247711]\n",
      "(3, 224) [87.32864639 16.88330251  5.17249085]\n",
      "(3, 224) [87.32891724 16.883326    5.17249969]\n",
      "(3, 224) [87.32896652 16.8832951   5.17251204]\n",
      "(3, 224) [87.3293182  16.88326982  5.17254055]\n",
      "(3, 224) [87.32962409 16.88326212  5.172561  ]\n",
      "(3, 224) [87.32975067 16.88327844  5.17256349]\n",
      "(3, 224) [87.33029922 16.88329674  5.17259035]\n",
      "(3, 224) [87.33086397 16.88330382  5.17262159]\n",
      "(3, 224) [87.33103618 16.88328416  5.17263778]\n",
      "(3, 224) [87.33155528 16.88326063  5.17267566]\n",
      "(3, 224) [87.33209512 16.88324664  5.17271185]\n",
      "(3, 224) [87.33239742 16.88320361  5.17274286]\n",
      "(3, 224) [87.3331019  16.88318306  5.1727908 ]\n",
      "(3, 224) [87.33343404 16.8831673   5.17281525]\n",
      "(3, 224) [87.33364729 16.8831519   5.17283257]\n",
      "(3, 224) [87.33413267 16.88315933  5.17285901]\n",
      "(3, 224) [87.33447366 16.88316459  5.17287757]\n",
      "(3, 224) [87.33487075 16.88318072  5.17289613]\n",
      "(3, 224) [87.33512955 16.88319459  5.1729072 ]\n",
      "(3, 224) [87.33549535 16.88321199  5.17292352]\n",
      "(3, 224) [87.335976   16.88326429  5.17293597]\n",
      "(3, 224) [87.33639218 16.88332928  5.17294074]\n",
      "(3, 224) [87.336627   16.88340926  5.17293019]\n",
      "(3, 224) [87.33691055 16.88349826  5.17291977]\n",
      "(3, 224) [87.33698408 16.88358498  5.17289762]\n",
      "(3, 224) [87.33711986 16.88364778  5.17288647]\n",
      "(3, 224) [87.33747954 16.88371249  5.17288798]\n",
      "(3, 224) [87.33744678 16.8837676   5.1728692 ]\n",
      "(3, 224) [87.33748058 16.88382845  5.17285261]\n",
      "(3, 224) [87.33772455 16.88393472  5.17283456]\n",
      "(3, 224) [87.33781433 16.8840326   5.17280996]\n",
      "(3, 224) [87.33763673 16.88414332  5.17276564]\n",
      "(3, 224) [87.33771473 16.88424242  5.17273997]\n",
      "(3, 224) [87.3379435  16.88435861  5.17271798]\n",
      "(3, 224) [87.33795033 16.88444633  5.17269158]\n",
      "(3, 224) [87.33818532 16.88455024  5.17267372]\n",
      "(3, 224) [87.33823786 16.88465599  5.17264451]\n",
      "(3, 224) [87.33836735 16.88476892  5.17261766]\n",
      "(3, 224) [87.33850488 16.88488402  5.17259062]\n",
      "(3, 224) [87.33836486 16.88497337  5.17255503]\n",
      "(3, 224) [87.3381902  16.88506336  5.17251719]\n",
      "(3, 224) [87.3379221  16.88516772  5.17246942]\n",
      "(3, 224) [87.33777688 16.88527396  5.17242833]\n",
      "(3, 224) [87.33740482 16.88540593  5.17236599]\n",
      "(3, 224) [87.33725908 16.88556795  5.17230782]\n",
      "(3, 224) [87.33706328 16.88572132  5.17224936]\n",
      "(3, 224) [87.33660991 16.8858821   5.17217339]\n",
      "(3, 224) [87.33630722 16.88606312  5.17210014]\n",
      "(3, 224) [87.33570735 16.88624784  5.17200815]\n",
      "(3, 224) [87.33552953 16.88640377  5.17194992]\n",
      "(3, 224) [87.3353442  16.88657762  5.17188579]\n",
      "(3, 224) [87.33509577 16.88673378  5.17182334]\n",
      "(3, 224) [87.33472659 16.88691799  5.17174519]\n",
      "(3, 224) [87.33442188 16.88710547  5.17166984]\n",
      "(3, 224) [87.33418966 16.88725449  5.17161054]\n",
      "(3, 224) [87.33432806 16.88740317  5.17157325]\n",
      "(3, 224) [87.33427579 16.88755996  5.17152221]\n",
      "(3, 224) [87.33408854 16.8877094   5.1714654 ]\n",
      "(3, 224) [87.33405532 16.88786663  5.17141533]\n",
      "(3, 224) [87.33404091 16.888019    5.1713679 ]\n",
      "(3, 224) [87.33400157 16.88819677  5.17131123]\n",
      "(3, 224) [87.33364745 16.88837215  5.17123664]\n",
      "(3, 224) [87.33339861 16.8885556   5.17116583]\n",
      "(3, 224) [87.33330726 16.88873428  5.17110579]\n",
      "(3, 224) [87.33322502 16.88890737  5.17104798]\n",
      "(3, 224) [87.33289322 16.88908581  5.17097376]\n",
      "(3, 224) [87.33254058 16.88927948  5.17089365]\n",
      "(3, 224) [87.33207899 16.8894786   5.17080547]\n",
      "(3, 224) [87.331919   16.8897098   5.17072531]\n",
      "(3, 224) [87.33172363 16.88997903  5.17063149]\n",
      "(3, 224) [87.33180636 16.89023591  5.17055784]\n",
      "(3, 224) [87.33185718 16.89051243  5.17047632]\n",
      "(3, 224) [87.33157143 16.89075754  5.17038449]\n",
      "(3, 224) [87.3315594  16.89102229  5.17030284]\n",
      "(3, 224) [87.33155711 16.89129559  5.17021912]\n",
      "(3, 224) [87.3317344  16.89160464  5.17013515]\n",
      "(3, 224) [87.33206456 16.89195731  5.17004682]\n",
      "(3, 224) [87.33248721 16.89225346  5.16998127]\n",
      "(3, 224) [87.33309203 16.89258665  5.16991516]\n",
      "(3, 224) [87.33400286 16.89292318  5.16986605]\n",
      "(3, 224) [87.33496176 16.89323573  5.1698271 ]\n",
      "(3, 224) [87.33582801 16.89358346  5.16977191]\n",
      "(3, 224) [87.33688564 16.89390046  5.16973745]\n",
      "(3, 224) [87.33764227 16.89420064  5.16969036]\n",
      "(3, 224) [87.3380977  16.89446835  5.16963538]\n",
      "(3, 224) [87.33873667 16.8946994   5.16960249]\n",
      "(3, 224) [87.33884535 16.89487526  5.16955505]\n",
      "(3, 224) [87.33926808 16.89507286  5.16951954]\n",
      "(3, 224) [87.33963148 16.8952792   5.16947784]\n",
      "(3, 224) [87.3399191  16.89547645  5.16943447]\n",
      "(3, 224) [87.34043897 16.8957014   5.16939633]\n",
      "(3, 224) [87.34066593 16.89592316  5.16934185]\n",
      "(3, 224) [87.34086497 16.89615539  5.16928249]\n",
      "(3, 224) [87.34105334 16.89636673  5.1692289 ]\n",
      "(3, 224) [87.34122581 16.89657494  5.16917531]\n",
      "(3, 224) [87.3414855  16.89677765  5.16912857]\n",
      "(3, 224) [87.34178263 16.89699547  5.16907941]\n",
      "(3, 224) [87.34221843 16.8972177   5.16903712]\n",
      "(3, 224) [87.34245449 16.89745736  5.16897765]\n",
      "(3, 224) [87.34276388 16.89767099  5.16893053]\n",
      "(3, 224) [87.34314159 16.89785195  5.16889746]\n",
      "(3, 224) [87.34350087 16.89804446  5.16885976]\n",
      "(3, 224) [87.34391012 16.89822521  5.16882861]\n",
      "(3, 224) [87.34401504 16.89841089  5.16877793]\n",
      "(3, 224) [87.34422095 16.89861794  5.16872668]\n",
      "(3, 224) [87.34453734 16.89881475  5.16868511]\n",
      "(3, 224) [87.34476929 16.89899744  5.16864288]\n",
      "(3, 224) [87.34494093 16.89917804  5.1685977 ]\n",
      "(3, 224) [87.34508715 16.89935612  5.1685518 ]\n",
      "(3, 224) [87.34537779 16.89954949  5.16850976]\n",
      "(3, 224) [87.34556586 16.89974299  5.16846161]\n",
      "(3, 224) [87.34574046 16.89993268  5.16841383]\n",
      "(3, 224) [87.34592794 16.90010041  5.16837354]\n",
      "(3, 224) [87.34593181 16.90026786  5.16832246]\n",
      "(3, 224) [87.3457165  16.90042935  5.16826023]\n",
      "(3, 224) [87.34552122 16.90059478  5.16819797]\n",
      "(3, 224) [87.34519759 16.90077617  5.16812321]\n",
      "(3, 224) [87.34462114 16.90093359  5.1680408 ]\n",
      "(3, 224) [87.34441974 16.90109316  5.16797996]\n",
      "(3, 224) [87.34387285 16.90124742  5.16790026]\n",
      "(3, 224) [87.34332263 16.901379    5.16782733]\n",
      "(3, 224) [87.34266704 16.90151999  5.16774527]\n",
      "(3, 224) [87.34219979 16.90166578  5.16767291]\n",
      "(3, 224) [87.34170023 16.90179314  5.16760428]\n",
      "(3, 224) [87.34128877 16.90193081  5.16753772]\n",
      "(3, 224) [87.3410947  16.90207902  5.1674808 ]\n",
      "(3, 224) [87.34080067 16.90218828  5.16742991]\n",
      "(3, 224) [87.34052603 16.90229634  5.16738055]\n",
      "(3, 224) [87.34010031 16.90242384  5.16731626]\n",
      "(3, 224) [87.3395198  16.90252387  5.16725123]\n",
      "(3, 224) [87.33914339 16.90258707  5.16720957]\n",
      "(3, 224) [87.33878692 16.90264329  5.16717123]\n",
      "(3, 224) [87.33847016 16.9026903   5.16713807]\n",
      "(3, 224) [87.33832389 16.90274649  5.1671122 ]\n",
      "(3, 224) [87.33822028 16.90279751  5.16709044]\n",
      "(3, 224) [87.33799594 16.90288034  5.16705179]\n",
      "(3, 224) [87.33783753 16.90299024  5.16700878]\n",
      "(3, 224) [87.33785252 16.90307273  5.1669844 ]\n",
      "(3, 224) [87.3377464  16.90315281  5.16695359]\n",
      "(3, 224) [87.33747287 16.90322676  5.16691476]\n",
      "(3, 224) [87.33708616 16.90332587  5.1668615 ]\n",
      "(3, 224) [87.33687875 16.90342807  5.16681792]\n",
      "(3, 224) [87.33680974 16.90352158  5.16678519]\n",
      "(3, 224) [87.33628613 16.90359767  5.16673087]\n",
      "(3, 224) [87.33595699 16.90367981  5.16668621]\n",
      "(3, 224) [87.33576173 16.90375502  5.16665161]\n",
      "(3, 224) [87.33550608 16.90383733  5.16661125]\n",
      "(3, 224) [87.33534764 16.90392313  5.16657559]\n",
      "(3, 224) [87.33514038 16.90400133  5.16653937]\n",
      "(3, 224) [87.33494022 16.90408578  5.16650165]\n",
      "(3, 224) [87.33467407 16.90416459  5.16646175]\n",
      "(3, 224) [87.33435934 16.90425661  5.16641493]\n",
      "(3, 224) [87.3341837  16.90433606  5.16638021]\n",
      "(3, 224) [87.33387917 16.90442946  5.16633359]\n",
      "(3, 224) [87.33344785 16.90452995  5.16627728]\n",
      "(3, 224) [87.33292748 16.90461809  5.16621948]\n",
      "(3, 224) [87.33266492 16.90469089  5.16618163]\n",
      "(3, 224) [87.3322571  16.9047727   5.16613243]\n",
      "(3, 224) [87.33222486 16.90484321  5.16610892]\n",
      "(3, 224) [87.33195832 16.90489515  5.16607722]\n",
      "(3, 224) [87.33180885 16.90493308  5.16605675]\n",
      "(3, 224) [87.33160517 16.90498188  5.16602976]\n",
      "(3, 224) [87.33127663 16.90503033  5.16599547]\n",
      "(3, 224) [87.33092101 16.90508515  5.16595763]\n",
      "(3, 224) [87.33074892 16.90514942  5.16592777]\n",
      "(3, 224) [87.33031387 16.90522356  5.16587931]\n",
      "(3, 224) [87.32997831 16.90528535  5.16584051]\n",
      "(3, 224) [87.32950771 16.90535275  5.16579201]\n",
      "(3, 224) [87.32934405 16.90542843  5.16575916]\n",
      "(3, 224) [87.32931955 16.90548765  5.16573959]\n",
      "(3, 224) [87.32900419 16.9055436   5.16570379]\n",
      "(3, 224) [87.32850892 16.90559689  5.16565816]\n",
      "(3, 224) [87.32812073 16.90564296  5.16562108]\n",
      "(3, 224) [87.32771451 16.90567805  5.16558629]\n",
      "(3, 224) [87.32731649 16.90570679  5.16555394]\n",
      "(3, 224) [87.3271813  16.90572364  5.16554079]\n",
      "(3, 224) [87.32701323 16.90572164  5.16553145]\n",
      "(3, 224) [87.32673684 16.90572294  5.1655147 ]\n",
      "(3, 224) [87.3263885  16.90569157  5.16550367]\n",
      "(3, 224) [87.32618723 16.90568034  5.1654952 ]\n",
      "(3, 224) [87.32596052 16.90568128  5.16548149]\n",
      "(3, 224) [87.32573211 16.9056819   5.16546778]\n",
      "(3, 224) [87.32549842 16.90568028  5.16545445]\n",
      "(3, 224) [87.32517415 16.90566301  5.16544054]\n",
      "(3, 224) [87.32490424 16.905636    5.16543282]\n",
      "(3, 224) [87.32473474 16.90558722  5.1654377 ]\n",
      "(3, 224) [87.32453093 16.90556996  5.16543091]\n",
      "(3, 224) [87.32454595 16.90553755  5.16544171]\n",
      "(3, 224) [87.32433167 16.90551746  5.16543517]\n",
      "(3, 224) [87.32370227 16.90548944  5.16540648]\n",
      "(3, 224) [87.3231322  16.9054431   5.16538691]\n",
      "(3, 224) [87.32266017 16.9054219   5.16536545]\n",
      "(3, 224) [87.32206401 16.90539783  5.16533753]\n",
      "(3, 224) [87.32182462 16.90534844  5.16533846]\n",
      "(3, 224) [87.321372   16.90530167  5.16532598]\n",
      "(3, 224) [87.32076672 16.90524843  5.16530643]\n",
      "(3, 224) [87.32026253 16.90520434  5.16529007]\n",
      "(3, 224) [87.31944582 16.90514475  5.16525995]\n",
      "(3, 224) [87.31866278 16.90508252  5.16523262]\n",
      "(3, 224) [87.31797055 16.90501348  5.16521277]\n",
      "(3, 224) [87.31748871 16.90493115  5.16520944]\n",
      "(3, 224) [87.31687995 16.90484257  5.16520051]\n",
      "(3, 224) [87.3162921  16.90476289  5.16519008]\n",
      "(3, 224) [87.31569127 16.90468071  5.16517966]\n",
      "(3, 224) [87.3151145  16.90459586  5.16517147]\n",
      "(3, 224) [87.31464638 16.9044794   5.16517939]\n",
      "(3, 224) [87.314162   16.90436101  5.16518693]\n",
      "(3, 224) [87.31384355 16.90423868  5.1652055 ]\n",
      "(3, 224) [87.31333384 16.90410293  5.16521685]\n",
      "(3, 224) [87.3131334  16.90397854  5.16524303]\n",
      "(3, 224) [87.31253618 16.90385342  5.16524596]\n",
      "(3, 224) [87.31206375 16.9037262   5.16525691]\n",
      "(3, 224) [87.31138599 16.90359887  5.16525576]\n",
      "(3, 224) [87.31077589 16.90348294  5.16525511]\n",
      "(3, 224) [87.31013031 16.9033664   5.16525257]\n",
      "(3, 224) [87.30952917 16.90325235  5.1652519 ]\n",
      "(3, 224) [87.30884678 16.90314522  5.16524431]\n",
      "(3, 224) [87.30806851 16.90304457  5.16522904]\n",
      "(3, 224) [87.30753856 16.90294525  5.16522808]\n",
      "(3, 224) [87.30695089 16.90284445  5.16522414]\n",
      "(3, 224) [87.3064469  16.90274598  5.16522444]\n",
      "(3, 224) [87.30616744 16.90266807  5.16523174]\n",
      "(3, 224) [87.3055052  16.90259161  5.16521594]\n",
      "(3, 224) [87.30551335 16.9024918   5.16524696]\n",
      "(3, 224) [87.30489984 16.90238174  5.16524432]\n",
      "(3, 224) [87.30403408 16.902282    5.1652236 ]\n",
      "(3, 224) [87.30334878 16.90216979  5.16521736]\n",
      "(3, 224) [87.30263551 16.90204843  5.16521225]\n",
      "(3, 224) [87.30217599 16.90193871  5.16521861]\n",
      "(3, 224) [87.30152929 16.90182558  5.16521493]\n",
      "(3, 224) [87.30066428 16.90173547  5.16519129]\n",
      "(3, 224) [87.29992222 16.90163696  5.16517751]\n",
      "(3, 224) [87.29951633 16.9015531   5.16517913]\n",
      "(3, 224) [87.29893388 16.90146668  5.16517108]\n",
      "(3, 224) [87.29835311 16.90133168  5.16517801]\n",
      "(3, 224) [87.29798743 16.90125397  5.16518013]\n",
      "(3, 224) [87.29718048 16.901148    5.16516478]\n",
      "(3, 224) [87.29677905 16.90108378  5.16516066]\n",
      "(3, 224) [87.29645195 16.90106336  5.16514755]\n",
      "(3, 224) [87.29610597 16.90100925  5.16514362]\n",
      "(3, 224) [87.29591044 16.90099919  5.16513513]\n",
      "(3, 224) [87.29570947 16.90098807  5.16512664]\n",
      "(3, 224) [87.29537969 16.90096715  5.16511353]\n",
      "(3, 224) [87.29504865 16.90092085  5.1651081 ]\n",
      "(3, 224) [87.29483553 16.9008508   5.16511689]\n",
      "(3, 224) [87.29457703 16.90077176  5.16512575]\n",
      "(3, 224) [87.29428183 16.90070645  5.16512824]\n",
      "(3, 224) [87.2939726  16.90064149  5.16512979]\n",
      "(3, 224) [87.29372278 16.90057969  5.16513389]\n",
      "(3, 224) [87.29345964 16.90051653  5.16513762]\n",
      "(3, 224) [87.29298703 16.90044997  5.16512999]\n",
      "(3, 224) [87.29287657 16.9003939   5.16514059]\n",
      "(3, 224) [87.2925698  16.90035296  5.16513494]\n",
      "(3, 224) [87.29207178 16.9003101   5.16511858]\n",
      "(3, 224) [87.29159847 16.90027755  5.16510053]\n",
      "(3, 224) [87.29126989 16.9002377   5.16509326]\n",
      "(3, 224) [87.29101602 16.90022605  5.1650818 ]\n",
      "(3, 224) [87.29067255 16.90022075  5.16506312]\n",
      "(3, 224) [87.29051991 16.90022012  5.16505428]\n",
      "(3, 224) [87.29013537 16.90022405  5.16503035]\n",
      "(3, 224) [87.29009017 16.90026624  5.16501481]\n",
      "(3, 224) [87.28994203 16.9002741   5.16500365]\n",
      "(3, 224) [87.28980085 16.90029254  5.16498969]\n",
      "(3, 224) [87.28965151 16.90031271  5.16497471]\n",
      "(3, 224) [87.28965411 16.90036873  5.16495777]\n",
      "(3, 224) [87.28954978 16.90043228  5.16493222]\n",
      "(3, 224) [87.28945367 16.90047487  5.16491355]\n",
      "(3, 224) [87.28954602 16.90049819  5.1649119 ]\n",
      "(3, 224) [87.28948362 16.90054785  5.16489307]\n",
      "(3, 224) [87.28983365 16.90060479  5.1648964 ]\n",
      "(3, 224) [87.29036027 16.9007519   5.16488271]\n",
      "(3, 224) [87.29054047 16.90085518  5.1648619 ]\n",
      "(3, 224) [87.29079006 16.90100003  5.16483256]\n",
      "(3, 224) [87.29107545 16.9011418   5.16480621]\n",
      "(3, 224) [87.29153626 16.90124132  5.16480311]\n",
      "(3, 224) [87.29194467 16.90133373  5.16479907]\n",
      "(3, 224) [87.29238491 16.90143628  5.16479385]\n",
      "(3, 224) [87.29267077 16.9015307   5.16478198]\n",
      "(3, 224) [87.29295071 16.90164262  5.16476441]\n",
      "(3, 224) [87.29302491 16.90176122  5.16473264]\n",
      "(3, 224) [87.29333919 16.90188611  5.16471314]\n",
      "(3, 224) [87.29351244 16.90201534  5.16468399]\n",
      "(3, 224) [87.29373392 16.90214469  5.16465765]\n",
      "(3, 224) [87.2939021  16.90223093  5.1646413 ]\n",
      "(3, 224) [87.29411399 16.90231192  5.16462913]\n",
      "(3, 224) [87.29442962 16.90235559  5.16463447]\n",
      "(3, 224) [87.29487094 16.90237798  5.16465373]\n",
      "(3, 224) [87.29511569 16.90242175  5.16465485]\n",
      "(3, 224) [87.29510035 16.90246458  5.16464088]\n",
      "(3, 224) [87.29512523 16.90247838  5.16463815]\n",
      "(3, 224) [87.29524792 16.9024716   5.16464746]\n",
      "(3, 224) [87.29549032 16.90242545  5.16467587]\n",
      "(3, 224) [87.29544353 16.90238876  5.16468429]\n",
      "(3, 224) [87.29539186 16.902313    5.16470432]\n",
      "(3, 224) [87.29516695 16.90224374  5.16471215]\n",
      "(3, 224) [87.29501943 16.90216426  5.16472766]\n",
      "(3, 224) [87.29516448 16.90210706  5.16475367]\n",
      "(3, 224) [87.29514681 16.90205309  5.16476908]\n",
      "(3, 224) [87.29487587 16.90199773  5.16476995]\n",
      "(3, 224) [87.29461955 16.90190974  5.16478162]\n",
      "(3, 224) [87.29415855 16.90180304  5.16478691]\n",
      "(3, 224) [87.29374316 16.90171791  5.16478832]\n",
      "(3, 224) [87.29320253 16.90162833  5.1647837 ]\n",
      "(3, 224) [87.2922914  16.90154548  5.16475515]\n",
      "(3, 224) [87.29123277 16.90148021  5.16471252]\n",
      "(3, 224) [87.29030982 16.90141634  5.16467747]\n",
      "(3, 224) [87.28925257 16.90136775  5.16462983]\n",
      "(3, 224) [87.28861927 16.90133955  5.16460102]\n",
      "(3, 224) [87.2881863  16.90133663  5.16457632]\n",
      "(3, 224) [87.28760714 16.90136868  5.16453232]\n",
      "(3, 224) [87.28732085 16.90146639  5.16448558]\n",
      "(3, 224) [87.28684055 16.90154123  5.16443434]\n",
      "(3, 224) [87.28617654 16.90158308  5.1643823 ]\n",
      "(3, 224) [87.28584378 16.90163099  5.164348  ]\n",
      "(3, 224) [87.28525499 16.90168953  5.16429533]\n",
      "(3, 224) [87.28472966 16.90177169  5.16423923]\n",
      "(3, 224) [87.28443617 16.90185945  5.16419511]\n",
      "(3, 224) [87.28415995 16.90199235  5.16413825]\n",
      "(3, 224) [87.28391071 16.90213166  5.16408103]\n",
      "(3, 224) [87.28360262 16.90226855  5.16402106]\n",
      "(3, 224) [87.28320874 16.90242388  5.16395041]\n",
      "(3, 224) [87.28261717 16.9025702   5.16387083]\n",
      "(3, 224) [87.28219538 16.90267998  5.16381242]\n",
      "(3, 224) [87.28197329 16.90282565  5.16375488]\n",
      "(3, 224) [87.28187388 16.90298595  5.16370008]\n",
      "(3, 224) [87.28158315 16.90312638  5.16364005]\n",
      "(3, 224) [87.28125408 16.90327836  5.16357423]\n",
      "(3, 224) [87.28123559 16.90342655  5.16352792]\n",
      "(3, 224) [87.28101652 16.90355284  5.16347644]\n",
      "(3, 224) [87.28051935 16.90367567  5.16340958]\n",
      "(3, 224) [87.28005383 16.90381757  5.16333879]\n",
      "(3, 224) [87.27977222 16.90399841  5.163267  ]\n",
      "(3, 224) [87.27946063 16.90418697  5.1631911 ]\n",
      "(3, 224) [87.27899644 16.90437341  5.16310684]\n",
      "(3, 224) [87.27862189 16.90456088  5.16302757]\n",
      "(3, 224) [87.2784809  16.90477274  5.16295467]\n",
      "(3, 224) [87.2783479  16.9050032   5.16287655]\n",
      "(3, 224) [87.27834357 16.9052276   5.1628079 ]\n",
      "(3, 224) [87.27868144 16.90545313  5.16275912]\n",
      "(3, 224) [87.27870748 16.9057335   5.16267525]\n",
      "(3, 224) [87.27890461 16.90600121  5.16260536]\n",
      "(3, 224) [87.27910113 16.90625509  5.16253961]\n",
      "(3, 224) [87.27923445 16.90652526  5.16246515]\n",
      "(3, 224) [87.27967893 16.90678958  5.16241084]\n",
      "(3, 224) [87.27995134 16.90706007  5.16234451]\n",
      "(3, 224) [87.2802049  16.90733431  5.16227593]\n",
      "(3, 224) [87.28040826 16.9076124   5.16220323]\n",
      "(3, 224) [87.28073181 16.90789897  5.16213503]\n",
      "(3, 224) [87.28106183 16.90818129  5.16206851]\n",
      "(3, 224) [87.28137703 16.90845934  5.16200239]\n",
      "(3, 224) [87.2817083  16.90873056  5.16193928]\n",
      "(3, 224) [87.28219988 16.9090031   5.16188526]\n",
      "(3, 224) [87.28247716 16.90928432  5.16181595]\n",
      "(3, 224) [87.28282219 16.90957195  5.1617487 ]\n",
      "(3, 224) [87.2832283  16.9098712   5.16168147]\n",
      "(3, 224) [87.28358048 16.91018287  5.1616073 ]\n",
      "(3, 224) [87.2839717  16.91050484  5.16153227]\n",
      "(3, 224) [87.28440974 16.91083627  5.16145714]\n",
      "(3, 224) [87.28469107 16.91116299  5.16137421]\n",
      "(3, 224) [87.2850016  16.91150133  5.16128953]\n",
      "(3, 224) [87.28518901 16.91181947  5.16120378]\n",
      "(3, 224) [87.28518664 16.9122081   5.16108537]\n",
      "(3, 224) [87.28520626 16.91265837  5.16094958]\n",
      "(3, 224) [87.28557726 16.91313541  5.16082649]\n",
      "(3, 224) [87.28593736 16.91360965  5.16070357]\n",
      "(3, 224) [87.28637915 16.91407495  5.16058818]\n",
      "(3, 224) [87.28656036 16.91455754  5.16045215]\n",
      "(3, 224) [87.28680988 16.91504776  5.16031788]\n",
      "(3, 224) [87.28687397 16.91552683  5.16017602]\n",
      "(3, 224) [87.28676872 16.91602631  5.16001803]\n",
      "(3, 224) [87.28659487 16.91652836  5.15985524]\n",
      "(3, 224) [87.28665896 16.91703225  5.1597059 ]\n",
      "(3, 224) [87.28642505 16.91748598  5.15955419]\n",
      "(3, 224) [87.2862439  16.91794937  5.15940266]\n",
      "(3, 224) [87.28607819 16.91842452  5.15924849]\n",
      "(3, 224) [87.28591238 16.91888263  5.15909953]\n",
      "(3, 224) [87.28575147 16.91932257  5.15895631]\n",
      "(3, 224) [87.28568603 16.91974095  5.1588253 ]\n",
      "(3, 224) [87.28555525 16.9201425   5.15869555]\n",
      "(3, 224) [87.28547347 16.92056631  5.15856192]\n",
      "(3, 224) [87.28511713 16.92103728  5.15839782]\n",
      "(3, 224) [87.2848807  16.9214993   5.15824349]\n",
      "(3, 224) [87.28432438 16.92194677  5.15807463]\n",
      "(3, 224) [87.28385713 16.92241029  5.15790616]\n",
      "(3, 224) [87.28351758 16.92288452  5.15774191]\n",
      "(3, 224) [87.28314771 16.92331563  5.15758905]\n",
      "(3, 224) [87.28298936 16.92374548  5.15744901]\n",
      "(3, 224) [87.28278258 16.92419284  5.15730086]\n",
      "(3, 224) [87.28232227 16.92465338  5.15713382]\n",
      "(3, 224) [87.2819679  16.92510789  5.15697484]\n",
      "(3, 224) [87.28127565 16.92554587  5.15680088]\n",
      "(3, 224) [87.28123893 16.92599885  5.1566611 ]\n",
      "(3, 224) [87.28095635 16.92642966  5.15651352]\n",
      "(3, 224) [87.2806831  16.92689506  5.156356  ]\n",
      "(3, 224) [87.28030991 16.92736018  5.15619272]\n",
      "(3, 224) [87.28029975 16.92782912  5.1560497 ]\n",
      "(3, 224) [87.28033186 16.92827199  5.15591703]\n",
      "(3, 224) [87.28030751 16.92870264  5.15578474]\n",
      "(3, 224) [87.28027654 16.92912642  5.15565414]\n",
      "(3, 224) [87.27982433 16.92957365  5.15549161]\n",
      "(3, 224) [87.27980298 16.93000741  5.15535857]\n",
      "(3, 224) [87.2795515  16.93042909  5.15521566]\n",
      "(3, 224) [87.27943356 16.93084996  5.1550808 ]\n",
      "(3, 224) [87.2790284  16.93125955  5.15493243]\n",
      "(3, 224) [87.27893592 16.93166758  5.154803  ]\n",
      "(3, 224) [87.27885095 16.93206004  5.15467869]\n",
      "(3, 224) [87.27862507 16.93243858  5.15455029]\n",
      "(3, 224) [87.27820371 16.93284605  5.15440158]\n",
      "(3, 224) [87.27799183 16.93324577  5.1542676 ]\n",
      "(3, 224) [87.27760395 16.93363744  5.15412564]\n",
      "(3, 224) [87.27739231 16.93399927  5.15400318]\n",
      "(3, 224) [87.27703091 16.93434575  5.15387641]\n",
      "(3, 224) [87.27684437 16.93468894  5.153761  ]\n",
      "(3, 224) [87.27656352 16.93506569  5.15362984]\n",
      "(3, 224) [87.27627695 16.93542492  5.15350364]\n",
      "(3, 224) [87.27600994 16.93576637  5.15338398]\n",
      "(3, 224) [87.27597716 16.93615959  5.1532625 ]\n",
      "(3, 224) [87.27572178 16.93657185  5.15312203]\n",
      "(3, 224) [87.27562773 16.9370086   5.15298363]\n",
      "(3, 224) [87.27545587 16.93748503  5.15282858]\n",
      "(3, 224) [87.27555918 16.9379506   5.15269301]\n",
      "(3, 224) [87.27583211 16.93842331  5.15256538]\n",
      "(3, 224) [87.27608199 16.93889813  5.15243571]\n",
      "(3, 224) [87.27592656 16.93935758  5.15228679]\n",
      "(3, 224) [87.2756639  16.93983313  5.15212659]\n",
      "(3, 224) [87.27530092 16.94030262  5.15196235]\n",
      "(3, 224) [87.27532265 16.94076699  5.15182232]\n",
      "(3, 224) [87.27517779 16.94121098  5.15167866]\n",
      "(3, 224) [87.27499936 16.94164776  5.1515352 ]\n",
      "(3, 224) [87.27496456 16.94210061  5.15139531]\n",
      "(3, 224) [87.27488288 16.94253066  5.15125956]\n",
      "(3, 224) [87.27446226 16.94295777  5.15110468]\n",
      "(3, 224) [87.27417242 16.94341393  5.15094876]\n",
      "(3, 224) [87.27363513 16.94385429  5.150783  ]\n",
      "(3, 224) [87.27314496 16.94427374  5.1506264 ]\n",
      "(3, 224) [87.2724919  16.94468544  5.1504625 ]\n",
      "(3, 224) [87.27187133 16.94508836  5.15030318]\n",
      "(3, 224) [87.2712226  16.94549893  5.15013989]\n",
      "(3, 224) [87.27045745 16.94592172  5.149966  ]\n",
      "(3, 224) [87.26990406 16.94635     5.1498029 ]\n",
      "(3, 224) [87.26920275 16.94677582  5.14963183]\n",
      "(3, 224) [87.26871394 16.94721557  5.14946912]\n",
      "(3, 224) [87.26815544 16.947632    5.14930934]\n",
      "(3, 224) [87.26765482 16.94805497  5.14915106]\n",
      "(3, 224) [87.26704225 16.94847264  5.14898778]\n",
      "(3, 224) [87.26616177 16.94888408  5.14881061]\n",
      "(3, 224) [87.26571918 16.94935269  5.14864202]\n",
      "(3, 224) [87.26505311 16.94989611  5.14843754]\n",
      "(3, 224) [87.26479981 16.95044421  5.14825605]\n",
      "(3, 224) [87.26499643 16.95104422  5.1480854 ]\n",
      "(3, 224) [87.26510459 16.95165132  5.14790742]\n",
      "(3, 224) [87.26532011 16.95226902  5.14773263]\n",
      "(3, 224) [87.26518446 16.95288302  5.14753822]\n",
      "(3, 224) [87.26530513 16.95347771  5.14736479]\n",
      "(3, 224) [87.26565687 16.95406538  5.14720715]\n",
      "(3, 224) [87.26567007 16.95464647  5.14703152]\n",
      "(3, 224) [87.26566077 16.95520388  5.14686165]\n",
      "(3, 224) [87.26575632 16.95573622  5.14670558]\n",
      "(3, 224) [87.26570905 16.95632984  5.14652245]\n",
      "(3, 224) [87.26558195 16.95688988  5.14634486]\n",
      "(3, 224) [87.2656325  16.95749137  5.14616527]\n",
      "(3, 224) [87.26554566 16.95804463  5.14599223]\n",
      "(3, 224) [87.2655242  16.95856726  5.14583238]\n",
      "(3, 224) [87.26539926 16.95911931  5.14565746]\n",
      "(3, 224) [87.26526833 16.95962465  5.14549638]\n",
      "(3, 224) [87.26510213 16.96013184  5.14533266]\n",
      "(3, 224) [87.26515817 16.96065044  5.14517862]\n",
      "(3, 224) [87.26500411 16.96118713  5.14500669]\n",
      "(3, 224) [87.26453782 16.96170458  5.14482218]\n",
      "(3, 224) [87.26411624 16.96223023  5.14463779]\n",
      "(3, 224) [87.26393804 16.96275108  5.14446924]\n",
      "(3, 224) [87.2636163  16.96324054  5.14430171]\n",
      "(3, 224) [87.26334352 16.96372243  5.14413937]\n",
      "(3, 224) [87.26311239 16.96426299  5.1439618 ]\n",
      "(3, 224) [87.26291212 16.96478462  5.14379175]\n",
      "(3, 224) [87.26262952 16.96531897  5.14361296]\n",
      "(3, 224) [87.26236051 16.96583893  5.14343945]\n",
      "(3, 224) [87.26235909 16.9663564   5.14328251]\n",
      "(3, 224) [87.26233999 16.96689497  5.14311819]\n",
      "(3, 224) [87.2623837  16.9674144   5.14296342]\n",
      "(3, 224) [87.26225257 16.96792051  5.14280232]\n",
      "(3, 224) [87.2619765  16.9684145   5.14263638]\n",
      "(3, 224) [87.26177197 16.96892303  5.14247026]\n",
      "(3, 224) [87.26161505 16.96942603  5.14230863]\n",
      "(3, 224) [87.26130181 16.96988575  5.14215092]\n",
      "(3, 224) [87.26079749 16.97034681  5.14198153]\n",
      "(3, 224) [87.26028926 16.97077544  5.14182171]\n",
      "(3, 224) [87.26015451 16.97117509  5.14169257]\n",
      "(3, 224) [87.25987937 16.9715436   5.14156463]\n",
      "(3, 224) [87.25950656 16.97188899  5.14143794]\n",
      "(3, 224) [87.25913411 16.9722638   5.14130232]\n",
      "(3, 224) [87.25885898 16.97262988  5.14117508]\n",
      "(3, 224) [87.25827248 16.9729638   5.14103932]\n",
      "(3, 224) [87.25764215 16.9733023   5.14089957]\n",
      "(3, 224) [87.25681832 16.9735474   5.14077684]\n",
      "(3, 224) [87.25629243 16.97382509  5.14066176]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 13%|█████████▉                                                                | 10206/76339 [00:04<00:28, 2335.39it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(3, 224) [87.25582133 16.9740709   5.1405596 ]\n",
      "(3, 224) [87.25501665 16.97435823  5.14042518]\n",
      "(3, 224) [87.2542694  16.97466526  5.1402881 ]\n",
      "(3, 224) [87.25370639 16.9749893   5.14015671]\n",
      "(3, 224) [87.25306692 16.97528534  5.14002939]\n",
      "(3, 224) [87.25278953 16.97558844  5.13992121]\n",
      "(3, 224) [87.25251768 16.97588611  5.13981499]\n",
      "(3, 224) [87.25221879 16.97620544  5.13970062]\n",
      "(3, 224) [87.25179867 16.97652125  5.13958018]\n",
      "(3, 224) [87.25153742 16.97681232  5.13947656]\n",
      "(3, 224) [87.25113354 16.97710876  5.13936293]\n",
      "(3, 224) [87.2509489  16.97742043  5.13925755]\n",
      "(3, 224) [87.25053385 16.97771483  5.13914385]\n",
      "(3, 224) [87.25022757 16.97806546  5.13901944]\n",
      "(3, 224) [87.24979298 16.97843301  5.13888232]\n",
      "(3, 224) [87.24937529 16.97879702  5.13874731]\n",
      "(3, 224) [87.24918745 16.97915219  5.13862854]\n",
      "(3, 224) [87.24888725 16.97953549  5.13849458]\n",
      "(3, 224) [87.24852633 16.97992732  5.13835444]\n",
      "(3, 224) [87.24816136 16.980346    5.13820587]\n",
      "(3, 224) [87.24791994 16.98074529  5.13807052]\n",
      "(3, 224) [87.24754295 16.98112526  5.13793305]\n",
      "(3, 224) [87.2470434  16.98151317  5.13778591]\n",
      "(3, 224) [87.2464774  16.98188877  5.13763859]\n",
      "(3, 224) [87.24600207 16.98228202  5.13749126]\n",
      "(3, 224) [87.24543662 16.98264538  5.13734768]\n",
      "(3, 224) [87.24502023 16.98300933  5.13721273]\n",
      "(3, 224) [87.24493145 16.9833725   5.13709727]\n",
      "(3, 224) [87.24451591 16.98372245  5.13696656]\n",
      "(3, 224) [87.24415741 16.98405897  5.13684324]\n",
      "(3, 224) [87.24378226 16.98439551  5.13671898]\n",
      "(3, 224) [87.24341745 16.98472286  5.13659809]\n",
      "(3, 224) [87.24299123 16.98506023  5.13647057]\n",
      "(3, 224) [87.24271909 16.98539607  5.13635261]\n",
      "(3, 224) [87.24255119 16.98571327  5.13624644]\n",
      "(3, 224) [87.24207396 16.98602258  5.13612443]\n",
      "(3, 224) [87.24164567 16.98635831  5.13599735]\n",
      "(3, 224) [87.24130349 16.98667603  5.13588082]\n",
      "(3, 224) [87.24084812 16.98700839  5.13575322]\n",
      "(3, 224) [87.24032581 16.98735276  5.135618  ]\n",
      "(3, 224) [87.24008929 16.98773099  5.13548937]\n",
      "(3, 224) [87.23980754 16.9881021   5.1353602 ]\n",
      "(3, 224) [87.23942379 16.98844271  5.13523429]\n",
      "(3, 224) [87.23930862 16.98876983  5.13512836]\n",
      "(3, 224) [87.23907462 16.98909975  5.13501456]\n",
      "(3, 224) [87.23884093 16.98939001  5.13491282]\n",
      "(3, 224) [87.23860601 16.98972466  5.1347976 ]\n",
      "(3, 224) [87.23837781 16.9900631   5.13468163]\n",
      "(3, 224) [87.2383263  16.99039869  5.13457697]\n",
      "(3, 224) [87.23839594 16.99073555  5.13447907]\n",
      "(3, 224) [87.238319   16.99109641  5.13436523]\n",
      "(3, 224) [87.23821148 16.99142408  5.13425965]\n",
      "(3, 224) [87.23811213 16.9917443   5.13415671]\n",
      "(3, 224) [87.2381428 16.9920594  5.134063 ]\n",
      "(3, 224) [87.23806598 16.99236433  5.13396604]\n",
      "(3, 224) [87.23796524 16.99267323  5.13386643]\n",
      "(3, 224) [87.23784216 16.99298524  5.13376459]\n",
      "(3, 224) [87.23792873 16.99330359  5.13367317]\n",
      "(3, 224) [87.23815969 16.99359061  5.13359978]\n",
      "(3, 224) [87.23827894 16.99384227  5.13353052]\n",
      "(3, 224) [87.23856899 16.99409535  5.13347091]\n",
      "(3, 224) [87.23883824 16.99433637  5.13341373]\n",
      "(3, 224) [87.23894258 16.99457724  5.1333469 ]\n",
      "(3, 224) [87.23897654 16.99478985  5.13328448]\n",
      "(3, 224) [87.23880154 16.99500425  5.13320921]\n",
      "(3, 224) [87.23867569 16.99522387  5.13313526]\n",
      "(3, 224) [87.23826399 16.99546393  5.13303829]\n",
      "(3, 224) [87.23796951 16.99564301  5.13296675]\n",
      "(3, 224) [87.23768931 16.99583909  5.1328909 ]\n",
      "(3, 224) [87.23757379 16.99605942  5.13281737]\n",
      "(3, 224) [87.23727692 16.9962764   5.13273419]\n",
      "(3, 224) [87.23705801 16.99649477  5.13265514]\n",
      "(3, 224) [87.23712905 16.99671349  5.13259307]\n",
      "(3, 224) [87.23720735 16.99692348  5.13253409]\n",
      "(3, 224) [87.23734684 16.99712615  5.13248092]\n",
      "(3, 224) [87.2372166  16.99732876  5.1324119 ]\n",
      "(3, 224) [87.23712921 16.9975397   5.13234288]\n",
      "(3, 224) [87.23693059 16.99773332  5.13227253]\n",
      "(3, 224) [87.23656797 16.99793746  5.13218933]\n",
      "(3, 224) [87.2364174  16.99815693  5.13211398]\n",
      "(3, 224) [87.23623567 16.99839103  5.13203242]\n",
      "(3, 224) [87.23623154 16.99863771  5.13195751]\n",
      "(3, 224) [87.2362143  16.99890645  5.13187514]\n",
      "(3, 224) [87.23634984 16.99916832  5.13180386]\n",
      "(3, 224) [87.23625976 16.99942131  5.13172199]\n",
      "(3, 224) [87.23616487 16.9996411   5.13164987]\n",
      "(3, 224) [87.23611271 16.99986868  5.13157795]\n",
      "(3, 224) [87.23623116 17.00005368  5.13152895]\n",
      "(3, 224) [87.23618139 17.00022057  5.13147554]\n",
      "(3, 224) [87.2361222  17.0003394   5.13143614]\n",
      "(3, 224) [87.23607523 17.00041266  5.13141125]\n",
      "(3, 224) [87.23582894 17.00046046  5.13138234]\n",
      "(3, 224) [87.23541978 17.00051295  5.13134244]\n",
      "(3, 224) [87.23494418 17.00054249  5.13130555]\n",
      "(3, 224) [87.23470254 17.00056379  5.13128491]\n",
      "(3, 224) [87.23456194 17.00059792  5.13126634]\n",
      "(3, 224) [87.23446673 17.0006384   5.13124852]\n",
      "(3, 224) [87.23444943 17.00066081  5.13124074]\n",
      "(3, 224) [87.23455917 17.00067136  5.13124401]\n",
      "(3, 224) [87.23449698 17.00072188  5.13122511]\n",
      "(3, 224) [87.23466901 17.00081447  5.13120729]\n",
      "(3, 224) [87.23475483 17.00087902  5.13119286]\n",
      "(3, 224) [87.23505578 17.00096555  5.13118444]\n",
      "(3, 224) [87.23545436 17.00107593  5.13117458]\n",
      "(3, 224) [87.23580571 17.00121891  5.1311521 ]\n",
      "(3, 224) [87.23629634 17.00137191  5.13113477]\n",
      "(3, 224) [87.236686   17.00155253  5.13110319]\n",
      "(3, 224) [87.23724408 17.00172913  5.13108271]\n",
      "(3, 224) [87.23809916 17.00185794  5.13109412]\n",
      "(3, 224) [87.23858714 17.00201791  5.13107457]\n",
      "(3, 224) [87.23937416 17.00221265  5.13106211]\n",
      "(3, 224) [87.24011226 17.00242543  5.13104134]\n",
      "(3, 224) [87.24052488 17.002632    5.13100333]\n",
      "(3, 224) [87.2412049  17.00286089  5.13097429]\n",
      "(3, 224) [87.24188932 17.00307125  5.13095106]\n",
      "(3, 224) [87.24252567 17.00327935  5.13092573]\n",
      "(3, 224) [87.24321616 17.00349699  5.13090075]\n",
      "(3, 224) [87.24411145 17.00373851  5.13088058]\n",
      "(3, 224) [87.24513031 17.00403384  5.13085149]\n",
      "(3, 224) [87.24588697 17.0043141   5.13081152]\n",
      "(3, 224) [87.24662152 17.00459254  5.1307708 ]\n",
      "(3, 224) [87.24749913 17.00480931  5.13075703]\n",
      "(3, 224) [87.24845395 17.00503001  5.13074664]\n",
      "(3, 224) [87.24927098 17.00521889  5.13073771]\n",
      "(3, 224) [87.25032901 17.00543438  5.13073489]\n",
      "(3, 224) [87.25120069 17.00565442  5.13071975]\n",
      "(3, 224) [87.25205693 17.00586268  5.13070725]\n",
      "(3, 224) [87.25324664 17.0060534   5.13071966]\n",
      "(3, 224) [87.25416734 17.00625798  5.13071206]\n",
      "(3, 224) [87.25513737 17.00643728  5.130715  ]\n",
      "(3, 224) [87.25598088 17.00664809  5.130701  ]\n",
      "(3, 224) [87.25698381 17.00686298  5.13069514]\n",
      "(3, 224) [87.25784167 17.00708723  5.13067793]\n",
      "(3, 224) [87.25876212 17.00732478  5.13066035]\n",
      "(3, 224) [87.2596802  17.00756856  5.13064077]\n",
      "(3, 224) [87.26058206 17.00779894  5.13062431]\n",
      "(3, 224) [87.26141748 17.00804195  5.13060013]\n",
      "(3, 224) [87.26242755 17.00829001  5.13058468]\n",
      "(3, 224) [87.2632373  17.00854724  5.13055468]\n",
      "(3, 224) [87.26401606 17.00884542  5.13051047]\n",
      "(3, 224) [87.26478592 17.00915292  5.13046292]\n",
      "(3, 224) [87.26580404 17.00945268  5.13043235]\n",
      "(3, 224) [87.26685378 17.00977558  5.13039664]\n",
      "(3, 224) [87.26778507 17.01010795  5.13035109]\n",
      "(3, 224) [87.26865592 17.01037501  5.13032171]\n",
      "(3, 224) [87.2696552  17.01063561  5.13030182]\n",
      "(3, 224) [87.27053865 17.01088173  5.13027948]\n",
      "(3, 224) [87.27149221 17.01112239  5.13026295]\n",
      "(3, 224) [87.27215886 17.01136395  5.13022925]\n",
      "(3, 224) [87.27260671 17.01157631  5.13019152]\n",
      "(3, 224) [87.27327389 17.01179739  5.13016403]\n",
      "(3, 224) [87.27396717 17.01203057  5.13013446]\n",
      "(3, 224) [87.27481287 17.0122522   5.13011731]\n",
      "(3, 224) [87.27572212 17.01248575  5.13010034]\n",
      "(3, 224) [87.27643209 17.0127276   5.1300691 ]\n",
      "(3, 224) [87.27735589 17.012987    5.13004513]\n",
      "(3, 224) [87.27828387 17.0132503   5.13002023]\n",
      "(3, 224) [87.27904563 17.01350757  5.12998737]\n",
      "(3, 224) [87.27989007 17.01381024  5.12994567]\n",
      "(3, 224) [87.28107471 17.01411647  5.12992291]\n",
      "(3, 224) [87.28213    17.01439544  5.1299008 ]\n",
      "(3, 224) [87.2832753  17.0146613   5.12988793]\n",
      "(3, 224) [87.28453173 17.01495277  5.12987386]\n",
      "(3, 224) [87.28595202 17.0152566   5.12986569]\n",
      "(3, 224) [87.28716952 17.01557628  5.12984083]\n",
      "(3, 224) [87.28859657 17.01590798  5.12982467]\n",
      "(3, 224) [87.28987021 17.01625993  5.12979343]\n",
      "(3, 224) [87.2910556  17.01662762  5.12975223]\n",
      "(3, 224) [87.29235097 17.01698482  5.12972068]\n",
      "(3, 224) [87.29340361 17.01733159  5.12967802]\n",
      "(3, 224) [87.29426947 17.01768176  5.12962334]\n",
      "(3, 224) [87.29525587 17.0180298   5.12957641]\n",
      "(3, 224) [87.29644918 17.01837293  5.1295431 ]\n",
      "(3, 224) [87.2974859  17.01869481  5.12950703]\n",
      "(3, 224) [87.29826021 17.01894954  5.12947579]\n",
      "(3, 224) [87.29896124 17.01914698  5.12945753]\n",
      "(3, 224) [87.29958845 17.0193441   5.12943502]\n",
      "(3, 224) [87.29987465 17.01948051  5.12941077]\n",
      "(3, 224) [87.30035938 17.01960855  5.12940069]\n",
      "(3, 224) [87.30074823 17.01976704  5.12937586]\n",
      "(3, 224) [87.30107075 17.01993069  5.1293456 ]\n",
      "(3, 224) [87.30140693 17.02011635  5.1293095 ]\n",
      "(3, 224) [87.3013031  17.02030739  5.129246  ]\n",
      "(3, 224) [87.30149347 17.02052052  5.12919312]\n",
      "(3, 224) [87.30145716 17.02074696  5.12912292]\n",
      "(3, 224) [87.30147193 17.02097953  5.12905384]\n",
      "(3, 224) [87.30165617 17.0211786   5.1290048 ]\n",
      "(3, 224) [87.30181518 17.02137463  5.12895518]\n",
      "(3, 224) [87.30204331 17.0215366   5.12891989]\n",
      "(3, 224) [87.30226256 17.02168593  5.12888784]\n",
      "(3, 224) [87.30227739 17.02182875  5.12884576]\n",
      "(3, 224) [87.3024005  17.02196308  5.12881258]\n",
      "(3, 224) [87.30236614 17.02209435  5.12877106]\n",
      "(3, 224) [87.30229671 17.02225535  5.12871858]\n",
      "(3, 224) [87.30226671 17.02239329  5.12867532]\n",
      "(3, 224) [87.30243028 17.02252626  5.12864493]\n",
      "(3, 224) [87.30289246 17.02268028  5.12862574]\n",
      "(3, 224) [87.30333724 17.02281408  5.12861161]\n",
      "(3, 224) [87.30338908 17.02293348  5.12857873]\n",
      "(3, 224) [87.30371963 17.02308481  5.1285526 ]\n",
      "(3, 224) [87.30404714 17.02326063  5.12851893]\n",
      "(3, 224) [87.30430571 17.02337179  5.12850069]\n",
      "(3, 224) [87.30452377 17.02350556  5.12847326]\n",
      "(3, 224) [87.30460363 17.0236588   5.12843188]\n",
      "(3, 224) [87.30491257 17.02381465  5.12840318]\n",
      "(3, 224) [87.30489399 17.02395364  5.12836032]\n",
      "(3, 224) [87.30495934 17.02404191  5.12833763]\n",
      "(3, 224) [87.30501927 17.0241398   5.12831173]\n",
      "(3, 224) [87.30474362 17.02425507  5.12826093]\n",
      "(3, 224) [87.30470915 17.02437776  5.12822205]\n",
      "(3, 224) [87.30469735 17.02451236  5.12818093]\n",
      "(3, 224) [87.30463136 17.02461884  5.12814507]\n",
      "(3, 224) [87.30467856 17.02474611  5.1281096 ]\n",
      "(3, 224) [87.3049937  17.02487665  5.12808886]\n",
      "(3, 224) [87.30518363 17.02499853  5.12806337]\n",
      "(3, 224) [87.30518709 17.02516273  5.12801415]\n",
      "(3, 224) [87.30525516 17.02530945  5.12797398]\n",
      "(3, 224) [87.30537978 17.02546339  5.12793495]\n",
      "(3, 224) [87.30549359 17.02560834  5.12789799]\n",
      "(3, 224) [87.30537366 17.02575532  5.12784669]\n",
      "(3, 224) [87.30564908 17.02593261  5.12780953]\n",
      "(3, 224) [87.30587244 17.02608514  5.12777673]\n",
      "(3, 224) [87.30634873 17.02623939  5.12775828]\n",
      "(3, 224) [87.30651425 17.02638893  5.12772299]\n",
      "(3, 224) [87.3069232  17.02652651  5.12770559]\n",
      "(3, 224) [87.30731898 17.02665162  5.12769118]\n",
      "(3, 224) [87.30773341 17.02678026  5.12767679]\n",
      "(3, 224) [87.30788214 17.0268753   5.1276569 ]\n",
      "(3, 224) [87.30817829 17.02698593  5.12764099]\n",
      "(3, 224) [87.30802123 17.02710089  5.12759714]\n",
      "(3, 224) [87.30773428 17.02720627  5.12754854]\n",
      "(3, 224) [87.30779124 17.02730087  5.12752338]\n",
      "(3, 224) [87.30772206 17.02738338  5.12749447]\n",
      "(3, 224) [87.30777649 17.02748343  5.1274675 ]\n",
      "(3, 224) [87.30791678 17.02753649  5.12745975]\n",
      "(3, 224) [87.30776812 17.02760739  5.12742963]\n",
      "(3, 224) [87.30792861 17.02769016  5.12741411]\n",
      "(3, 224) [87.30782333 17.02775082  5.12738963]\n",
      "(3, 224) [87.3079955  17.02780797  5.12738252]\n",
      "(3, 224) [87.30824935 17.02786734  5.12737954]\n",
      "(3, 224) [87.30860019 17.02791186  5.12738673]\n",
      "(3, 224) [87.30885545 17.02795734  5.12738803]\n",
      "(3, 224) [87.30894469 17.02797874  5.12738682]\n",
      "(3, 224) [87.30905446 17.02798169  5.12739239]\n",
      "(3, 224) [87.30931582 17.02799527  5.12740366]\n",
      "(3, 224) [87.3096705  17.02804001  5.12741102]\n",
      "(3, 224) [87.30988736 17.02808364  5.12741062]\n",
      "(3, 224) [87.31030471 17.02816137  5.12741172]\n",
      "(3, 224) [87.31080381 17.02822364  5.12742228]\n",
      "(3, 224) [87.31112314 17.02830847  5.12741548]\n",
      "(3, 224) [87.31137312 17.02838849  5.12740605]\n",
      "(3, 224) [87.31146758 17.02847739  5.12738478]\n",
      "(3, 224) [87.31185789 17.02858495  5.12737529]\n",
      "(3, 224) [87.31207667 17.02871221  5.12734976]\n",
      "(3, 224) [87.31249939 17.02882103  5.12734178]\n",
      "(3, 224) [87.31296412 17.02895048  5.12733004]\n",
      "(3, 224) [87.31337288 17.02907161  5.12731754]\n",
      "(3, 224) [87.31387846 17.02919264  5.12731075]\n",
      "(3, 224) [87.31401566 17.02932456  5.12727902]\n",
      "(3, 224) [87.31418804 17.02943951  5.12725448]\n",
      "(3, 224) [87.31448938 17.02954307  5.12724097]\n",
      "(3, 224) [87.3146101  17.02965169  5.12721532]\n",
      "(3, 224) [87.31484587 17.02972914  5.12720584]\n",
      "(3, 224) [87.31532645 17.02982044  5.12720656]\n",
      "(3, 224) [87.31555494 17.02989398  5.12719783]\n",
      "(3, 224) [87.31598092 17.02998521  5.12719536]\n",
      "(3, 224) [87.31634313 17.03007979  5.12718814]\n",
      "(3, 224) [87.31668616 17.03017125  5.12718073]\n",
      "(3, 224) [87.3170634  17.03025797  5.12717676]\n",
      "(3, 224) [87.31714824 17.03035042  5.12715387]\n",
      "(3, 224) [87.31725073 17.03040536  5.12714334]\n",
      "(3, 224) [87.31732087 17.03045899  5.12713131]\n",
      "(3, 224) [87.31749903 17.03047687  5.12713639]\n",
      "(3, 224) [87.31755904 17.03049981  5.127133  ]\n",
      "(3, 224) [87.31757221 17.03051985  5.12712773]\n",
      "(3, 224) [87.31746422 17.03054998  5.12711231]\n",
      "(3, 224) [87.31719509 17.03062113  5.12707504]\n",
      "(3, 224) [87.31696839 17.0307036   5.12703685]\n",
      "(3, 224) [87.31673147 17.03079075  5.12699665]\n",
      "(3, 224) [87.31629031 17.03087072  5.12694661]\n",
      "(3, 224) [87.31610174 17.03093357  5.12691657]\n",
      "(3, 224) [87.31596474 17.03100022  5.12688842]\n",
      "(3, 224) [87.31575961 17.0310683   5.12685581]\n",
      "(3, 224) [87.31521878 17.03113554  5.12680372]\n",
      "(3, 224) [87.31481359 17.03121098  5.12675714]\n",
      "(3, 224) [87.3143847  17.03127556  5.12671243]\n",
      "(3, 224) [87.31412765 17.03134163  5.12667738]\n",
      "(3, 224) [87.31359208 17.0314174   5.12662303]\n",
      "(3, 224) [87.31325676 17.03148272  5.12658361]\n",
      "(3, 224) [87.31275901 17.03155459  5.12653267]\n",
      "(3, 224) [87.31227894 17.03160063  5.12649056]\n",
      "(3, 224) [87.31192142 17.03165187  5.1264541 ]\n",
      "(3, 224) [87.3115233  17.03169518  5.12641763]\n",
      "(3, 224) [87.31080446 17.03174239  5.12636114]\n",
      "(3, 224) [87.31037081 17.03178253  5.12632354]\n",
      "(3, 224) [87.3096862  17.03183065  5.12626878]\n",
      "(3, 224) [87.3090249  17.03188332  5.12621401]\n",
      "(3, 224) [87.30831918 17.03193254  5.12615767]\n",
      "(3, 224) [87.30758546 17.0319819   5.12609964]\n",
      "(3, 224) [87.30671785 17.03202001  5.12603714]\n",
      "(3, 224) [87.30598949 17.03205585  5.1259835 ]\n",
      "(3, 224) [87.30504171 17.03209413  5.12591623]\n",
      "(3, 224) [87.30432669 17.03213332  5.12586236]\n",
      "(3, 224) [87.30339136 17.03211441  5.12581306]\n",
      "(3, 224) [87.30271432 17.03210323  5.12577662]\n",
      "(3, 224) [87.30189348 17.0320655   5.12573973]\n",
      "(3, 224) [87.30084401 17.03204012  5.12568569]\n",
      "(3, 224) [87.29999407 17.03202551  5.12564014]\n",
      "(3, 224) [87.29933541 17.03201551  5.12560444]\n",
      "(3, 224) [87.29858932 17.03202114  5.12555888]\n",
      "(3, 224) [87.29800021 17.03202097  5.12552431]\n",
      "(3, 224) [87.29728803 17.03201452  5.12548438]\n",
      "(3, 224) [87.29667232 17.03202739  5.12544431]\n",
      "(3, 224) [87.29611498 17.03205463  5.12540333]\n",
      "(3, 224) [87.2955433  17.03207472  5.12536367]\n",
      "(3, 224) [87.29512329 17.03208819  5.12533493]\n",
      "(3, 224) [87.2947586  17.03209621  5.12531108]\n",
      "(3, 224) [87.29448955 17.03212585  5.12528633]\n",
      "(3, 224) [87.29390525 17.03214805  5.12524529]\n",
      "(3, 224) [87.29337406 17.03216125  5.12521008]\n",
      "(3, 224) [87.29265388 17.0321819   5.12516153]\n",
      "(3, 224) [87.29205753 17.03220652  5.12511906]\n",
      "(3, 224) [87.29140718 17.03225671  5.12506572]\n",
      "(3, 224) [87.29085307 17.03227269  5.12502836]\n",
      "(3, 224) [87.29020633 17.03230508  5.12498061]\n",
      "(3, 224) [87.28977364 17.0323591   5.12493892]\n",
      "(3, 224) [87.28902418 17.03236354  5.12489355]\n",
      "(3, 224) [87.28830675 17.03232818  5.12486205]\n",
      "(3, 224) [87.2875206  17.03227129  5.124833  ]\n",
      "(3, 224) [87.2867319  17.03223081  5.12479886]\n",
      "(3, 224) [87.28609788 17.0321742   5.12477866]\n",
      "(3, 224) [87.28532334 17.03206051  5.12476741]\n",
      "(3, 224) [87.28435956 17.03197758  5.12473578]\n",
      "(3, 224) [87.2836331  17.03187435  5.12472419]\n",
      "(3, 224) [87.28282424 17.03175409  5.1247129 ]\n",
      "(3, 224) [87.28205488 17.03159463  5.12471574]\n",
      "(3, 224) [87.28129151 17.03145117  5.12471408]\n",
      "(3, 224) [87.28065793 17.0313136   5.1247183 ]\n",
      "(3, 224) [87.27971337 17.03119872  5.12469742]\n",
      "(3, 224) [87.27893895 17.03107005  5.12469067]\n",
      "(3, 224) [87.27810484 17.03089787  5.1246935 ]\n",
      "(3, 224) [87.27692356 17.03069918  5.12468394]\n",
      "(3, 224) [87.27608264 17.03044656  5.1247106 ]\n",
      "(3, 224) [87.27535754 17.03017888  5.12474863]\n",
      "(3, 224) [87.27456864 17.02991079  5.12478303]\n",
      "(3, 224) [87.27358617 17.02959608  5.12482023]\n",
      "(3, 224) [87.27276308 17.0292832   5.12486622]\n",
      "(3, 224) [87.27183771 17.02904141  5.12488475]\n",
      "(3, 224) [87.27059107 17.02875278  5.12489859]\n",
      "(3, 224) [87.26961328 17.02845889  5.1249298 ]\n",
      "(3, 224) [87.26860188 17.02819458  5.12495011]\n",
      "(3, 224) [87.26743967 17.02793572  5.1249599 ]\n",
      "(3, 224) [87.2660945  17.0276942   5.12495367]\n",
      "(3, 224) [87.26511151 17.02751103  5.12495114]\n",
      "(3, 224) [87.26414608 17.0272984   5.12495852]\n",
      "(3, 224) [87.26304229 17.02708678  5.12495745]\n",
      "(3, 224) [87.2618467  17.0268423   5.12496089]\n",
      "(3, 224) [87.26034535 17.0266194   5.12493984]\n",
      "(3, 224) [87.25903002 17.02641442  5.12492432]\n",
      "(3, 224) [87.25806192 17.0261105   5.12495912]\n",
      "(3, 224) [87.25707126 17.02579961  5.12499468]\n",
      "(3, 224) [87.25589729 17.02549377  5.12501795]\n",
      "(3, 224) [87.2546453  17.02521413  5.12502868]\n",
      "(3, 224) [87.25332871 17.02494735  5.12503171]\n",
      "(3, 224) [87.25206258 17.024626    5.12505421]\n",
      "(3, 224) [87.25089862 17.02432308  5.12507715]\n",
      "(3, 224) [87.24975421 17.02402893  5.12509858]\n",
      "(3, 224) [87.24834777 17.02373604  5.1251042 ]\n",
      "(3, 224) [87.24721886 17.02342643  5.12513125]\n",
      "(3, 224) [87.24575845 17.0231168   5.1251388 ]\n",
      "(3, 224) [87.24447526 17.02280923  5.12515618]\n",
      "(3, 224) [87.24310013 17.02251331  5.12516459]\n",
      "(3, 224) [87.24184282 17.02222178  5.12517861]\n",
      "(3, 224) [87.24098916 17.02190176  5.12522501]\n",
      "(3, 224) [87.23974859 17.02159207  5.12524553]\n",
      "(3, 224) [87.2387226  17.02128376  5.12527823]\n",
      "(3, 224) [87.23771555 17.02098935  5.12530788]\n",
      "(3, 224) [87.23691579 17.02066049  5.12536014]\n",
      "(3, 224) [87.2358358  17.02034501  5.12539186]\n",
      "(3, 224) [87.23475326 17.0200184   5.12542682]\n",
      "(3, 224) [87.23365734 17.01965458  5.12547226]\n",
      "(3, 224) [87.23265959 17.01928421  5.12552547]\n",
      "(3, 224) [87.23157666 17.01891006  5.12557476]\n",
      "(3, 224) [87.23019589 17.0185273   5.12560914]\n",
      "(3, 224) [87.22903548 17.01813186  5.12566031]\n",
      "(3, 224) [87.22792745 17.01776551  5.12570581]\n",
      "(3, 224) [87.22680084 17.01738805  5.12575357]\n",
      "(3, 224) [87.22555822 17.01701375  5.12579355]\n",
      "(3, 224) [87.22451538 17.01663502  5.1258466 ]\n",
      "(3, 224) [87.22327813 17.01621436  5.12590089]\n",
      "(3, 224) [87.2220764  17.01574244  5.12597269]\n",
      "(3, 224) [87.22078354 17.0152623   5.12604163]\n",
      "(3, 224) [87.21969741 17.01480237  5.12611664]\n",
      "(3, 224) [87.2186362  17.01434083  5.12619355]\n",
      "(3, 224) [87.21764617 17.01390428  5.12626708]\n",
      "(3, 224) [87.21671465 17.01347526  5.12634175]\n",
      "(3, 224) [87.21558988 17.01305381  5.12640281]\n",
      "(3, 224) [87.21464242 17.0126373   5.12647278]\n",
      "(3, 224) [87.21375226 17.01222208  5.12654575]\n",
      "(3, 224) [87.21303004 17.01177679  5.12663774]\n",
      "(3, 224) [87.21222585 17.0113341   5.1267241 ]\n",
      "(3, 224) [87.2113139  17.01088622  5.12680569]\n",
      "(3, 224) [87.21037957 17.01045641  5.12688053]\n",
      "(3, 224) [87.20964906 17.00996987  5.12698444]\n",
      "(3, 224) [87.20905194 17.00947045  5.12710003]\n",
      "(3, 224) [87.20815321 17.00897031  5.12719808]\n",
      "(3, 224) [87.20749377 17.00845264  5.12731539]\n",
      "(3, 224) [87.20695798 17.00793604  5.12743968]\n",
      "(3, 224) [87.20634643 17.00743144  5.12755585]\n",
      "(3, 224) [87.20566527 17.00694076  5.12766374]\n",
      "(3, 224) [87.20517433 17.00644513  5.12778442]\n",
      "(3, 224) [87.2046588  17.00594535  5.12790492]\n",
      "(3, 224) [87.20411513 17.00546583  5.12801763]\n",
      "(3, 224) [87.2034604  17.00499873  5.12812012]\n",
      "(3, 224) [87.20291665 17.00453391  5.12822844]\n",
      "(3, 224) [87.20236305 17.0040599   5.128339  ]\n",
      "(3, 224) [87.20181883 17.00359584  5.12844711]\n",
      "(3, 224) [87.20137158 17.00310228  5.12856978]\n",
      "(3, 224) [87.20082041 17.00264641  5.12867495]\n",
      "(3, 224) [87.20028839 17.00219601  5.12877962]\n",
      "(3, 224) [87.19972566 17.00173465  5.12888582]\n",
      "(3, 224) [87.19896855 17.00129033  5.12897544]\n",
      "(3, 224) [87.19855965 17.00085057  5.12908418]\n",
      "(3, 224) [87.19793506 17.00042802  5.12917501]\n",
      "(3, 224) [87.19738696 17.00000502  5.12927042]\n",
      "(3, 224) [87.19703785 16.99960627  5.12937023]\n",
      "(3, 224) [87.19700831 16.99921154  5.12948765]\n",
      "(3, 224) [87.1972329  16.99880591  5.12962324]\n",
      "(3, 224) [87.19739255 16.99839086  5.12975785]\n",
      "(3, 224) [87.19756665 16.99798842  5.12988947]\n",
      "(3, 224) [87.19774809 16.9975983   5.13001789]\n",
      "(3, 224) [87.19811499 16.99722085  5.13015337]\n",
      "(3, 224) [87.19841133 16.99683817  5.13028616]\n",
      "(3, 224) [87.19890757 16.99648121  5.13042296]\n",
      "(3, 224) [87.19920264 16.99610705  5.13055306]\n",
      "(3, 224) [87.19964768 16.9957564   5.13068496]\n",
      "(3, 224) [87.19973664 16.99541605  5.13079276]\n",
      "(3, 224) [87.19969868 16.99507609  5.13089302]\n",
      "(3, 224) [87.19950071 16.99477973  5.13097069]\n",
      "(3, 224) [87.19946591 16.9944758   5.13106028]\n",
      "(3, 224) [87.19919714 16.9941846   5.13113229]\n",
      "(3, 224) [87.19911612 16.99391305  5.13120942]\n",
      "(3, 224) [87.19903542 16.99365652  5.13128203]\n",
      "(3, 224) [87.19914449 16.99340497  5.13136429]\n",
      "(3, 224) [87.19918882 16.99315184  5.13144316]\n",
      "(3, 224) [87.1993358  16.99292079  5.13152146]\n",
      "(3, 224) [87.19930895 16.99270227  5.13158575]\n",
      "(3, 224) [87.19942888 16.99248904  5.13165706]\n",
      "(3, 224) [87.19936704 16.99229684  5.13171138]\n",
      "(3, 224) [87.19944872 16.99212553  5.13176781]\n",
      "(3, 224) [87.1993547  16.99195201  5.1318146 ]\n",
      "(3, 224) [87.19922233 16.99180968  5.13184972]\n",
      "(3, 224) [87.19923412 16.99165212  5.1318979 ]\n",
      "(3, 224) [87.19926989 16.9914886   5.13194927]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 14%|██████████▎                                                               | 10684/76339 [00:04<00:27, 2350.18it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(3, 224) [87.19932311 16.99131484  5.13200477]\n",
      "(3, 224) [87.19925562 16.99113163  5.13205607]\n",
      "(3, 224) [87.19957296 16.99095943  5.13212667]\n",
      "(3, 224) [87.19958202 16.99079374  5.1321772 ]\n",
      "(3, 224) [87.19958351 16.99066581  5.13221591]\n",
      "(3, 224) [87.19974076 16.99054036  5.13226301]\n",
      "(3, 224) [87.19976748 16.99041025  5.13230385]\n",
      "(3, 224) [87.20009044 16.99028511  5.13236062]\n",
      "(3, 224) [87.20010451 16.9901607   5.132399  ]\n",
      "(3, 224) [87.20019936 16.99002836  5.13244454]\n",
      "(3, 224) [87.20019459 16.98990791  5.13248065]\n",
      "(3, 224) [87.20052557 16.98978263  5.13253797]\n",
      "(3, 224) [87.20082036 16.98967463  5.13258794]\n",
      "(3, 224) [87.20108749 16.98958308  5.13263132]\n",
      "(3, 224) [87.20134771 16.9894777   5.13267848]\n",
      "(3, 224) [87.20142813 16.98937418  5.13271448]\n",
      "(3, 224) [87.20180476 16.98928431  5.13276377]\n",
      "(3, 224) [87.20208507 16.98917627  5.13281287]\n",
      "(3, 224) [87.20204743 16.9890653   5.13284416]\n",
      "(3, 224) [87.20212801 16.98893787  5.13288736]\n",
      "(3, 224) [87.2022981  16.98881231  5.13293526]\n",
      "(3, 224) [87.20237281 16.98867837  5.13298009]\n",
      "(3, 224) [87.20262004 16.98854418  5.13303516]\n",
      "(3, 224) [87.20259923 16.98837978  5.13308357]\n",
      "(3, 224) [87.20252504 16.98824549  5.13311976]\n",
      "(3, 224) [87.20223359 16.98810021  5.13314648]\n",
      "(3, 224) [87.20224133 16.98798346  5.13318217]\n",
      "(3, 224) [87.20204706 16.98785999  5.13320802]\n",
      "(3, 224) [87.20204803 16.98772818  5.13324785]\n",
      "(3, 224) [87.20220991 16.98761027  5.13329295]\n",
      "(3, 224) [87.20237828 16.98749034  5.13333904]\n",
      "(3, 224) [87.20271677 16.98737282  5.1333944 ]\n",
      "(3, 224) [87.20285386 16.98726864  5.13343389]\n",
      "(3, 224) [87.20281739 16.98715017  5.1334675 ]\n",
      "(3, 224) [87.20308029 16.98702754  5.13351996]\n",
      "(3, 224) [87.20305451 16.98688814  5.13356053]\n",
      "(3, 224) [87.20296694 16.98674046  5.13359995]\n",
      "(3, 224) [87.20303445 16.98660409  5.13364508]\n",
      "(3, 224) [87.20295008 16.98648212  5.13367693]\n",
      "(3, 224) [87.20330117 16.98635611  5.1337356 ]\n",
      "(3, 224) [87.20347665 16.98623098  5.13378367]\n",
      "(3, 224) [87.20386196 16.98610665  5.13384384]\n",
      "(3, 224) [87.20384228 16.98600231  5.13387418]\n",
      "(3, 224) [87.20391324 16.98588074  5.13391505]\n",
      "(3, 224) [87.20396995 16.98573771  5.13396157]\n",
      "(3, 224) [87.2042875  16.98560911  5.13401906]\n",
      "(3, 224) [87.204404   16.98545784  5.13407155]\n",
      "(3, 224) [87.20456064 16.98530987  5.13412541]\n",
      "(3, 224) [87.20480721 16.98516322  5.13418415]\n",
      "(3, 224) [87.20511606 16.98502059  5.13424534]\n",
      "(3, 224) [87.20546259 16.98489266  5.13430434]\n",
      "(3, 224) [87.20568665 16.98476332  5.13435657]\n",
      "(3, 224) [87.2056352  16.98467326  5.13438071]\n",
      "(3, 224) [87.20576961 16.98458808  5.13441431]\n",
      "(3, 224) [87.20575903 16.984502    5.13443965]\n",
      "(3, 224) [87.20596145 16.98443233  5.13447257]\n",
      "(3, 224) [87.20630535 16.98435783  5.13451528]\n",
      "(3, 224) [87.2065658  16.98425837  5.1345606 ]\n",
      "(3, 224) [87.20694319 16.98416594  5.13461069]\n",
      "(3, 224) [87.20726921 16.98406477  5.13466038]\n",
      "(3, 224) [87.20772174 16.98399198  5.13470894]\n",
      "(3, 224) [87.20812768 16.98391013  5.1347575 ]\n",
      "(3, 224) [87.20872145 16.98383165  5.13481609]\n",
      "(3, 224) [87.20945231 16.98373489  5.13488826]\n",
      "(3, 224) [87.21004344 16.98364406  5.13495043]\n",
      "(3, 224) [87.2106248  16.98355196  5.13501241]\n",
      "(3, 224) [87.21119769 16.9834582   5.13507439]\n",
      "(3, 224) [87.21171363 16.98335669  5.13513537]\n",
      "(3, 224) [87.21232208 16.98325082  5.13520311]\n",
      "(3, 224) [87.21325982 16.98315792  5.1352863 ]\n",
      "(3, 224) [87.21403369 16.98303638  5.13536852]\n",
      "(3, 224) [87.21494667 16.98293121  5.13545397]\n",
      "(3, 224) [87.21582642 16.98283078  5.13553604]\n",
      "(3, 224) [87.21676334 16.98278263  5.13560571]\n",
      "(3, 224) [87.21780667 16.9827051   5.1356905 ]\n",
      "(3, 224) [87.21862669 16.98263479  5.13575998]\n",
      "(3, 224) [87.2195861  16.98254363  5.13584393]\n",
      "(3, 224) [87.22027972 16.98243941  5.13591618]\n",
      "(3, 224) [87.2211092  16.98233777  5.13599566]\n",
      "(3, 224) [87.22192497 16.98223283  5.13607532]\n",
      "(3, 224) [87.22271462 16.98212777  5.13615349]\n",
      "(3, 224) [87.22325128 16.98203723  5.13621239]\n",
      "(3, 224) [87.22392736 16.98194066  5.13628131]\n",
      "(3, 224) [87.224587   16.98182483  5.13635507]\n",
      "(3, 224) [87.22518609 16.98171213  5.13642432]\n",
      "(3, 224) [87.22577052 16.98159225  5.13649488]\n",
      "(3, 224) [87.22635195 16.98147239  5.13656526]\n",
      "(3, 224) [87.22659494 16.9813499   5.13661652]\n",
      "(3, 224) [87.22704363 16.98122685  5.13668006]\n",
      "(3, 224) [87.22741731 16.98109977  5.13674039]\n",
      "(3, 224) [87.22810886 16.98096773  5.13682092]\n",
      "(3, 224) [87.22873441 16.98084397  5.13689505]\n",
      "(3, 224) [87.22908671 16.98069341  5.13696118]\n",
      "(3, 224) [87.22953089 16.9805395   5.13703372]\n",
      "(3, 224) [87.23018023 16.98036807  5.13712361]\n",
      "(3, 224) [87.23056177 16.98018699  5.13720067]\n",
      "(3, 224) [87.23116466 16.98004146  5.13728003]\n",
      "(3, 224) [87.23166618 16.97992606  5.13734434]\n",
      "(3, 224) [87.2322087  16.97982675  5.13740621]\n",
      "(3, 224) [87.23254708 16.97971962  5.13745842]\n",
      "(3, 224) [87.23298542 16.97961058  5.13751709]\n",
      "(3, 224) [87.23316229 16.97957795  5.13753734]\n",
      "(3, 224) [87.23338785 16.97952222  5.13756741]\n",
      "(3, 224) [87.23362676 16.97946845  5.13759768]\n",
      "(3, 224) [87.23390959 16.9794145   5.13763059]\n",
      "(3, 224) [87.23398474 16.97937262  5.13764764]\n",
      "(3, 224) [87.23419715 16.97929813  5.1376826 ]\n",
      "(3, 224) [87.2342236  16.9792206   5.13770755]\n",
      "(3, 224) [87.23443337 16.97914747  5.13774195]\n",
      "(3, 224) [87.2346018  16.97906689  5.13777616]\n",
      "(3, 224) [87.23485608 16.97899418  5.13781305]\n",
      "(3, 224) [87.23504829 16.97891642  5.13784781]\n",
      "(3, 224) [87.2350203  16.97886864  5.13786058]\n",
      "(3, 224) [87.23494154 16.97882903  5.13786791]\n",
      "(3, 224) [87.23496115 16.97879468  5.13787944]\n",
      "(3, 224) [87.23506912 16.97885419  5.13786781]\n",
      "(3, 224) [87.2349072  16.97891567  5.13783969]\n",
      "(3, 224) [87.23477663 16.9789317   5.13782717]\n",
      "(3, 224) [87.2345936  16.97901748  5.13779047]\n",
      "(3, 224) [87.23447936 16.97910711  5.13775666]\n",
      "(3, 224) [87.23439365 16.97917995  5.13772961]\n",
      "(3, 224) [87.23447776 16.97929079  5.13770109]\n",
      "(3, 224) [87.23462855 16.9794095   5.13767416]\n",
      "(3, 224) [87.23453156 16.97949207  5.13764355]\n",
      "(3, 224) [87.23443118 16.97961638  5.13760016]\n",
      "(3, 224) [87.23451372 16.97973278  5.13756992]\n",
      "(3, 224) [87.23455368 16.97986704  5.13753178]\n",
      "(3, 224) [87.2350143  16.9799821   5.13752419]\n",
      "(3, 224) [87.2355335  16.98007783  5.13752586]\n",
      "(3, 224) [87.2358055  16.98026386  5.13748568]\n",
      "(3, 224) [87.23631929 16.98045631  5.13745779]\n",
      "(3, 224) [87.23689013 16.98063683  5.13743685]\n",
      "(3, 224) [87.23741496 16.98077146  5.13742709]\n",
      "(3, 224) [87.23786742 16.98087605  5.13742215]\n",
      "(3, 224) [87.23843341 16.98102725  5.1374098 ]\n",
      "(3, 224) [87.23886094 16.98117103  5.13739154]\n",
      "(3, 224) [87.23923261 16.98131347  5.13737041]\n",
      "(3, 224) [87.23979272 16.98143968  5.13736528]\n",
      "(3, 224) [87.24013395 16.98158707  5.13734084]\n",
      "(3, 224) [87.24051555 16.98173932  5.13731733]\n",
      "(3, 224) [87.24075456 16.9818919   5.13728531]\n",
      "(3, 224) [87.24122629 16.98203255  5.13727062]\n",
      "(3, 224) [87.24173785 16.98217462  5.13725782]\n",
      "(3, 224) [87.24182699 16.9823414   5.13721266]\n",
      "(3, 224) [87.24219974 16.98249907  5.13718697]\n",
      "(3, 224) [87.24257172 16.98265849  5.13716071]\n",
      "(3, 224) [87.24273343 16.98280756  5.13712519]\n",
      "(3, 224) [87.24283756 16.98299066  5.13707596]\n",
      "(3, 224) [87.24315144 16.98316979  5.13704032]\n",
      "(3, 224) [87.24353367 16.98335483  5.13700689]\n",
      "(3, 224) [87.24401641 16.98356352  5.13697219]\n",
      "(3, 224) [87.24446521 16.98377733  5.13693393]\n",
      "(3, 224) [87.24486342 16.98396237  5.13690141]\n",
      "(3, 224) [87.24534693 16.98414669  5.13687414]\n",
      "(3, 224) [87.24583483 16.98435476  5.13683994]\n",
      "(3, 224) [87.24623194 16.98455629  5.13680235]\n",
      "(3, 224) [87.24673428 16.98474882  5.13677368]\n",
      "(3, 224) [87.24715652 16.98491895  5.13674707]\n",
      "(3, 224) [87.24756894 16.98508778  5.13672027]\n",
      "(3, 224) [87.24786167 16.98528199  5.13667874]\n",
      "(3, 224) [87.24829253 16.98548105  5.13664387]\n",
      "(3, 224) [87.24863593 16.9856938   5.13659971]\n",
      "(3, 224) [87.24872984 16.98590544  5.1365412 ]\n",
      "(3, 224) [87.24887016 16.98612479  5.13648312]\n",
      "(3, 224) [87.24912335 16.98635925  5.13642715]\n",
      "(3, 224) [87.24940409 16.98657356  5.13637888]\n",
      "(3, 224) [87.24960734 16.98675801  5.13633508]\n",
      "(3, 224) [87.2496325  16.98694611  5.13627969]\n",
      "(3, 224) [87.24965559 16.98714121  5.13622206]\n",
      "(3, 224) [87.24968714 16.98734826  5.13616125]\n",
      "(3, 224) [87.24969952 16.98756182  5.13609737]\n",
      "(3, 224) [87.25007947 16.98779118  5.13605034]\n",
      "(3, 224) [87.25019919 16.98800454  5.13599284]\n",
      "(3, 224) [87.2500871  16.98823651  5.13591606]\n",
      "(3, 224) [87.24997291 16.98847491  5.1358372 ]\n",
      "(3, 224) [87.25007106 16.98870545  5.13577325]\n",
      "(3, 224) [87.2503675  16.98892904  5.13572307]\n",
      "(3, 224) [87.25037569 16.9891869   5.13564558]\n",
      "(3, 224) [87.25043712 16.98942784  5.13557636]\n",
      "(3, 224) [87.25053345 16.98966566  5.13551014]\n",
      "(3, 224) [87.25048213 16.98991179  5.13543265]\n",
      "(3, 224) [87.2503788  16.99017909  5.13534572]\n",
      "(3, 224) [87.25045798 16.99042248  5.13527676]\n",
      "(3, 224) [87.25052645 16.99066872  5.1352063 ]\n",
      "(3, 224) [87.25060116 16.99091677  5.13513566]\n",
      "(3, 224) [87.25049065 16.99117795  5.13505013]\n",
      "(3, 224) [87.25039569 16.99143845  5.13496572]\n",
      "(3, 224) [87.25040292 16.99169439  5.1348887 ]\n",
      "(3, 224) [87.25021607 16.99195151  5.13479996]\n",
      "(3, 224) [87.25005114 16.99221124  5.13471171]\n",
      "(3, 224) [87.24980232 16.99247099  5.13461849]\n",
      "(3, 224) [87.24979689 16.99274133  5.13453643]\n",
      "(3, 224) [87.24963999 16.99299828  5.13444947]\n",
      "(3, 224) [87.24955743 16.99323692  5.13437245]\n",
      "(3, 224) [87.24959136 16.99348091  5.13430069]\n",
      "(3, 224) [87.24938935 16.99369798  5.13422317]\n",
      "(3, 224) [87.24887443 16.99390617  5.13412989]\n",
      "(3, 224) [87.24816892 16.99407314  5.13403783]\n",
      "(3, 224) [87.24746116 16.99424153  5.13394522]\n",
      "(3, 224) [87.24677936 16.9943914   5.13385974]\n",
      "(3, 224) [87.24617994 16.99457139  5.13376999]\n",
      "(3, 224) [87.24527642 16.99470802  5.13367545]\n",
      "(3, 224) [87.24445464 16.99483254  5.13358942]\n",
      "(3, 224) [87.24336976 16.99494158  5.13349259]\n",
      "(3, 224) [87.24258292 16.99504668  5.1334145 ]\n",
      "(3, 224) [87.24176854 16.99515536  5.1333337 ]\n",
      "(3, 224) [87.24101075 16.99524043  5.13326339]\n",
      "(3, 224) [87.24041123 16.9953294   5.1332012 ]\n",
      "(3, 224) [87.23996253 16.99540774  5.13315114]\n",
      "(3, 224) [87.23925984 16.99550031  5.13308181]\n",
      "(3, 224) [87.23890198 16.99559804  5.13303123]\n",
      "(3, 224) [87.23834417 16.99567938  5.13297383]\n",
      "(3, 224) [87.23760705 16.99572359  5.13291708]\n",
      "(3, 224) [87.236765   16.99577923  5.13285071]\n",
      "(3, 224) [87.23598252 16.99579049  5.13280126]\n",
      "(3, 224) [87.23486822 16.99580281  5.13273195]\n",
      "(3, 224) [87.23396289 16.99578966  5.13268264]\n",
      "(3, 224) [87.23307831 16.99577184  5.13263595]\n",
      "(3, 224) [87.23256203 16.99575273  5.13261133]\n",
      "(3, 224) [87.23195145 16.99568869  5.13259474]\n",
      "(3, 224) [87.23138632 16.9956248   5.13258078]\n",
      "(3, 224) [87.23090945 16.99554759  5.13257603]\n",
      "(3, 224) [87.2304173  16.99545691  5.13257446]\n",
      "(3, 224) [87.22989369 16.99536251  5.13257216]\n",
      "(3, 224) [87.22935162 16.995277    5.13256608]\n",
      "(3, 224) [87.2287628  16.99520172  5.13255417]\n",
      "(3, 224) [87.22808904 16.99511748  5.13253998]\n",
      "(3, 224) [87.22742819 16.99504001  5.13252449]\n",
      "(3, 224) [87.22686122 16.99497213  5.13251163]\n",
      "(3, 224) [87.22629128 16.99489062  5.13250272]\n",
      "(3, 224) [87.22571085 16.9948052   5.13249438]\n",
      "(3, 224) [87.22484406 16.99472887  5.13246642]\n",
      "(3, 224) [87.22419205 16.99467422  5.13244454]\n",
      "(3, 224) [87.22333405 16.99461303  5.13241253]\n",
      "(3, 224) [87.22244583 16.99459673  5.13236516]\n",
      "(3, 224) [87.22158826 16.99459458  5.13231532]\n",
      "(3, 224) [87.22084795 16.99460007  5.13227007]\n",
      "(3, 224) [87.21998945 16.99460368  5.13221844]\n",
      "(3, 224) [87.21913423 16.99461797  5.13216377]\n",
      "(3, 224) [87.21836941 16.99459361  5.1321261 ]\n",
      "(3, 224) [87.21750522 16.99456821  5.13208291]\n",
      "(3, 224) [87.21650639 16.99455457  5.13202825]\n",
      "(3, 224) [87.21577444 16.9945217   5.1319951 ]\n",
      "(3, 224) [87.21517469 16.99450026  5.13196627]\n",
      "(3, 224) [87.21448593 16.99447039  5.13193475]\n",
      "(3, 224) [87.21385322 16.99443758  5.13190742]\n",
      "(3, 224) [87.21292407 16.99441526  5.13185946]\n",
      "(3, 224) [87.21243933 16.99441436  5.1318312 ]\n",
      "(3, 224) [87.21186471 16.99439062  5.13180455]\n",
      "(3, 224) [87.21137934 16.99435683  5.13178618]\n",
      "(3, 224) [87.21092392 16.99429472  5.13177815]\n",
      "(3, 224) [87.21032687 16.99423631  5.13176066]\n",
      "(3, 224) [87.2098995  16.99417717  5.13175338]\n",
      "(3, 224) [87.20923891 16.99411385  5.13173363]\n",
      "(3, 224) [87.2087094  16.99404728  5.13172259]\n",
      "(3, 224) [87.2081656  16.99397667  5.13171192]\n",
      "(3, 224) [87.2077649  16.99391315  5.13170753]\n",
      "(3, 224) [87.2073217  16.99385319  5.13169957]\n",
      "(3, 224) [87.20678032 16.99380211  5.13168314]\n",
      "(3, 224) [87.20608945 16.99374697  5.13165914]\n",
      "(3, 224) [87.20555965 16.99370306  5.13164122]\n",
      "(3, 224) [87.20486164 16.99364529  5.13161759]\n",
      "(3, 224) [87.20429407 16.99358034  5.13160381]\n",
      "(3, 224) [87.20354941 16.99352034  5.13157811]\n",
      "(3, 224) [87.2029279  16.99345297  5.13156188]\n",
      "(3, 224) [87.20209585 16.99339832  5.13152942]\n",
      "(3, 224) [87.20149482 16.99334054  5.1315115 ]\n",
      "(3, 224) [87.20082286 16.9932847   5.13148882]\n",
      "(3, 224) [87.20038212 16.99323515  5.13147785]\n",
      "(3, 224) [87.19975235 16.99318469  5.13145604]\n",
      "(3, 224) [87.19937685 16.99310708  5.1314574 ]\n",
      "(3, 224) [87.19896077 16.99302157  5.13145877]\n",
      "(3, 224) [87.19826448 16.99294315  5.13144147]\n",
      "(3, 224) [87.19757287 16.99286564  5.13142418]\n",
      "(3, 224) [87.1968958  16.99279105  5.13140687]\n",
      "(3, 224) [87.19625424 16.99272276  5.13138975]\n",
      "(3, 224) [87.19595947 16.99262972  5.13140052]\n",
      "(3, 224) [87.19564593 16.99253239  5.13141148]\n",
      "(3, 224) [87.19534321 16.99242555  5.13142595]\n",
      "(3, 224) [87.194895   16.99233124  5.13142807]\n",
      "(3, 224) [87.19423605 16.9922264   5.13142097]\n",
      "(3, 224) [87.19379389 16.99215109  5.1314177 ]\n",
      "(3, 224) [87.19322347 16.99207965  5.13140572]\n",
      "(3, 224) [87.19286195 16.99200947  5.13140565]\n",
      "(3, 224) [87.19258865 16.99192972  5.13141366]\n",
      "(3, 224) [87.19229498 16.9918473   5.13142129]\n",
      "(3, 224) [87.19179309 16.99175218  5.1314205 ]\n",
      "(3, 224) [87.19139008 16.99167426  5.13142034]\n",
      "(3, 224) [87.19086733 16.99160591  5.13141023]\n",
      "(3, 224) [87.19016429 16.99153492  5.1313903 ]\n",
      "(3, 224) [87.18949541 16.99146749  5.13137131]\n",
      "(3, 224) [87.18891181 16.99141332  5.13135332]\n",
      "(3, 224) [87.18854523 16.99136898  5.13134515]\n",
      "(3, 224) [87.18815403 16.99131117  5.13133961]\n",
      "(3, 224) [87.18775417 16.99126846  5.13132898]\n",
      "(3, 224) [87.18733775 16.99121695  5.13132005]\n",
      "(3, 224) [87.18673377 16.99116514  5.13130016]\n",
      "(3, 224) [87.18604052 16.99109533  5.13128045]\n",
      "(3, 224) [87.18535941 16.99102739  5.13126091]\n",
      "(3, 224) [87.18496918 16.99096362  5.13125723]\n",
      "(3, 224) [87.18452267 16.99089569  5.13125149]\n",
      "(3, 224) [87.18420121 16.99083287  5.13125157]\n",
      "(3, 224) [87.18355616 16.99076469  5.13123422]\n",
      "(3, 224) [87.18295987 16.99069957  5.13121881]\n",
      "(3, 224) [87.18216706 16.9906262   5.13119433]\n",
      "(3, 224) [87.18156108 16.99055597  5.13117989]\n",
      "(3, 224) [87.18096422 16.99047451  5.13116939]\n",
      "(3, 224) [87.18052212 16.99040313  5.13116496]\n",
      "(3, 224) [87.17990626 16.99031549  5.13115521]\n",
      "(3, 224) [87.17933956 16.99023746  5.13114545]\n",
      "(3, 224) [87.17869553 16.99014437  5.13113569]\n",
      "(3, 224) [87.17836316 16.99007108  5.13113829]\n",
      "(3, 224) [87.17806101 16.99000307  5.13114108]\n",
      "(3, 224) [87.17765915 16.98994314  5.13113555]\n",
      "(3, 224) [87.17711736 16.98988791  5.13112035]\n",
      "(3, 224) [87.17665543 16.98982524  5.13111211]\n",
      "(3, 224) [87.17635666 16.98974564  5.13111859]\n",
      "(3, 224) [87.17589133 16.98966308  5.13111617]\n",
      "(3, 224) [87.17534764 16.98959074  5.13110604]\n",
      "(3, 224) [87.1748711  16.98951966  5.13109948]\n",
      "(3, 224) [87.17445075 16.98944564  5.13109713]\n",
      "(3, 224) [87.17389421 16.98935894  5.13109058]\n",
      "(3, 224) [87.17350413 16.98926594  5.13109575]\n",
      "(3, 224) [87.1733016  16.98917503  5.13111132]\n",
      "(3, 224) [87.17281907 16.98908161  5.13111116]\n",
      "(3, 224) [87.17260629 16.98895385  5.13113726]\n",
      "(3, 224) [87.17254248 16.98885671  5.13116287]\n",
      "(3, 224) [87.1722939  16.98875545  5.13117884]\n",
      "(3, 224) [87.1718749  16.9886573   5.13118384]\n",
      "(3, 224) [87.17155969 16.98856789  5.1311923 ]\n",
      "(3, 224) [87.17122232 16.98849595  5.13119418]\n",
      "(3, 224) [87.17087238 16.98842777  5.13119418]\n",
      "(3, 224) [87.17095641 16.98836765  5.1312173 ]\n",
      "(3, 224) [87.17113968 16.98829766  5.13124925]\n",
      "(3, 224) [87.17111293 16.98822801  5.13126873]\n",
      "(3, 224) [87.17111406 16.9881698   5.13128639]\n",
      "(3, 224) [87.17110879 16.98811345  5.13130312]\n",
      "(3, 224) [87.17093529 16.98805253  5.13131132]\n",
      "(3, 224) [87.17096875 16.98800496  5.13132767]\n",
      "(3, 224) [87.17079187 16.9879444   5.13133557]\n",
      "(3, 224) [87.17086704 16.98787777  5.13136013]\n",
      "(3, 224) [87.1709843  16.98783738  5.13137924]\n",
      "(3, 224) [87.17122276 16.98778637  5.13140868]\n",
      "(3, 224) [87.17146914 16.98773499  5.1314387 ]\n",
      "(3, 224) [87.17169463 16.98768639  5.13146665]\n",
      "(3, 224) [87.17168636 16.98761354  5.13148815]\n",
      "(3, 224) [87.17186226 16.98750816  5.13153029]\n",
      "(3, 224) [87.17221624 16.9874062   5.13158189]\n",
      "(3, 224) [87.17254996 16.98726326  5.13164464]\n",
      "(3, 224) [87.17278886 16.98714671  5.13169385]\n",
      "(3, 224) [87.1729829  16.98703593  5.13173867]\n",
      "(3, 224) [87.17299193 16.98695453  5.13176375]\n",
      "(3, 224) [87.17313055 16.98685661  5.13180145]\n",
      "(3, 224) [87.17310326 16.98677207  5.13182536]\n",
      "(3, 224) [87.1729783  16.9867394   5.13182786]\n",
      "(3, 224) [87.17288615 16.98671625  5.13182942]\n",
      "(3, 224) [87.17307082 16.98672862  5.13183655]\n",
      "(3, 224) [87.17350132 16.98674878  5.13185579]\n",
      "(3, 224) [87.17386886 16.98679529  5.13186337]\n",
      "(3, 224) [87.17416583 16.98682934  5.13187056]\n",
      "(3, 224) [87.17462368 16.98685461  5.13188985]\n",
      "(3, 224) [87.17501999 16.98691039  5.13189633]\n",
      "(3, 224) [87.1754029  16.98698681  5.1318958 ]\n",
      "(3, 224) [87.17616405 16.98705788  5.13191911]\n",
      "(3, 224) [87.17653433 16.98713503  5.13191762]\n",
      "(3, 224) [87.17714978 16.98720353  5.13193314]\n",
      "(3, 224) [87.17756495 16.98725516  5.13194198]\n",
      "(3, 224) [87.17807679 16.98731572  5.13195381]\n",
      "(3, 224) [87.17858012 16.98738707  5.13196188]\n",
      "(3, 224) [87.17895818 16.98747838  5.13195658]\n",
      "(3, 224) [87.17932411 16.9876066   5.13193946]\n",
      "(3, 224) [87.17977071 16.98772927  5.13192874]\n",
      "(3, 224) [87.17996146 16.98789477  5.13189013]\n",
      "(3, 224) [87.18017875 16.98805849  5.1318536 ]\n",
      "(3, 224) [87.1801879  16.98825355  5.1317954 ]\n",
      "(3, 224) [87.18019101 16.98844993  5.13173645]\n",
      "(3, 224) [87.18013422 16.98863566  5.13167718]\n",
      "(3, 224) [87.17983737 16.98877062  5.13161907]\n",
      "(3, 224) [87.17969032 16.98890362  5.13157036]\n",
      "(3, 224) [87.17936773 16.98905124  5.13150694]\n",
      "(3, 224) [87.17902354 16.98918591  5.13144611]\n",
      "(3, 224) [87.17880838 16.98935064  5.13138382]\n",
      "(3, 224) [87.1786967  16.98951062  5.13132902]\n",
      "(3, 224) [87.17850048 16.98967034  5.13126937]\n",
      "(3, 224) [87.17830137 16.98982706  5.13121042]\n",
      "(3, 224) [87.17814005 16.98997984  5.13115492]\n",
      "(3, 224) [87.17813836 16.99014637  5.13110467]\n",
      "(3, 224) [87.17838597 16.99027391  5.1310808 ]\n",
      "(3, 224) [87.17828502 16.99033141  5.13105755]\n",
      "(3, 224) [87.17797578 16.99039077  5.13102149]\n",
      "(3, 224) [87.17791152 16.99048568  5.13098911]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 15%|██████████▊                                                               | 11182/76339 [00:04<00:28, 2290.25it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "(3, 224) [87.1780646  16.99056972  5.13097279]\n",
      "(3, 224) [87.17819488 16.99063868  5.13095967]\n",
      "(3, 224) [87.17810279 16.99072492  5.13092825]\n",
      "(3, 224) [87.1781836  16.9907804   5.13091627]\n",
      "(3, 224) [87.1779483  16.9908418   5.13088392]\n",
      "(3, 224) [87.17793327 16.99090357  5.13086442]\n",
      "(3, 224) [87.17794848 16.99096818  5.13084584]\n",
      "(3, 224) [87.1779369  16.99103759  5.13082425]\n",
      "(3, 224) [87.17801967 16.99112463  5.13080289]\n",
      "(3, 224) [87.17802332 16.99123068  5.13077115]\n",
      "(3, 224) [87.17810174 16.99129147  5.13075745]\n",
      "(3, 224) [87.17836379 16.9913528   5.13075438]\n",
      "(3, 224) [87.17859968 16.99141653  5.13074905]\n",
      "(3, 224) [87.17872363 16.99147473  5.1307388 ]\n",
      "(3, 224) [87.17885689 16.99157542  5.13071632]\n",
      "(3, 224) [87.17880808 16.99167124  5.1306846 ]\n",
      "(3, 224) [87.17898468 16.99176819  5.13066577]\n",
      "(3, 224) [87.17899183 16.99189662  5.13062752]\n",
      "(3, 224) [87.17940611 16.9920053   5.13061914]\n",
      "(3, 224) [87.17976375 16.99214873  5.13059698]\n",
      "(3, 224) [87.17995156 16.99230983  5.13055952]\n",
      "(3, 224) [87.18054208 16.99252344  5.13052998]\n",
      "(3, 224) [87.18096397 16.99269079  5.13050442]\n",
      "(3, 224) [87.18135556 16.99283463  5.13048415]\n",
      "(3, 224) [87.18168135 16.99297492  5.13046108]\n",
      "(3, 224) [87.18197567 16.99311475  5.13043629]\n",
      "(3, 224) [87.18243354 16.99325574  5.13042076]\n",
      "(3, 224) [87.18262716 16.99338169  5.13039423]\n",
      "(3, 224) [87.18296393 16.99353106  5.13036907]\n",
      "(3, 224) [87.18347117 16.99368798  5.13035164]\n",
      "(3, 224) [87.18389609 16.99387389  5.13032066]\n",
      "(3, 224) [87.18455688 16.99406929  5.13030066]\n",
      "(3, 224) [87.18511137 16.9942516   5.13027836]\n",
      "(3, 224) [87.18562838 16.99442229  5.13025734]\n",
      "(3, 224) [87.18648097 16.99459994  5.13025393]\n",
      "(3, 224) [87.18726268 16.99480981  5.1302367 ]\n",
      "(3, 224) [87.18808451 16.99501004  5.13022472]\n",
      "(3, 224) [87.18894863 16.99518627  5.13022242]\n",
      "(3, 224) [87.18958252 16.99535592  5.13020858]\n",
      "(3, 224) [87.19029854 16.99551904  5.13020154]\n",
      "(3, 224) [87.19086857 16.995685    5.13018506]\n",
      "(3, 224) [87.19155907 16.99584704  5.13017684]\n",
      "(3, 224) [87.19238299 16.99599236  5.1301815 ]\n",
      "(3, 224) [87.19296043 16.99613112  5.13017364]\n",
      "(3, 224) [87.1935752  16.99627015  5.13016789]\n",
      "(3, 224) [87.19448135 16.99642732  5.1301738 ]\n",
      "(3, 224) [87.19532628 16.99656903  5.13018078]\n",
      "(3, 224) [87.19610774 16.99674267  5.13017442]\n",
      "(3, 224) [87.19716277 16.99690126  5.13018866]\n",
      "(3, 224) [87.19815986 16.99708024  5.13019334]\n",
      "(3, 224) [87.19915662 16.99726248  5.13019703]\n",
      "(3, 224) [87.19968222 16.99739871  5.13018685]\n",
      "(3, 224) [87.2004337  16.99756288  5.13018151]\n",
      "(3, 224) [87.201145   16.9977298   5.13017297]\n",
      "(3, 224) [87.20183404 16.99786195  5.13017362]\n",
      "(3, 224) [87.20241364 16.9980034   5.13016501]\n",
      "(3, 224) [87.20325881 16.9981478   5.13017113]\n",
      "(3, 224) [87.20387934 16.99831353  5.1301576 ]\n",
      "(3, 224) [87.20448283 16.99848959  5.13013995]\n",
      "(3, 224) [87.20492442 16.99866723  5.13011228]\n",
      "(3, 224) [87.20565627 16.99887164  5.13009361]\n",
      "(3, 224) [87.20614769 16.99907062  5.13006246]\n",
      "(3, 224) [87.20660467 16.99926287  5.1300313 ]\n",
      "(3, 224) [87.20711133 16.99946604  5.12999977]\n",
      "(3, 224) [87.20763545 16.99965596  5.12997328]\n",
      "(3, 224) [87.20817202 16.99981497  5.12995685]\n",
      "(3, 224) [87.20891879 16.99997104  5.12995367]\n",
      "(3, 224) [87.20961036 17.00010258  5.12995466]\n",
      "(3, 224) [87.21016475 17.00020387  5.12995669]\n",
      "(3, 224) [87.21083231 17.00029854  5.12996739]\n",
      "(3, 224) [87.21153963 17.0003917   5.12998089]\n",
      "(3, 224) [87.21225537 17.00047573  5.12999762]\n",
      "(3, 224) [87.21299417 17.00057076  5.1300124 ]\n",
      "(3, 224) [87.21360986 17.00063868  5.13002813]\n",
      "(3, 224) [87.21430847 17.00069101  5.13005343]\n",
      "(3, 224) [87.21490782 17.00076571  5.13006615]\n",
      "(3, 224) [87.21548983 17.00084389  5.13007679]\n",
      "(3, 224) [87.21609561 17.00092898  5.13008674]\n",
      "(3, 224) [87.21679043 17.0010275   5.13009787]\n",
      "(3, 224) [87.21739611 17.00114303  5.13009863]\n",
      "(3, 224) [87.21797547 17.00124844  5.13010088]\n",
      "(3, 224) [87.21854764 17.00135244  5.13010314]\n",
      "(3, 224) [87.21923133 17.00145236  5.13011318]\n",
      "(3, 224) [87.21983261 17.0015621   5.13011541]\n",
      "(3, 224) [87.22051629 17.00166911  5.13012331]\n",
      "(3, 224) [87.22106643 17.00178012  5.13012214]\n",
      "(3, 224) [87.22180388 17.00189634  5.13013043]\n",
      "(3, 224) [87.22232319 17.00202136  5.13012322]\n",
      "(3, 224) [87.22298232 17.0021509   5.13012287]\n",
      "(3, 224) [87.22354859 17.00225386  5.13012508]\n",
      "(3, 224) [87.22426196 17.00235526  5.13013642]\n",
      "(3, 224) [87.22483177 17.00246327  5.13013731]\n",
      "(3, 224) [87.22556962 17.00255771  5.1301522 ]\n",
      "(3, 224) [87.2263607  17.00266563  5.13016615]\n",
      "(3, 224) [87.22712208 17.00278338  5.13017538]\n",
      "(3, 224) [87.22788785 17.00289699  5.13018612]\n",
      "(3, 224) [87.22866531 17.00300663  5.13019875]\n",
      "(3, 224) [87.22928202 17.00314743  5.13019252]\n",
      "(3, 224) [87.23007267 17.00330268  5.13019217]\n",
      "(3, 224) [87.23086169 17.00342249  5.1302024 ]\n",
      "(3, 224) [87.23171615 17.00355548  5.13021251]\n",
      "(3, 224) [87.23241084 17.00370103  5.13020941]\n",
      "(3, 224) [87.23327543 17.00382771  5.130222  ]\n",
      "(3, 224) [87.23379887 17.00397973  5.13020686]\n",
      "(3, 224) [87.23441667 17.00413514  5.13019624]\n",
      "(3, 224) [87.23534707 17.00427852  5.13020768]\n",
      "(3, 224) [87.23615907 17.00442383  5.13021157]\n",
      "(3, 224) [87.23690635 17.00457381  5.13021022]\n",
      "(3, 224) [87.23758732 17.00472463  5.13020472]\n",
      "(3, 224) [87.23824629 17.00487179  5.13019904]\n",
      "(3, 224) [87.23895836 17.00502929  5.13019335]\n",
      "(3, 224) [87.23965979 17.00518846  5.13018653]\n",
      "(3, 224) [87.24008842 17.00531704  5.13017292]\n",
      "(3, 224) [87.24080136 17.00547141  5.13016823]\n",
      "(3, 224) [87.24149173 17.00561083  5.13016674]\n",
      "(3, 224) [87.24201979 17.00573819  5.13015934]\n",
      "(3, 224) [87.24263819 17.00584255  5.1301642 ]\n",
      "(3, 224) [87.24329388 17.0059233   5.13017838]\n",
      "(3, 224) [87.24385276 17.00601631  5.13018315]\n",
      "(3, 224) [87.24424952 17.00612267  5.13017436]\n",
      "(3, 224) [87.24457588 17.00622672  5.13016211]\n",
      "(3, 224) [87.24517568 17.00631095  5.13017195]\n",
      "(3, 224) [87.24576791 17.0063983   5.13018042]\n",
      "(3, 224) [87.24647592 17.00647923  5.13019764]\n",
      "(3, 224) [87.24718637 17.00655188  5.1302175 ]\n",
      "(3, 224) [87.24733634 17.00661726  5.13020656]\n",
      "(3, 224) [87.24750946 17.00669646  5.13019281]\n",
      "(3, 224) [87.24787229 17.0067911   5.13018555]\n",
      "(3, 224) [87.24819518 17.00687797  5.13017829]\n",
      "(3, 224) [87.24867783 17.00696282  5.13018105]\n",
      "(3, 224) [87.24927883 17.00704823  5.1301906 ]\n",
      "(3, 224) [87.24967546 17.0071322   5.13018855]\n",
      "(3, 224) [87.25018784 17.0072009   5.13019793]\n",
      "(3, 224) [87.25065561 17.00727688  5.13020249]\n",
      "(3, 224) [87.25111473 17.00733148  5.130213  ]\n",
      "(3, 224) [87.25170273 17.00740883  5.13022422]\n",
      "(3, 224) [87.25240887 17.00747792  5.13024488]\n",
      "(3, 224) [87.25305302 17.00755637  5.13025908]\n",
      "(3, 224) [87.2537796  17.007639    5.13027687]\n",
      "(3, 224) [87.25453977 17.00771562  5.13029845]\n",
      "(3, 224) [87.25496573 17.00778672  5.13030201]\n",
      "(3, 224) [87.25558161 17.00786541  5.13031447]\n",
      "(3, 224) [87.25628887 17.0079516   5.13033004]\n",
      "(3, 224) [87.25679456 17.00805803  5.13032762]\n",
      "(3, 224) [87.25734733 17.00815113  5.130332  ]\n",
      "(3, 224) [87.25774689 17.0082358   5.1303299 ]\n",
      "(3, 224) [87.25844217 17.00832502  5.13034385]\n",
      "(3, 224) [87.25911615 17.00837768  5.1303676 ]\n",
      "(3, 224) [87.25958139 17.00841739  5.13038299]\n",
      "(3, 224) [87.26006528 17.0084675   5.13039632]\n",
      "(3, 224) [87.26063384 17.00851453  5.13041558]\n",
      "(3, 224) [87.26121645 17.00855995  5.13043615]\n",
      "(3, 224) [87.26165858 17.00861191  5.13044646]\n",
      "(3, 224) [87.26212874 17.00866364  5.1304585 ]\n",
      "(3, 224) [87.26258892 17.00873041  5.1304654 ]\n",
      "(3, 224) [87.26294279 17.00879526  5.13046661]\n",
      "(3, 224) [87.26328056 17.00885945  5.13046708]\n",
      "(3, 224) [87.26391284 17.00890959  5.13048914]\n",
      "(3, 224) [87.2644386  17.00897215  5.13050117]\n",
      "(3, 224) [87.2646768  17.00900727  5.13050457]\n",
      "(3, 224) [87.26525125 17.00903525  5.13052994]\n",
      "(3, 224) [87.26584999 17.009063    5.1305568 ]\n",
      "(3, 224) [87.26668456 17.00908412  5.13059956]\n",
      "(3, 224) [87.26736288 17.00910439  5.13063337]\n",
      "(3, 224) [87.26827369 17.00913165  5.13067875]\n",
      "(3, 224) [87.26857605 17.00914833  5.13069151]\n",
      "(3, 224) [87.26896874 17.00917411  5.13070683]\n",
      "(3, 224) [87.26939187 17.00919664  5.13072493]\n",
      "(3, 224) [87.27008492 17.00921978  5.13075873]\n",
      "(3, 224) [87.27069033 17.00926391  5.13078103]\n",
      "(3, 224) [87.27126375 17.00930553  5.1308022 ]\n",
      "(3, 224) [87.27148132 17.00933625  5.13080572]\n",
      "(3, 224) [87.27193809 17.00938619  5.1308175 ]\n",
      "(3, 224) [87.27250413 17.00942558  5.13083892]\n",
      "(3, 224) [87.27308905 17.00945062  5.13086578]\n",
      "(3, 224) [87.27354292 17.00947596  5.13088483]\n",
      "(3, 224) [87.27384341 17.00947411  5.13090309]\n",
      "(3, 224) [87.27428868 17.00948772  5.13092518]\n",
      "(3, 224) [87.27473095 17.00947056  5.13095641]\n",
      "(3, 224) [87.27520773 17.00947353  5.13098357]\n",
      "(3, 224) [87.27541472 17.0094803   5.13099371]\n",
      "(3, 224) [87.27566042 17.00950292  5.13100133]\n",
      "(3, 224) [87.27596391 17.00951439  5.13101573]\n",
      "(3, 224) [87.27653546 17.00950782  5.13105136]\n",
      "(3, 224) [87.27692983 17.00948278  5.13108213]\n",
      "(3, 224) [87.27722089 17.00947057  5.13110296]\n",
      "(3, 224) [87.27769217 17.00944839  5.1311374 ]\n",
      "(3, 224) [87.27793078 17.00937528  5.13117352]\n",
      "(3, 224) [87.27805334 17.00931449  5.13119909]\n",
      "(3, 224) [87.27820626 17.00924089  5.13123031]\n",
      "(3, 224) [87.27821015 17.00916635  5.13125305]\n",
      "(3, 224) [87.27801091 17.00904994  5.13127649]\n",
      "(3, 224) [87.27803332 17.00894236  5.13131029]\n",
      "(3, 224) [87.27785877 17.00882454  5.13133562]\n",
      "(3, 224) [87.27780936 17.00868922  5.13137357]\n",
      "(3, 224) [87.27758285 17.00854955  5.1314024 ]\n",
      "(3, 224) [87.27708543 17.00839733  5.13141911]\n",
      "(3, 224) [87.27707667 17.00823789  5.13146672]\n",
      "(3, 224) [87.27666623 17.00807369  5.13149216]\n",
      "(3, 224) [87.27627714 17.00792346  5.13151464]\n",
      "(3, 224) [87.27600539 17.00777342  5.13154397]\n",
      "(3, 224) [87.27581504 17.00761425  5.13158085]\n",
      "(3, 224) [87.27577935 17.00740906  5.13164071]\n",
      "(3, 224) [87.27597206 17.00721416  5.13171085]\n",
      "(3, 224) [87.27625451 17.00703486  5.13178157]\n",
      "(3, 224) [87.2767314  17.00678832  5.13188395]\n",
      "(3, 224) [87.27708646 17.00655133  5.1319763 ]\n",
      "(3, 224) [87.27747926 17.00629311  5.13207724]\n",
      "(3, 224) [87.27805084 17.00603699  5.13218807]\n",
      "(3, 224) [87.27866592 17.005771    5.13230447]\n",
      "(3, 224) [87.27947994 17.00556275  5.13241518]\n",
      "(3, 224) [87.27998202 17.00537225  5.13250217]\n",
      "(3, 224) [87.2805459  17.00517642  5.13259436]\n",
      "(3, 224) [87.28105643 17.00501029  5.13267448]\n",
      "(3, 224) [87.28152379 17.00481835  5.13275985]\n",
      "(3, 224) [87.28194722 17.00464276  5.13283771]\n",
      "(3, 224) [87.282631   17.00446596  5.13293122]\n",
      "(3, 224) [87.28322015 17.0042877   5.13301964]\n",
      "(3, 224) [87.28384228 17.00409644  5.1331139 ]\n",
      "(3, 224) [87.28439862 17.0038985   5.13320628]\n",
      "(3, 224) [87.28493317 17.00372748  5.1332893 ]\n",
      "(3, 224) [87.28553245 17.0036038   5.13336186]\n",
      "(3, 224) [87.28612403 17.00348573  5.13343225]\n",
      "(3, 224) [87.28640076 17.00338009  5.13348037]\n",
      "(3, 224) [87.28667106 17.00327746  5.13352721]\n",
      "(3, 224) [87.28709211 17.00319777  5.13357601]\n",
      "(3, 224) [87.28735805 17.00311179  5.13361757]\n",
      "(3, 224) [87.28755467 17.0030473   5.13364859]\n",
      "(3, 224) [87.28805392 17.00298162  5.13369776]\n",
      "(3, 224) [87.28836718 17.002918    5.13373537]\n",
      "(3, 224) [87.28909772 17.00282729  5.1338057 ]\n",
      "(3, 224) [87.28967318 17.00272096  5.13387162]\n",
      "(3, 224) [87.29015684 17.00260558  5.13393486]\n",
      "(3, 224) [87.2905921  17.00247078  5.13400112]\n",
      "(3, 224) [87.29105977 17.00234167  5.13406756]\n",
      "(3, 224) [87.29148018 17.00222601  5.13412718]\n",
      "(3, 224) [87.29173665 17.00210359  5.13417919]\n",
      "(3, 224) [87.2921331  17.00199079  5.13423655]\n",
      "(3, 224) [87.2924414  17.00182149  5.13430571]\n",
      "(3, 224) [87.29297337 17.00167438  5.13438135]\n",
      "(3, 224) [87.29327591 17.00152537  5.13444408]\n",
      "(3, 224) [87.29377591 17.00135468  5.13452492]\n",
      "(3, 224) [87.29386445 17.00120303  5.13457586]\n",
      "(3, 224) [87.29419107 17.00101932  5.13465044]\n",
      "(3, 224) [87.29439188 17.00082057  5.13472213]\n",
      "(3, 224) [87.29459028 17.00054908  5.13481554]\n",
      "(3, 224) [87.2948663  17.00034787  5.13489236]\n",
      "(3, 224) [87.29538677 17.00017359  5.13497546]\n",
      "(3, 224) [87.2957977  16.99999764  5.13505262]\n",
      "(3, 224) [87.2962224  16.99983507  5.13512656]\n",
      "(3, 224) [87.2965854  16.99967596  5.13519585]\n",
      "(3, 224) [87.29703522 16.99953103  5.13526594]\n",
      "(3, 224) [87.29740955 16.99938573  5.13533169]\n",
      "(3, 224) [87.297764   16.99923638  5.1353975 ]\n",
      "(3, 224) [87.29806753 16.99906413  5.13546722]\n",
      "(3, 224) [87.29832025 16.99888822  5.13553506]\n",
      "(3, 224) [87.29892071 16.99874094  5.13561472]\n",
      "(3, 224) [87.29946473 16.99859645  5.13569023]\n",
      "(3, 224) [87.29977897 16.99846127  5.13574945]\n",
      "(3, 224) [87.30036093 16.99827345  5.13584025]\n",
      "(3, 224) [87.30081345 16.99810817  5.13591662]\n",
      "(3, 224) [87.30099999 16.99797145  5.13596879]\n",
      "(3, 224) [87.30141682 16.99785313  5.13602894]\n",
      "(3, 224) [87.30186257 16.99773108  5.13609192]\n",
      "(3, 224) [87.30248228 16.99761079  5.13616459]\n",
      "(3, 224) [87.30293538 16.99749017  5.13622757]\n",
      "(3, 224) [87.30326014 16.99737665  5.13628087]\n",
      "(3, 224) [87.30383681 16.99726992  5.13634694]\n",
      "(3, 224) [87.30443973 16.99718331  5.13640848]\n",
      "(3, 224) [87.30485333 16.99708593  5.13646215]\n",
      "(3, 224) [87.30562419 16.99699792  5.136534  ]\n",
      "(3, 224) [87.30629882 16.99687954  5.13660935]\n",
      "(3, 224) [87.30684245 16.99674342  5.13668238]\n",
      "(3, 224) [87.30739663 16.99659006  5.13676126]\n",
      "(3, 224) [87.30797364 16.99643535  5.13684188]\n",
      "(3, 224) [87.30865243 16.99632335  5.13691563]\n",
      "(3, 224) [87.30900896 16.99622521  5.13696623]\n",
      "(3, 224) [87.30946314 16.99612584  5.13702294]\n",
      "(3, 224) [87.30980838 16.99605347  5.13706511]\n",
      "(3, 224) [87.31026575 16.99596962  5.13711736]\n",
      "(3, 224) [87.31065333 16.99589155  5.13716375]\n",
      "(3, 224) [87.31126281 16.99580403  5.13722605]\n",
      "(3, 224) [87.311818   16.99570842  5.13728759]\n",
      "(3, 224) [87.31226198 16.99562075  5.13734019]\n",
      "(3, 224) [87.31251708 16.99550973  5.13738872]\n",
      "(3, 224) [87.31297527 16.99539372  5.13745069]\n",
      "(3, 224) [87.31366349 16.99529043  5.13752236]\n",
      "(3, 224) [87.31432549 16.99518204  5.13759403]\n",
      "(3, 224) [87.31510047 16.99508066  5.13767022]\n",
      "(3, 224) [87.31561024 16.99499303  5.13772667]\n",
      "(3, 224) [87.31577303 16.99489613  5.13776552]\n",
      "(3, 224) [87.31586048 16.99478269  5.13780493]\n",
      "(3, 224) [87.31608732 16.99469105  5.13784597]\n",
      "(3, 224) [87.31615465 16.9945821   5.13788286]\n",
      "(3, 224) [87.31624802 16.9944944   5.13791485]\n",
      "(3, 224) [87.31618012 16.9943974   5.13794017]\n",
      "(3, 224) [87.31643259 16.99432263  5.13797762]\n",
      "(3, 224) [87.31658366 16.99425394  5.13800727]\n",
      "(3, 224) [87.31703637 16.99418263  5.13805548]\n",
      "(3, 224) [87.31729729 16.99410169  5.1380953 ]\n",
      "(3, 224) [87.31775233 16.99400559  5.13815115]\n",
      "(3, 224) [87.31802112 16.99392271  5.13819202]\n",
      "(3, 224) [87.31813665 16.99383333  5.13822585]\n",
      "(3, 224) [87.31836144 16.99370771  5.13827705]\n",
      "(3, 224) [87.31842039 16.99358667  5.13831711]\n",
      "(3, 224) [87.31860085 16.99346689  5.13836395]\n",
      "(3, 224) [87.31861527 16.99336245  5.13839638]\n",
      "(3, 224) [87.31851022 16.99324425  5.13842594]\n",
      "(3, 224) [87.3183006  16.99312645  5.13844922]\n",
      "(3, 224) [87.31822633 16.99301982  5.13847709]\n",
      "(3, 224) [87.31814811 16.99291241  5.13850496]\n",
      "(3, 224) [87.3181274  16.99279558  5.13853906]\n",
      "(3, 224) [87.31810331 16.99269679  5.13856751]\n",
      "(3, 224) [87.3182384  16.99262876  5.13859602]\n",
      "(3, 224) [87.31801823 16.99255567  5.13860516]\n",
      "(3, 224) [87.31796181 16.99245437  5.13863247]\n",
      "(3, 224) [87.31792163 16.99238555  5.13865091]\n",
      "(3, 224) [87.31784029 16.99231244  5.13866823]\n",
      "(3, 224) [87.31781064 16.99223379  5.13869026]\n",
      "(3, 224) [87.31782542 16.99216317  5.13871247]\n",
      "(3, 224) [87.31801926 16.99210099  5.13874268]\n",
      "(3, 224) [87.31837266 16.99200805  5.13879156]\n",
      "(3, 224) [87.31852159 16.99190499  5.13883144]\n",
      "(3, 224) [87.31849372 16.99183872  5.13884983]\n",
      "(3, 224) [87.31837348 16.99175509  5.13886803]\n",
      "(3, 224) [87.31846488 16.99166008  5.13890213]\n",
      "(3, 224) [87.31824706 16.99159866  5.13890788]\n",
      "(3, 224) [87.31833032 16.99154879  5.13892784]\n",
      "(3, 224) [87.31831479 16.99149467  5.13894328]\n",
      "(3, 224) [87.31820996 16.99147368  5.13894346]\n",
      "(3, 224) [87.3183939  16.99145128  5.13896104]\n",
      "(3, 224) [87.31831485 16.9914249   5.13896436]\n",
      "(3, 224) [87.31844163 16.99139407  5.13898113]\n",
      "(3, 224) [87.31839751 16.99136013  5.13898879]\n",
      "(3, 224) [87.3184828  16.99131997  5.13900593]\n",
      "(3, 224) [87.31834219 16.99119896  5.13903423]\n",
      "(3, 224) [87.31852998 16.99108805  5.13907881]\n",
      "(3, 224) [87.31868905 16.99096846  5.13912433]\n",
      "(3, 224) [87.31868066 16.99084955  5.13915979]\n",
      "(3, 224) [87.3187998 16.9907384  5.1392004]\n",
      "(3, 224) [87.31884894 16.9906424   5.13923233]\n",
      "(3, 224) [87.31878275 16.99053987  5.13925946]\n",
      "(3, 224) [87.31860828 16.99042956  5.13928257]\n",
      "(3, 224) [87.31881789 16.99032185  5.1393275 ]\n",
      "(3, 224) [87.31884503 16.99020998  5.13936294]\n",
      "(3, 224) [87.31889484 16.99010698  5.13939705]\n",
      "(3, 224) [87.31910617 16.99000334  5.13944085]\n",
      "(3, 224) [87.31905969 16.98991169  5.13946584]\n",
      "(3, 224) [87.31910706 16.98981569  5.13949769]\n",
      "(3, 224) [87.3194609  16.98973169  5.13954394]\n",
      "(3, 224) [87.31981133 16.98964578  5.13959057]\n",
      "(3, 224) [87.31978679 16.98955775  5.13961576]\n",
      "(3, 224) [87.3199839  16.9894821   5.13965025]\n",
      "(3, 224) [87.32014484 16.98940006  5.13968456]\n",
      "(3, 224) [87.320036   16.98932556  5.13970069]\n",
      "(3, 224) [87.32013279 16.98925262  5.13972846]\n",
      "(3, 224) [87.31989252 16.98919561  5.13973158]\n",
      "(3, 224) [87.31990822 16.98912127  5.13975501]\n",
      "(3, 224) [87.319732   16.98911939  5.1397452 ]\n",
      "(3, 224) [87.31973033 16.9890918   5.13975345]\n",
      "(3, 224) [87.31931262 16.98906973  5.13973554]\n",
      "(3, 224) [87.31934814 16.9890506   5.13974342]\n",
      "(3, 224) [87.31910745 16.98902218  5.13973785]\n",
      "(3, 224) [87.31902523 16.98900572  5.13973799]\n",
      "(3, 224) [87.31888127 16.98898281  5.13973645]\n",
      "(3, 224) [87.31892302 16.98896404  5.13974459]\n",
      "(3, 224) [87.31876015 16.98889796  5.13975501]\n",
      "(3, 224) [87.31874913 16.98881093  5.1397807 ]\n",
      "(3, 224) [87.31853691 16.98871617  5.13979689]\n",
      "(3, 224) [87.31866719 16.98865329  5.1398236 ]\n",
      "(3, 224) [87.31849232 16.9885612   5.13984118]\n",
      "(3, 224) [87.31825719 16.98848979  5.13984896]\n",
      "(3, 224) [87.31807693 16.98844801  5.139851  ]\n",
      "(3, 224) [87.31782268 16.98842914  5.13984173]\n",
      "(3, 224) [87.31750787 16.98841868  5.13982636]\n",
      "(3, 224) [87.31720436 16.98840668  5.13981212]\n",
      "(3, 224) [87.31722966 16.98839468  5.13981724]\n",
      "(3, 224) [87.31709515 16.98837239  5.13981607]\n",
      "(3, 224) [87.31697071 16.98832648  5.13982263]\n",
      "(3, 224) [87.31678163 16.9882817   5.13982505]\n",
      "(3, 224) [87.31660043 16.98823908  5.13982728]\n",
      "(3, 224) [87.3162502  16.98820804  5.13981605]\n",
      "(3, 224) [87.31610136 16.98817239  5.13981807]\n",
      "(3, 224) [87.31614739 16.98814512  5.13982904]\n",
      "(3, 224) [87.31591356 16.98812677  5.13982082]\n",
      "(3, 224) [87.31575706 16.98810232  5.13981901]\n",
      "(3, 224) [87.31561754 16.98808124  5.13981718]\n",
      "(3, 224) [87.31546406 16.9880524   5.13981687]\n",
      "(3, 224) [87.31530149 16.98800323  5.13982219]\n",
      "(3, 224) [87.31527482 16.98795653  5.13983476]\n",
      "(3, 224) [87.31485658 16.98791633  5.13982231]\n",
      "(3, 224) [87.31484157 16.98787439  5.13983412]\n",
      "(3, 224) [87.31462871 16.98783409  5.1398338 ]\n",
      "(3, 224) [87.31442115 16.98779287  5.13983405]\n",
      "(3, 224) [87.31427931 16.98774515  5.13984015]\n",
      "(3, 224) [87.31414631 16.98771215  5.1398423 ]\n",
      "(3, 224) [87.31392874 16.98764404  5.1398501 ]\n",
      "(3, 224) [87.31372313 16.98757983  5.13985744]\n",
      "(3, 224) [87.31342895 16.98750622  5.1398624 ]\n",
      "(3, 224) [87.31360663 16.98744019  5.13989286]\n",
      "(3, 224) [87.31350286 16.98739962  5.13989903]\n",
      "(3, 224) [87.31320419 16.98736804  5.139891  ]\n",
      "(3, 224) [87.3132722  16.98735686  5.13989839]\n",
      "(3, 224) [87.31304627 16.98733318  5.13989225]\n",
      "(3, 224) [87.3132006  16.98730454  5.13991   ]\n",
      "(3, 224) [87.31340786 16.98728433  5.13992832]\n",
      "(3, 224) [87.3133874  16.98725178  5.13993696]\n",
      "(3, 224) [87.3132274  16.98723035  5.13993402]\n",
      "(3, 224) [87.31317289 16.98719057  5.13994285]\n",
      "(3, 224) [87.31301833 16.98717022  5.13993991]\n",
      "(3, 224) [87.3128956  16.98714299  5.13994093]\n",
      "(3, 224) [87.31271652 16.98710224  5.13994271]\n",
      "(3, 224) [87.31275842 16.98703826  5.13996453]\n",
      "(3, 224) [87.31259345 16.98697534  5.13997385]\n",
      "(3, 224) [87.3126071  16.98691771  5.1399921 ]\n",
      "(3, 224) [87.31267749 16.98687113  5.14001034]\n",
      "(3, 224)"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 15%|██████████▊                                                               | 11201/76339 [00:04<00:28, 2284.08it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [87.31250815 16.98682045  5.1400157 ]\n",
      "(3, 224) [87.31239635 16.98677849  5.14002181]\n",
      "(3, 224) [87.3122753  16.9867341   5.14002812]\n",
      "(3, 224) [87.3122362  16.98667489  5.14004372]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "Input \u001b[1;32mIn [598]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      2\u001b[0m     X2_trend \u001b[38;5;241m=\u001b[39m X2_temp\u001b[38;5;241m.\u001b[39miloc[i\u001b[38;5;241m-\u001b[39mFEATURES_LENGHT\u001b[38;5;241m+\u001b[39m\u001b[38;5;241m1\u001b[39m:i\u001b[38;5;241m+\u001b[39m\u001b[38;5;241m1\u001b[39m]\u001b[38;5;241m.\u001b[39mT\u001b[38;5;241m.\u001b[39mvalues\n\u001b[0;32m      3\u001b[0m \u001b[38;5;66;03m#     transform = transforms.Normalize(mean, std, inplace=False)\u001b[39;00m\n\u001b[0;32m      4\u001b[0m \u001b[38;5;66;03m#     X2_trend = transform(X2_trend)\u001b[39;00m\n\u001b[1;32m----> 5\u001b[0m     \u001b[38;5;28;43mprint\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mX2_trend\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mshape\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mX2_trend\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmean\u001b[49m\u001b[43m(\u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m1\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\python_3_10_4_torch\\lib\\site-packages\\ipykernel\\iostream.py:531\u001b[0m, in \u001b[0;36mOutStream.write\u001b[1;34m(self, string)\u001b[0m\n\u001b[0;32m    529\u001b[0m is_child \u001b[38;5;241m=\u001b[39m (\u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_is_master_process())\n\u001b[0;32m    530\u001b[0m \u001b[38;5;66;03m# only touch the buffer in the IO thread to avoid races\u001b[39;00m\n\u001b[1;32m--> 531\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mpub_thread\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mschedule\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43;01mlambda\u001b[39;49;00m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_buffer\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mwrite\u001b[49m\u001b[43m(\u001b[49m\u001b[43mstring\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    532\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_child:\n\u001b[0;32m    533\u001b[0m     \u001b[38;5;66;03m# mp.Pool cannot be trusted to flush promptly (or ever),\u001b[39;00m\n\u001b[0;32m    534\u001b[0m     \u001b[38;5;66;03m# and this helps.\u001b[39;00m\n\u001b[0;32m    535\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_subprocess_flush_pending:\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\python_3_10_4_torch\\lib\\site-packages\\ipykernel\\iostream.py:216\u001b[0m, in \u001b[0;36mIOPubThread.schedule\u001b[1;34m(self, f)\u001b[0m\n\u001b[0;32m    214\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_events\u001b[38;5;241m.\u001b[39mappend(f)\n\u001b[0;32m    215\u001b[0m     \u001b[38;5;66;03m# wake event thread (message content is ignored)\u001b[39;00m\n\u001b[1;32m--> 216\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_event_pipe\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msend\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43mb\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[0;32m    217\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    218\u001b[0m     f()\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\python_3_10_4_torch\\lib\\site-packages\\zmq\\sugar\\socket.py:618\u001b[0m, in \u001b[0;36mSocket.send\u001b[1;34m(self, data, flags, copy, track, routing_id, group)\u001b[0m\n\u001b[0;32m    611\u001b[0m         data \u001b[38;5;241m=\u001b[39m zmq\u001b[38;5;241m.\u001b[39mFrame(\n\u001b[0;32m    612\u001b[0m             data,\n\u001b[0;32m    613\u001b[0m             track\u001b[38;5;241m=\u001b[39mtrack,\n\u001b[0;32m    614\u001b[0m             copy\u001b[38;5;241m=\u001b[39mcopy \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[0;32m    615\u001b[0m             copy_threshold\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcopy_threshold,\n\u001b[0;32m    616\u001b[0m         )\n\u001b[0;32m    617\u001b[0m     data\u001b[38;5;241m.\u001b[39mgroup \u001b[38;5;241m=\u001b[39m group\n\u001b[1;32m--> 618\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msend\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdata\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mflags\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mflags\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtrack\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtrack\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32mzmq\\backend\\cython\\socket.pyx:740\u001b[0m, in \u001b[0;36mzmq.backend.cython.socket.Socket.send\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mzmq\\backend\\cython\\socket.pyx:787\u001b[0m, in \u001b[0;36mzmq.backend.cython.socket.Socket.send\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mzmq\\backend\\cython\\socket.pyx:244\u001b[0m, in \u001b[0;36mzmq.backend.cython.socket._send_copy\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\python_3_10_4_torch\\lib\\site-packages\\zmq\\backend\\cython\\checkrc.pxd:13\u001b[0m, in \u001b[0;36mzmq.backend.cython.checkrc._check_rc\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "for i in tqdm(range(FEATURES_LENGHT, X2_temp.shape[0])):\n",
    "    X2_trend = X2_temp.iloc[i-FEATURES_LENGHT+1:i+1].T.values\n",
    "#     transform = transforms.Normalize(mean, std, inplace=False)\n",
    "#     X2_trend = transform(X2_trend)\n",
    "    print(X2_trend.shape, X2_trend.mean(axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dde1a7e7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 731,
   "id": "5452657e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 13%|█████████▋                                                                  | 9793/76339 [00:48<10:17, 107.82it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "52.566528\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 26%|███████████████████▋                                                        | 19786/76339 [03:02<17:34, 53.64it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "106.326528\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 39%|█████████████████████████████▋                                              | 29782/76339 [06:42<20:24, 38.03it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "160.086528\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 52%|███████████████████████████████████████▌                                    | 39783/76339 [11:49<20:32, 29.66it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "213.846528\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 65%|█████████████████████████████████████████████████▌                          | 49780/76339 [18:23<19:58, 22.16it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "267.606528\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 78%|███████████████████████████████████████████████████████████▌                | 59779/76339 [26:24<13:17, 20.76it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "321.366528\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 91%|█████████████████████████████████████████████████████████████████████▍      | 69779/76339 [35:53<06:35, 16.59it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "375.126528\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|████████████████████████████████████████████████████████████████████████████| 76339/76339 [42:54<00:00, 29.65it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: total: 43min\n",
      "Wall time: 42min 54s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "# нулевая подложка\n",
    "X = np.zeros((1,3,FEATURES_LENGHT))\n",
    "\n",
    "# временный признаки, для формирования окончательного X\n",
    "X_temp = trend[['BTC/BNB_delta','BTC/ETH_delta','ETH/BNB_delta']]\n",
    "\n",
    "for i in tqdm(range(FEATURES_LENGHT, X_temp.shape[0])):\n",
    "    delta = X_temp.iloc[i-FEATURES_LENGHT+1:i+1]\n",
    "    X3 = delta / (delta.max()-delta.min())\n",
    "#    X3 = X_temp.iloc[i-FEATURES_LENGHT+1:i+1]/X_temp.iloc[i]\n",
    "    X2 = X3.T.values\n",
    "    X1 = np.expand_dims(X2, axis=0)\n",
    "    X = np.append(X, X1, axis=0)\n",
    "    if i % 10000 == 0:\n",
    "        print(X.nbytes/1_000_000)\n",
    "        \n",
    "# удаление нулевой подложки np.zeros\n",
    "X = X[1:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 732,
   "id": "e8eb83a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "np.save('binance_features/nparray', X, allow_pickle=True, fix_imports=True)"
   ]
  },
  {
   "cell_type": "raw",
   "id": "610f7d68",
   "metadata": {},
   "source": [
    "X = np.load('binance_features/nparray_PERIOD_6_FEATURES_LENGHT_224.npy', mmap_mode=None, allow_pickle=False, fix_imports=True, encoding='ASCII')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 582,
   "id": "cd033cff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[[-0.22016955,  0.37987417, -0.34387748, ...,  0.07202949,\n",
       "          0.171797  , -0.21309631],\n",
       "        [-0.00437772, -0.04464412, -0.32468416, ..., -0.47766565,\n",
       "          0.08793408, -0.24170605],\n",
       "        [-0.19955483,  0.37693401, -0.11303876, ...,  0.36463146,\n",
       "          0.10286788, -0.04465828]],\n",
       "\n",
       "       [[ 0.37987417, -0.34387748,  0.38771796, ...,  0.171797  ,\n",
       "         -0.21309631,  0.09401439],\n",
       "        [-0.04464412, -0.32468416,  0.00656033, ...,  0.08793408,\n",
       "         -0.24170605,  0.05642366],\n",
       "        [ 0.37693401, -0.11303876,  0.3522944 , ...,  0.10286788,\n",
       "         -0.04465828,  0.05111071]],\n",
       "\n",
       "       [[-0.34387748,  0.38771796, -0.05897589, ..., -0.21309631,\n",
       "          0.09401439,  0.42974188],\n",
       "        [-0.32468416,  0.00656033,  0.03862677, ..., -0.24170605,\n",
       "          0.05642366, -0.08556952],\n",
       "        [-0.11303876,  0.3522944 , -0.07837685, ..., -0.04465828,\n",
       "          0.05111071,  0.44850028]],\n",
       "\n",
       "       ...,\n",
       "\n",
       "       [[ 0.10433574, -0.14034516, -0.07810495, ..., -0.0101647 ,\n",
       "          0.14202193, -0.13800625],\n",
       "        [-0.0095436 , -0.02571424,  0.0909865 , ...,  0.05421001,\n",
       "         -0.00784931, -0.03221928],\n",
       "        [ 0.08539348, -0.0811023 , -0.13731756, ..., -0.05521169,\n",
       "          0.1117889 , -0.07356543]],\n",
       "\n",
       "       [[-0.14034516, -0.07810495,  0.08057225, ...,  0.14202193,\n",
       "         -0.13800625, -0.12962199],\n",
       "        [-0.02571424,  0.0909865 , -0.01810937, ..., -0.00784931,\n",
       "         -0.03221928, -0.01400694],\n",
       "        [-0.0811023 , -0.13731756,  0.07532568, ...,  0.1117889 ,\n",
       "         -0.07356543, -0.08341544]],\n",
       "\n",
       "       [[-0.07810495,  0.08057225, -0.01534795, ..., -0.13800625,\n",
       "         -0.12962199,  0.01919072],\n",
       "        [ 0.0909865 , -0.01810937, -0.01130825, ..., -0.03221928,\n",
       "         -0.01400694,  0.12248967],\n",
       "        [-0.13731756,  0.07532568, -0.00143094, ..., -0.07356543,\n",
       "         -0.08341544, -0.0935451 ]]])"
      ]
     },
     "execution_count": 582,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b898ae94",
   "metadata": {},
   "source": [
    "y\n",
    "\n",
    "- not_buy - 0\n",
    "- btc_bnb_ratio_mean_min - 1\t\n",
    "- btc_bnb_ratio_mean_max - 2\t\n",
    "- btc_eth_ratio_mean_min - 3\n",
    "- btc_eth_ratio_mean_max - 4\t\n",
    "- eth_bnb_ratio_mean_min - 5\t\n",
    "- eth_bnb_ratio_mean_max - 6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 733,
   "id": "2ad3808f",
   "metadata": {},
   "outputs": [],
   "source": [
    "Y = trend[['btc_bnb_ratio_mean_min','btc_bnb_ratio_mean_max','btc_eth_ratio_mean_min','btc_eth_ratio_mean_max','eth_bnb_ratio_mean_min','eth_bnb_ratio_mean_max','not_buy']]\n",
    "\n",
    "Y=Y.rename(\n",
    "    columns={\n",
    "        'not_buy':'0',\n",
    "        'btc_bnb_ratio_mean_min':'1',\n",
    "        'btc_bnb_ratio_mean_max':'2',\n",
    "        'btc_eth_ratio_mean_min':'3',\n",
    "        'btc_eth_ratio_mean_max':'4',\n",
    "        'eth_bnb_ratio_mean_min':'5',\n",
    "        'eth_bnb_ratio_mean_max':'6'        \n",
    "    }\n",
    ")\n",
    "\n",
    "y = Y.idxmax(axis=1)[FEATURES_LENGHT:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 734,
   "id": "7ea06491",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(76339, 3, 224) (76339,)\n"
     ]
    }
   ],
   "source": [
    "print(X.shape, y.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "217a8342",
   "metadata": {},
   "source": [
    "### Загрузчики данных"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 735,
   "id": "b1b30e2c",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_tensor = torch.tensor(X.astype('float32'))\n",
    "y_tensor = torch.tensor(y.astype('int')).type(torch.LongTensor)\n",
    "\n",
    "train = data_utils.TensorDataset(X_tensor, y_tensor)\n",
    "train_loader = data_utils.DataLoader(train, batch_size=BATCH_SIZE, shuffle=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 736,
   "id": "f80aad54",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "torch.Size([512, 3, 224]) torch.Size([512])\n"
     ]
    }
   ],
   "source": [
    "dataiter = iter(train_loader)\n",
    "\n",
    "images, labels = dataiter.next()\n",
    "images = images.to('cuda')\n",
    "labels = labels.to('cuda')\n",
    "print(images.shape, labels.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "96bfdf57",
   "metadata": {},
   "source": [
    "### Модель 1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17630cc8",
   "metadata": {},
   "source": [
    "#### Конструктор модели 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 737,
   "id": "c8a99a3c",
   "metadata": {},
   "outputs": [],
   "source": [
    "class Net_1(nn.Module):\n",
    "    def __init__(self):\n",
    "        super(Net_1,self).__init__()\n",
    "        self.conv1 = nn.Conv1d(3, 6, 3)\n",
    "        self.pool = nn.MaxPool1d(2)\n",
    "        self.conv2 = nn.Conv1d(6, 12, 2)\n",
    "        self.fc1 = nn.Linear(660, 120)\n",
    "        self.fc2 = nn.Linear(120, 84)\n",
    "        self.fc3 = nn.Linear(84, 7)\n",
    "        self.sm = nn.Softmax(dim=1)\n",
    "\n",
    "    def forward(self, x):\n",
    "        x = self.pool(F.relu(self.conv1(x)))\n",
    "        x = self.pool(F.relu(self.conv2(x)))\n",
    "        x = torch.flatten(x, start_dim=1)\n",
    "        x = F.relu(self.fc1(x))\n",
    "        x = F.relu(self.fc2(x))\n",
    "        x = self.fc3(x)\n",
    "        return x\n",
    "    \n",
    "    def inference(self, x):\n",
    "        x = self.forward(x)\n",
    "        x = self.sm(x)\n",
    "        return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 738,
   "id": "13418796",
   "metadata": {},
   "outputs": [],
   "source": [
    "net_1 = Net_1().to('cuda')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf32c319",
   "metadata": {},
   "source": [
    "#### Обучение модели 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 739,
   "id": "b3ba445b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch: 0, loss: 1.186, accuracy: 0.961\n",
      "Epoch: 50, loss: 0.200, accuracy: 0.961\n",
      "Epoch: 100, loss: 0.191, accuracy: 0.961\n",
      "Epoch: 150, loss: 0.176, accuracy: 0.961\n",
      "Epoch: 200, loss: 0.162, accuracy: 0.961\n",
      "Epoch: 250, loss: 0.150, accuracy: 0.961\n",
      "Epoch: 300, loss: 0.141, accuracy: 0.961\n",
      "Epoch: 350, loss: 0.131, accuracy: 0.961\n",
      "Epoch: 400, loss: 0.121, accuracy: 0.959\n",
      "Epoch: 450, loss: 0.111, accuracy: 0.965\n",
      "Epoch: 500, loss: 0.098, accuracy: 0.967\n",
      "Epoch: 550, loss: 0.083, accuracy: 0.971\n",
      "Epoch: 600, loss: 0.066, accuracy: 0.979\n",
      "Epoch: 650, loss: 0.048, accuracy: 0.986\n",
      "Epoch: 700, loss: 0.031, accuracy: 0.988\n",
      "Epoch: 750, loss: 0.022, accuracy: 0.996\n",
      "Epoch: 800, loss: 0.011, accuracy: 0.998\n",
      "Epoch: 850, loss: 0.009, accuracy: 0.996\n",
      "Epoch: 900, loss: 0.005, accuracy: 1.000\n",
      "Epoch: 950, loss: 0.002, accuracy: 1.000\n",
      "Epoch: 1000, loss: 0.001, accuracy: 1.000\n",
      "Epoch: 1050, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1100, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1150, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1200, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1250, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1300, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1350, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1400, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1450, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1500, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1550, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1600, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1650, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1700, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1750, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1800, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1850, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1900, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1950, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2000, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2050, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2100, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2150, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2200, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2250, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2300, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2350, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2400, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2450, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2500, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2550, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2600, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2650, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2700, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2750, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2800, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2850, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2900, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2950, loss: 0.000, accuracy: 1.000\n",
      "CPU times: total: 54min 48s\n",
      "Wall time: 55min 23s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "loss_fn = nn.CrossEntropyLoss()\n",
    "optimizer = optim.Adam(net_1.parameters(), lr=0.0001)\n",
    "\n",
    "for epoch in range(EPOCH):\n",
    "    loss_array = np.array([], dtype=float)\n",
    "    for i, batch in enumerate(train_loader):\n",
    "        optimizer.zero_grad()\n",
    "        X_batch, y_batch = batch\n",
    "        X_batch = X_batch.to('cuda')\n",
    "        y_batch = y_batch.to('cuda')\n",
    "        output = net_1.forward(X_batch)\n",
    "#         print(output, output.shape, output.type())\n",
    "#         print(y_batch, y_batch.shape, y_batch.type())\n",
    "        loss =loss_fn(output, y_batch)\n",
    "        loss.backward()\n",
    "        optimizer.step()\n",
    "        loss_array = np.append(loss_array, loss.to('cpu').detach().numpy())\n",
    "    if epoch % 50 == 0:\n",
    "        predict = torch.argmax(net_1.inference(images), dim=1)\n",
    "        good = (predict == labels).sum()\n",
    "        accuracy = good/BATCH_SIZE\n",
    "        print(f'Epoch: {epoch}, loss: {loss_array.mean():.3f}, accuracy: {accuracy:.3f}')"
   ]
  },
  {
   "cell_type": "raw",
   "id": "9a8d1f5d",
   "metadata": {},
   "source": [
    "torch.save(net_1, 'model_1')"
   ]
  },
  {
   "cell_type": "raw",
   "id": "1974c3e4",
   "metadata": {},
   "source": [
    "net_1 = torch.load('model_1')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 740,
   "id": "0a927682",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tensor(1., device='cuda:0')\n"
     ]
    }
   ],
   "source": [
    "predict = torch.argmax(net_1.inference(images), dim=1)\n",
    "good = (predict == labels).sum()\n",
    "accuracy = good/BATCH_SIZE\n",
    "print(accuracy)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef05aeb6",
   "metadata": {},
   "source": [
    "### Модель 2"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a8e2fab3",
   "metadata": {},
   "source": [
    "#### Конструктор модели 2"
   ]
  },
  {
   "cell_type": "raw",
   "id": "9a4bd023",
   "metadata": {},
   "source": [
    "dataiter = iter(train_loader)\n",
    "images, labels = dataiter.next()\n",
    "print(images.shape, labels.shape)"
   ]
  },
  {
   "cell_type": "raw",
   "id": "0dd92193",
   "metadata": {},
   "source": [
    "conv1 = nn.Conv1d(3, 9, 3, stride=1, padding=2, padding_mode='replicate')\n",
    "images = conv1(images)\n",
    "images.shape"
   ]
  },
  {
   "cell_type": "raw",
   "id": "7b849c20",
   "metadata": {},
   "source": [
    "pool = nn.MaxPool1d(3)\n",
    "images = pool(images)\n",
    "images.shape"
   ]
  },
  {
   "cell_type": "raw",
   "id": "90423ae4",
   "metadata": {},
   "source": [
    "conv2 = nn.Conv1d(9, 18, 2, stride=1, padding=2, padding_mode='replicate')\n",
    "images = conv2(images)\n",
    "images.shape"
   ]
  },
  {
   "cell_type": "raw",
   "id": "165e3ef5",
   "metadata": {},
   "source": [
    "pool = nn.MaxPool1d(3)\n",
    "images = pool(images)\n",
    "images.shape"
   ]
  },
  {
   "cell_type": "raw",
   "id": "5040ae37",
   "metadata": {},
   "source": [
    "images = torch.flatten(images, start_dim=1)\n",
    "images.shape"
   ]
  },
  {
   "cell_type": "raw",
   "id": "f91f0b40",
   "metadata": {},
   "source": [
    "fc1 = nn.Linear(468, 120)\n",
    "images = fc1(images)\n",
    "images.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 741,
   "id": "6bf0b238",
   "metadata": {},
   "outputs": [],
   "source": [
    "class Net_2(nn.Module):\n",
    "    def __init__(self):\n",
    "        super(Net_2,self).__init__()\n",
    "        self.conv1 = nn.Conv1d(3, 9, 3, stride=1, padding=2, padding_mode='replicate')\n",
    "        self.pool = nn.MaxPool1d(3)\n",
    "        self.conv2 = nn.Conv1d(9, 18, 2, stride=1, padding=2, padding_mode='replicate')\n",
    "        self.fc1 = nn.Linear(468, 120)\n",
    "        self.fc2 = nn.Linear(120, 84)\n",
    "        self.fc3 = nn.Linear(84, 7)\n",
    "        self.sm = nn.Softmax(dim=1)\n",
    "\n",
    "    def forward(self, x):\n",
    "        x = self.pool(F.relu(self.conv1(x)))\n",
    "        x = self.pool(F.relu(self.conv2(x)))\n",
    "        x = torch.flatten(x, start_dim=1)\n",
    "        x = F.relu(self.fc1(x))\n",
    "        x = F.relu(self.fc2(x))\n",
    "        x = self.fc3(x)\n",
    "        return x\n",
    "    \n",
    "    def inference(self, x):\n",
    "        x = self.forward(x)\n",
    "        x = self.sm(x)\n",
    "        return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 742,
   "id": "73246ff2",
   "metadata": {},
   "outputs": [],
   "source": [
    "net_2 = Net_2().to('cuda')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "778313c9",
   "metadata": {},
   "source": [
    "#### Обучение модели 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 743,
   "id": "a41d52c6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch: 0, loss: 1.169, accuracy: 0.961\n",
      "Epoch: 50, loss: 0.198, accuracy: 0.961\n",
      "Epoch: 100, loss: 0.169, accuracy: 0.961\n",
      "Epoch: 150, loss: 0.160, accuracy: 0.961\n",
      "Epoch: 200, loss: 0.143, accuracy: 0.961\n",
      "Epoch: 250, loss: 0.138, accuracy: 0.961\n",
      "Epoch: 300, loss: 0.133, accuracy: 0.961\n",
      "Epoch: 350, loss: 0.128, accuracy: 0.961\n",
      "Epoch: 400, loss: 0.122, accuracy: 0.961\n",
      "Epoch: 450, loss: 0.115, accuracy: 0.961\n",
      "Epoch: 500, loss: 0.107, accuracy: 0.961\n",
      "Epoch: 550, loss: 0.097, accuracy: 0.963\n",
      "Epoch: 600, loss: 0.086, accuracy: 0.971\n",
      "Epoch: 650, loss: 0.075, accuracy: 0.973\n",
      "Epoch: 700, loss: 0.061, accuracy: 0.979\n",
      "Epoch: 750, loss: 0.048, accuracy: 0.984\n",
      "Epoch: 800, loss: 0.035, accuracy: 0.986\n",
      "Epoch: 850, loss: 0.024, accuracy: 0.988\n",
      "Epoch: 900, loss: 0.020, accuracy: 0.992\n",
      "Epoch: 950, loss: 0.008, accuracy: 1.000\n",
      "Epoch: 1000, loss: 0.010, accuracy: 1.000\n",
      "Epoch: 1050, loss: 0.002, accuracy: 1.000\n",
      "Epoch: 1100, loss: 0.001, accuracy: 1.000\n",
      "Epoch: 1150, loss: 0.001, accuracy: 1.000\n",
      "Epoch: 1200, loss: 0.001, accuracy: 1.000\n",
      "Epoch: 1250, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1300, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1350, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1400, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1450, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1500, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1550, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1600, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1650, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1700, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1750, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1800, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1850, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1900, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 1950, loss: 0.009, accuracy: 1.000\n",
      "Epoch: 2000, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2050, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2100, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2150, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2200, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2250, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2300, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2350, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2400, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2450, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2500, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2550, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2600, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2650, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2700, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2750, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2800, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2850, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2900, loss: 0.000, accuracy: 1.000\n",
      "Epoch: 2950, loss: 0.000, accuracy: 1.000\n",
      "CPU times: total: 55min 20s\n",
      "Wall time: 55min 59s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "loss_fn = nn.CrossEntropyLoss()\n",
    "optimizer = optim.Adam(net_2.parameters(), lr=0.0001)\n",
    "\n",
    "for epoch in range(EPOCH):\n",
    "    loss_array = np.array([], dtype=float)\n",
    "    for i, batch in enumerate(train_loader):\n",
    "        optimizer.zero_grad()\n",
    "        X_batch, y_batch = batch\n",
    "        X_batch = X_batch.to('cuda')\n",
    "        y_batch = y_batch.to('cuda')\n",
    "        output = net_2.forward(X_batch)\n",
    "#         print(output, output.shape, output.type())\n",
    "#         print(y_batch, y_batch.shape, y_batch.type())\n",
    "        loss =loss_fn(output, y_batch)\n",
    "        loss.backward()\n",
    "        optimizer.step()\n",
    "        loss_array = np.append(loss_array, loss.to('cpu').detach().numpy())\n",
    "    if epoch % 50 == 0:\n",
    "        predict = torch.argmax(net_2.inference(images), dim=1)\n",
    "        good = (predict == labels).sum()\n",
    "        accuracy = good/BATCH_SIZE\n",
    "        print(f'Epoch: {epoch}, loss: {loss_array.mean():.3f}, accuracy: {accuracy:.3f}')"
   ]
  },
  {
   "cell_type": "raw",
   "id": "3b448b42",
   "metadata": {},
   "source": [
    "torch.save(net_2, 'model_2')"
   ]
  },
  {
   "cell_type": "raw",
   "id": "c944aa07",
   "metadata": {},
   "source": [
    "net_2 = torch.load('model_2')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 744,
   "id": "bb25ff9d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tensor(1., device='cuda:0')\n"
     ]
    }
   ],
   "source": [
    "predict = torch.argmax(net_2.inference(images), dim=1)\n",
    "good = (predict == labels).sum()\n",
    "accuracy = good/BATCH_SIZE\n",
    "print(accuracy)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51b4756a",
   "metadata": {},
   "source": [
    "## Проверка модели при продаже на тестовых данных"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 760,
   "id": "71059325",
   "metadata": {},
   "outputs": [],
   "source": [
    "trend_test = pd.read_csv('binance_features/BTC_ETH_BNB_test.csv', sep=';', names=['BTC/USTD','ETH/USTD','BNB/USTD', 'server_time'])\n",
    "trend_test['server_time'] = trend_test['server_time'].apply(lambda x: datetime.utcfromtimestamp(int(str(x)[:10])).strftime('%Y-%m-%d %H:%M:%S'))\n",
    "trend_test['server_time'] = pd.to_datetime(trend_test['server_time'])\n",
    "trend_test = trend_test.set_index('server_time')\n",
    "#trend_test = trend_test[50_000:55_000]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 761,
   "id": "99d18bf0",
   "metadata": {},
   "outputs": [],
   "source": [
    "trend_test['BTC/BNB'] = trend_test['BTC/USTD']/trend_test['BNB/USTD']\n",
    "trend_test['BTC/ETH'] = trend_test['BTC/USTD']/trend_test['ETH/USTD']\n",
    "trend_test['ETH/BNB'] = trend_test['ETH/USTD']/trend_test['BNB/USTD']"
   ]
  },
  {
   "cell_type": "raw",
   "id": "b6051bda",
   "metadata": {},
   "source": [
    "trend_test['BTC/BNB'] = 1/trend_test['BNB/BTC']\n",
    "trend_test['BTC/ETH'] = 1/trend_test['ETH/BTC']\n",
    "trend_test['ETH/BNB'] = 1/trend_test['BNB/ETH']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2bb870d6",
   "metadata": {},
   "source": [
    "### Проверка модели 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 762,
   "id": "1fc42566",
   "metadata": {},
   "outputs": [],
   "source": [
    "# coin_buy = {'name': 'BTC','quantity': 21, 'price_usdt': 19275}\n",
    "\n",
    "def buy(coin_buy, coin_sell, price, proba):\n",
    "    \n",
    "    all_coin_in_usdt_before = coin_buy['quantity']*coin_buy['price_usdt'] + coin_sell['quantity']*coin_sell['price_usdt']\n",
    "    \n",
    "    coin_sell_part = proba * np.clip((coin_sell['quantity']*coin_sell['price_usdt'])\n",
    "                                        /(coin_buy['quantity']*coin_buy['price_usdt']), 0, 0.6) * coin_sell['quantity']\n",
    "    coin_buy_part = coin_sell_part / price\n",
    "    fee = FEE * coin_buy_part\n",
    "    coin_sell_out = coin_sell['quantity'] - coin_sell_part\n",
    "    coin_buy_out = coin_buy['quantity'] + coin_buy_part #- fee\n",
    "    \n",
    "    all_coin_in_usdt_after = coin_buy_out*coin_buy['price_usdt'] + coin_sell_out*coin_sell['price_usdt']\n",
    "    profit = all_coin_in_usdt_after - all_coin_in_usdt_before\n",
    "    \n",
    "    if profit > -1:\n",
    "        coin_buy_out = coin_buy_out\n",
    "        coin_sell_out = coin_sell_out\n",
    "    else:\n",
    "        coin_buy_out = coin_buy['quantity']\n",
    "        coin_sell_out = coin_sell['quantity']\n",
    "    return coin_buy_out, coin_sell_out, fee*coin_buy['price_usdt'], profit\n",
    "    \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b577422",
   "metadata": {},
   "source": [
    "Поток данных организую в цикле, каждый цикл - имитация считывания в интервале 5 сек с сервака."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 763,
   "id": "4f7336cb",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "73233it [02:59, 409.06it/s]\n"
     ]
    }
   ],
   "source": [
    "btc = {'name': 'BTC', 'quantity': 100/19275, 'price_usdt': 19275}\n",
    "bnb = {'name': 'BNB', 'quantity': 100/275, 'price_usdt': 275}\n",
    "eth = {'name': 'ETH', 'quantity': 100/1306, 'price_usdt': 1306}\n",
    "\n",
    "btc_in_usdt = btc['quantity']*btc['price_usdt']\n",
    "bnb_in_usdt = bnb['quantity']*bnb['price_usdt']\n",
    "eth_in_usdt = eth['quantity']*eth['price_usdt']\n",
    "\n",
    "step_prev = trend_test[['BTC/BNB','BTC/ETH','ETH/BNB']].iloc[0]\n",
    "columns_result = ['server_time','btc_in_usdt', 'bnb_in_usdt', 'eth_in_usdt', 'fee_usdt', 'predict', 'predict_proba', 'price', 'profit_function']\n",
    "data = dict(zip(columns_result,[[step_prev.name],[btc_in_usdt], [bnb_in_usdt], [eth_in_usdt], [0], [0], [0], [0], [0]]))\n",
    "trade_result = pd.DataFrame(data)\n",
    "\n",
    "features_delta = np.zeros((1,3))\n",
    "predicts = np.zeros(0)\n",
    "predicts_proba = np.zeros(0)\n",
    "\n",
    "\n",
    "net_1 = net_1.to('cpu')\n",
    "\n",
    "for step in tqdm(trend_test[['BTC/BNB','BTC/ETH','ETH/BNB']].iloc[1:].iterrows()):\n",
    "    time = step[0]\n",
    "    step = step[1:][0]\n",
    "    delta = step - step_prev\n",
    "    delta_exp = np.expand_dims(delta, axis=0)\n",
    "    features_delta = np.append(features_delta, delta_exp, axis=0)\n",
    "    feattures_delta_transp = features_delta[-FEATURES_LENGHT:].T\n",
    "    step_prev = step\n",
    "    \n",
    "    # условие достаточного количества признаков для предсказания\n",
    "    if feattures_delta_transp.shape[1] == FEATURES_LENGHT:\n",
    "        max_min = feattures_delta_transp.max(axis=1) - feattures_delta_transp.min(axis=1)\n",
    "        features = np.divide(feattures_delta_transp.T, max_min).T\n",
    "        features = np.expand_dims(features, axis=0)\n",
    "        features = torch.tensor(features.astype('float32'))\n",
    "        predict_proba = net_1.inference(features)\n",
    "        predict = torch.argmax(predict_proba, dim=1).detach().item()\n",
    "        predict_proba = predict_proba.max().detach().item()\n",
    "\n",
    "        # действия с валютой\n",
    "        if predict == 0:\n",
    "            fee_usdt = 0\n",
    "            price = 0\n",
    "            profit = 0\n",
    "            \n",
    "        if predict == 1: # btc_bnb_buy\n",
    "            price = step[0]\n",
    "            btc['quantity'], bnb['quantity'], fee_usdt, profit = buy(btc, bnb, price, predict_proba)\n",
    "            \n",
    "        if predict == 2: # btc_bnb_sell\n",
    "            price = 1/step[0]\n",
    "            bnb['quantity'], btc['quantity'], fee_usdt, profit = buy(bnb, btc, price, predict_proba)            \n",
    "            \n",
    "        if predict == 3: # btc_eth_buy\n",
    "            price = step[1]\n",
    "            btc['quantity'], eth['quantity'], fee_usdt, profit = buy(btc, eth, price, predict_proba)\n",
    "            \n",
    "        if predict == 4: # btc_eth_sell\n",
    "            price = 1/step[1]\n",
    "            eth['quantity'], btc['quantity'], fee_usdt, profit = buy(eth, btc, price, predict_proba)\n",
    "            \n",
    "        if predict == 5: # eth_bnb_buy\n",
    "            price = step[2]\n",
    "            eth['quantity'], bnb['quantity'], fee_usdt, profit = buy(eth, bnb, price, predict_proba)\n",
    "            \n",
    "        if predict == 6: # eth_bnb_sell\n",
    "            price = 1/step[2]\n",
    "            bnb['quantity'], eth['quantity'], fee_usdt, profit = buy(bnb, eth, price, predict_proba)\n",
    "        \n",
    "        btc_in_usdt = btc['quantity']*btc['price_usdt']\n",
    "        bnb_in_usdt = bnb['quantity']*bnb['price_usdt']\n",
    "        eth_in_usdt = eth['quantity']*eth['price_usdt']\n",
    "        \n",
    "        data = dict(zip(columns_result,[[time],[btc_in_usdt], [bnb_in_usdt], [eth_in_usdt], [fee_usdt], [predict], [predict_proba], [price], [profit]]))\n",
    "        current_result = pd.DataFrame(data)\n",
    "        trade_result = pd.concat([trade_result, current_result])     \n",
    "\n",
    "trade_result = trade_result[1:].set_index('server_time')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 764,
   "id": "fcdf54ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "trade_result['quantity_in_usdt'] = trade_result[['btc_in_usdt','bnb_in_usdt','eth_in_usdt']].sum(axis=1)\n",
    "trade_result['profit_in_usdt'] = trade_result['quantity_in_usdt'] - trade_result['quantity_in_usdt'].shift(1) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 765,
   "id": "f292e459",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "After trade usdt: 334.09683563487226\n",
      "Sum all fee in usdt: 155.13518851907082\n",
      "Sum all profit in usdt > 0: 74.46197117054913\n",
      "Sum all profit in usdt <= 0: -40.36513553567687\n"
     ]
    }
   ],
   "source": [
    "print('After trade usdt:', trade_result['quantity_in_usdt'][-1])\n",
    "print('Sum all fee in usdt:', trade_result['fee_usdt'].sum())\n",
    "print('Sum all profit in usdt > 0:', trade_result[trade_result['profit_in_usdt'] > 0]['profit_in_usdt'].sum())\n",
    "print('Sum all profit in usdt <= 0:', trade_result[trade_result['profit_in_usdt'] <= 0]['profit_in_usdt'].sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 766,
   "id": "ca39e6b2",
   "metadata": {},
   "outputs": [],
   "source": [
    "trade_result = pd.merge(trade_result, trend_test, on='server_time')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 767,
   "id": "67805c31",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "predict\n",
       "0    70655\n",
       "1      519\n",
       "2      373\n",
       "3      318\n",
       "4      375\n",
       "5      439\n",
       "6      332\n",
       "Name: price, dtype: int64"
      ]
     },
     "execution_count": 767,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trade_result.groupby('predict')['price'].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 768,
   "id": "01c946ef",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "btc_in_usdt         336\n",
       "bnb_in_usdt         336\n",
       "eth_in_usdt         336\n",
       "fee_usdt            336\n",
       "predict             336\n",
       "predict_proba       336\n",
       "price               336\n",
       "profit_function     336\n",
       "quantity_in_usdt    336\n",
       "profit_in_usdt      336\n",
       "BTC/USTD            336\n",
       "ETH/USTD            336\n",
       "BNB/USTD            336\n",
       "BTC/BNB             336\n",
       "BTC/ETH             336\n",
       "ETH/BNB             336\n",
       "dtype: int64"
      ]
     },
     "execution_count": 768,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trade_result[trade_result['profit_function']>0.01].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 769,
   "id": "3c0fe33d",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>btc_in_usdt</th>\n",
       "      <th>bnb_in_usdt</th>\n",
       "      <th>eth_in_usdt</th>\n",
       "      <th>fee_usdt</th>\n",
       "      <th>predict</th>\n",
       "      <th>predict_proba</th>\n",
       "      <th>price</th>\n",
       "      <th>profit_function</th>\n",
       "      <th>quantity_in_usdt</th>\n",
       "      <th>profit_in_usdt</th>\n",
       "      <th>BTC/USTD</th>\n",
       "      <th>ETH/USTD</th>\n",
       "      <th>BNB/USTD</th>\n",
       "      <th>BTC/BNB</th>\n",
       "      <th>BTC/ETH</th>\n",
       "      <th>ETH/BNB</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>server_time</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-08-14 06:00:16</th>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.047000</td>\n",
       "      <td>5</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>6.062713</td>\n",
       "      <td>-13.000338</td>\n",
       "      <td>300.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>24597.29</td>\n",
       "      <td>1993.42</td>\n",
       "      <td>328.8</td>\n",
       "      <td>74.809276</td>\n",
       "      <td>12.339241</td>\n",
       "      <td>6.062713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-08-14 06:00:22</th>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.056274</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>74.731440</td>\n",
       "      <td>-3.725766</td>\n",
       "      <td>300.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24601.59</td>\n",
       "      <td>1993.89</td>\n",
       "      <td>329.2</td>\n",
       "      <td>74.731440</td>\n",
       "      <td>12.338489</td>\n",
       "      <td>6.056774</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-08-14 06:00:29</th>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.047064</td>\n",
       "      <td>5</td>\n",
       "      <td>0.999788</td>\n",
       "      <td>6.053097</td>\n",
       "      <td>-12.922928</td>\n",
       "      <td>300.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24598.61</td>\n",
       "      <td>1993.89</td>\n",
       "      <td>329.4</td>\n",
       "      <td>74.677019</td>\n",
       "      <td>12.336995</td>\n",
       "      <td>6.053097</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-08-14 06:00:35</th>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>300.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24606.09</td>\n",
       "      <td>1994.77</td>\n",
       "      <td>329.9</td>\n",
       "      <td>74.586511</td>\n",
       "      <td>12.335302</td>\n",
       "      <td>6.046590</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-08-14 06:00:41</th>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>300.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24606.97</td>\n",
       "      <td>1994.77</td>\n",
       "      <td>330.1</td>\n",
       "      <td>74.543987</td>\n",
       "      <td>12.335743</td>\n",
       "      <td>6.042926</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     btc_in_usdt  bnb_in_usdt  eth_in_usdt  fee_usdt  predict  \\\n",
       "server_time                                                                     \n",
       "2022-08-14 06:00:16        100.0        100.0        100.0  0.047000        5   \n",
       "2022-08-14 06:00:22        100.0        100.0        100.0  0.056274        1   \n",
       "2022-08-14 06:00:29        100.0        100.0        100.0  0.047064        5   \n",
       "2022-08-14 06:00:35        100.0        100.0        100.0  0.000000        0   \n",
       "2022-08-14 06:00:41        100.0        100.0        100.0  0.000000        0   \n",
       "\n",
       "                     predict_proba      price  profit_function  \\\n",
       "server_time                                                      \n",
       "2022-08-14 06:00:16       1.000000   6.062713       -13.000338   \n",
       "2022-08-14 06:00:22       1.000000  74.731440        -3.725766   \n",
       "2022-08-14 06:00:29       0.999788   6.053097       -12.922928   \n",
       "2022-08-14 06:00:35       1.000000   0.000000         0.000000   \n",
       "2022-08-14 06:00:41       1.000000   0.000000         0.000000   \n",
       "\n",
       "                     quantity_in_usdt  profit_in_usdt  BTC/USTD  ETH/USTD  \\\n",
       "server_time                                                                 \n",
       "2022-08-14 06:00:16             300.0             NaN  24597.29   1993.42   \n",
       "2022-08-14 06:00:22             300.0             0.0  24601.59   1993.89   \n",
       "2022-08-14 06:00:29             300.0             0.0  24598.61   1993.89   \n",
       "2022-08-14 06:00:35             300.0             0.0  24606.09   1994.77   \n",
       "2022-08-14 06:00:41             300.0             0.0  24606.97   1994.77   \n",
       "\n",
       "                     BNB/USTD    BTC/BNB    BTC/ETH   ETH/BNB  \n",
       "server_time                                                    \n",
       "2022-08-14 06:00:16     328.8  74.809276  12.339241  6.062713  \n",
       "2022-08-14 06:00:22     329.2  74.731440  12.338489  6.056774  \n",
       "2022-08-14 06:00:29     329.4  74.677019  12.336995  6.053097  \n",
       "2022-08-14 06:00:35     329.9  74.586511  12.335302  6.046590  \n",
       "2022-08-14 06:00:41     330.1  74.543987  12.335743  6.042926  "
      ]
     },
     "execution_count": 769,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trade_result.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 770,
   "id": "46a65ad2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x1000 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "interval_cols = trade_result.columns\n",
    "phik_overview = pd.DataFrame(trade_result, columns=interval_cols).phik_matrix(interval_cols=interval_cols)\n",
    "\n",
    "\n",
    "plot_correlation_matrix(phik_overview.values, \n",
    "                        x_labels=phik_overview.columns, \n",
    "                        y_labels=phik_overview.index, \n",
    "                        vmin=0, vmax=1, color_map=\"Greens\", \n",
    "                        title=r\"correlation $\\phi_K$\", \n",
    "                        fontsize_factor=1, \n",
    "                        figsize=(10, 10))\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 771,
   "id": "e464349a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='server_time', ylabel='quantity_in_usdt'>"
      ]
     },
     "execution_count": 771,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lineplot(data=trade_result, x=\"server_time\", y=\"quantity_in_usdt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 772,
   "id": "9c2df9a1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='server_time', ylabel='profit_in_usdt'>"
      ]
     },
     "execution_count": 772,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lineplot(data=trade_result, x=\"server_time\", y=\"profit_in_usdt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 773,
   "id": "2f4067ae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='server_time', ylabel='fee_usdt'>"
      ]
     },
     "execution_count": 773,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lineplot(data=trade_result, x=\"server_time\", y=\"fee_usdt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 774,
   "id": "d853b82c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='profit_in_usdt', ylabel='Count'>"
      ]
     },
     "execution_count": 774,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(data=trade_result[trade_result['profit_in_usdt']>0.1], x=\"profit_in_usdt\", bins = 100)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c85175cb",
   "metadata": {},
   "source": [
    "### Проверка модели 2"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bbfa519f",
   "metadata": {},
   "source": [
    "Поток данных организую в цикле, каждый цикл - имитация считывания в интервале 5 сек с сервака."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 775,
   "id": "d91e002e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "USDT before traid: 300.0\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "73233it [00:53, 1359.00it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "USDT after traid: 231.98\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "btc = 100/19275\n",
    "bnb = 100/275\n",
    "eth = 100/1306\n",
    "usdt = np.array([btc*19275+bnb*275+eth*1306])\n",
    "not_buy = 0\n",
    "btc_bnb_buy = 0\n",
    "btc_bnb_sell = 0\n",
    "btc_eth_buy = 0\n",
    "btc_eth_sell = 0\n",
    "eth_bnb_buy = 0\n",
    "eth_bnb_sell = 0\n",
    "\n",
    "fee = FEE\n",
    "\n",
    "net_2 = net_2.to('cpu')\n",
    "\n",
    "step_prev = trend_test[['BTC/BNB','BTC/ETH','ETH/BNB']].iloc[0]\n",
    "features_delta = np.zeros((1,3))\n",
    "predicts = np.zeros(1)\n",
    "\n",
    "print(f'USDT before traid: {usdt[0]}')\n",
    "\n",
    "for step in tqdm(trend_test[['BTC/BNB','BTC/ETH','ETH/BNB']].iloc[1:].iterrows()):\n",
    "    step = step[1:][0]\n",
    "    delta = step - step_prev\n",
    "    delta_exp = np.expand_dims(delta, axis=0)\n",
    "    features_delta = np.append(features_delta, delta_exp, axis=0)\n",
    "    feattures_delta_transp = features_delta[-FEATURES_LENGHT:].T\n",
    "    step_prev = step\n",
    "    \n",
    "    # условие достаточного количества признаков для предсказания\n",
    "    if feattures_delta_transp.shape[1] == FEATURES_LENGHT:\n",
    "        max_min = feattures_delta_transp.max(axis=1) - feattures_delta_transp.min(axis=1)\n",
    "        features = np.divide(feattures_delta_transp.T, max_min).T\n",
    "        features = np.expand_dims(features, axis=0)\n",
    "        features = torch.tensor(features.astype('float32'))\n",
    "#        features = features.to('cuda')\n",
    "        predict_proba = net_2.inference(features)\n",
    "        predict = torch.argmax(predict_proba, dim=1)\n",
    "#         predicts = np.append(predicts, predict.to('cpu'), axis=0)\n",
    "#         predict_proba = predict_proba.to('cpu')\n",
    "        predicts = np.append(predicts, predict, axis=0)\n",
    "        \n",
    "        # действия с валютой\n",
    "        if predict == 0:\n",
    "            not_buy += 1\n",
    "        elif predict == 1:\n",
    "            btc_bnb_buy += 1\n",
    "\n",
    "            bnb_sell = predict_proba.max().detach()*np.clip((bnb*275)/(btc*19275), 0, 0.6)*bnb\n",
    "            bnb = bnb - bnb_sell\n",
    "            btc = btc + (1-fee)*bnb_sell/step[0]\n",
    "            \n",
    "        elif predict == 2:\n",
    "            btc_bnb_sell += 1\n",
    "            \n",
    "            btc_sell = predict_proba.max().detach()*np.clip((btc*19275)/(bnb*275), 0, 0.6)*btc\n",
    "            btc = btc - btc_sell\n",
    "            bnb = bnb + (1-fee)*btc_sell * step[0]\n",
    "            \n",
    "        elif predict == 3:\n",
    "            btc_eth_buy += 1\n",
    "            \n",
    "            eth_sell = predict_proba.max().detach()*np.clip((eth*1306)/(btc*19275), 0, 0.6)*eth\n",
    "            eth = eth - eth_sell\n",
    "            btc = btc + (1-fee)*eth_sell/step[1]            \n",
    "            \n",
    "        elif predict == 4:\n",
    "            btc_eth_sell += 1\n",
    "            \n",
    "            btc_sell = predict_proba.max().detach()*np.clip((btc*19275)/(eth*1306), 0, 0.6)*btc\n",
    "            btc = btc - btc_sell\n",
    "            eth = eth + (1-fee)*btc_sell * step[1]\n",
    "            \n",
    "        elif predict == 5:\n",
    "            eth_bnb_buy += 1\n",
    "            \n",
    "            bnb_sell = predict_proba.max().detach()*np.clip((bnb*275)/(eth*1306), 0, 0.6)*bnb\n",
    "            bnb = bnb - bnb_sell\n",
    "            eth = eth + (1-fee)*bnb_sell/step[2]              \n",
    "            \n",
    "        elif predict == 6:\n",
    "            eth_bnb_sell += 1\n",
    "            \n",
    "            eth_sell = predict_proba.max().detach()*np.clip((eth*1306)/(bnb*275), 0, 0.6)*eth\n",
    "            eth = eth - eth_sell\n",
    "            bnb = bnb + (1-fee)*eth_sell * step[2]            \n",
    "            \n",
    "            \n",
    "        usdt = np.append(usdt, np.array([btc*19275+bnb*275+eth*1306]), axis=0)\n",
    "\n",
    "print(f'USDT after traid: {usdt[-1]:.2f}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 776,
   "id": "3ff8f7c3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Распределение торговых сделок:\n",
      " Нет сделки - 70534\n",
      " btc_bnb_buy - 580\n",
      " btc_bnb_sell - 548\n",
      " btc_eth_buy - 275\n",
      " btc_eth_sell - 322\n",
      " eth_bnb_buy - 366\n",
      " eth_bnb_sell - 386\n",
      "Распределение валют после торгов в USDT:\n",
      " BTC - 111.3680\n",
      " BNB - 70.5178\n",
      " ETH - 50.0971\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "print(f'Распределение торговых сделок:\\n',\n",
    "      f'Нет сделки - {not_buy}\\n btc_bnb_buy - {btc_bnb_buy}\\n btc_bnb_sell - {btc_bnb_sell}\\n'\n",
    "      f' btc_eth_buy - {btc_eth_buy}\\n btc_eth_sell - {btc_eth_sell}\\n eth_bnb_buy - {eth_bnb_buy}\\n eth_bnb_sell - {eth_bnb_sell}')\n",
    "\n",
    "print(f'Распределение валют после торгов в USDT:\\n',\n",
    "      f'BTC - {btc*19275:.4f}\\n BNB - {bnb*275:.4f}\\n ETH - {eth*1306:.4f}\\n')\n",
    "\n",
    "plt.plot(usdt)\n",
    "plt.grid(visible=True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 777,
   "id": "1b522a52",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(trend_test['BTC/USTD'])\n",
    "plt.grid(visible=True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "raw",
   "id": "6874b28b",
   "metadata": {},
   "source": [
    "Распределение торговых сделок:\n",
    " Нет сделки - 50014\n",
    " btc_bnb_buy - 5113\n",
    " btc_bnb_sell - 2634\n",
    " btc_eth_buy - 2666\n",
    " btc_eth_sell - 3649\n",
    " eth_bnb_buy - 4301\n",
    " eth_bnb_sell - 4634\n",
    "Распределение валют после торгов в USDT:\n",
    " BTC - 363.9369\n",
    " BNB - 29.0470\n",
    " ETH - 37.4772\n",
    "USDT before traid: 300.0\n",
    "USDT after traid: 430.46"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ca2e074b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ce5dc570",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.4"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "341.3px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
